

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jan 13 14:20:28 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F25K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    46  0000                     
    47                           ; Version 2.20
    48                           ; Generated 05/05/2020 GMT
    49                           ; 
    50                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F25K42 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82 ;; Function _IOCBF2_DefaultInterruptHandler is unused but had its address taken
    83  0000                     
    84                           	psect	idataCOMRAM
    85  00113E                     __pidataCOMRAM:
    86                           	callstack 0
    87                           
    88                           ;initializer for _gConPollPacket
    89  00113E  00                 	db	0
    90  00113F  00                 	db	0
    91  001140  83                 	db	131
    92  001141  83                 	db	131
    93  001142  7D                 	db	125
    94  001143  7D                 	db	125
    95  001144  00                 	db	0
    96  001145  00                 	db	0
    97                           
    98                           ;initializer for _cx_low
    99  001146  006C               	dw	108
   100                           
   101                           ;initializer for _sy_high
   102  001148  018E               	dw	398
   103                           
   104                           ;initializer for _sy_center
   105  00114A  00FC               	dw	252
   106                           
   107                           ;initializer for _sy_low
   108  00114C  008C               	dw	140
   109                           
   110                           ;initializer for _sx_high
   111  00114E  0181               	dw	385
   112                           
   113                           ;initializer for _sx_center
   114  001150  00FE               	dw	254
   115                           
   116                           ;initializer for _sx_low
   117  001152  0083               	dw	131
   118                           
   119                           ;initializer for _gCommandPollMask
   120  001154  BF                 	db	191
   121                           
   122                           ;initializer for _gCommandOriginMask
   123  001155  BE                 	db	190
   124                           
   125                           ;initializer for _gLowThreshold
   126  001156  1A                 	db	26
   127                           
   128                           ;initializer for _gInBitCounter
   129  001157  08                 	db	8
   130                           
   131                           ;initializer for _gConBitCounter
   132  001158  08                 	db	8
   133                           
   134                           	psect	idataBANK0
   135  0010CC                     __pidataBANK0:
   136                           	callstack 0
   137                           
   138                           ;initializer for _gConOriginResponse
   139  0010CC  00                 	db	0
   140  0010CD  80                 	db	128
   141  0010CE  80                 	db	128
   142  0010CF  80                 	db	128
   143  0010D0  80                 	db	128
   144  0010D1  80                 	db	128
   145  0010D2  00                 	db	0
   146  0010D3  00                 	db	0
   147  0010D4  02                 	db	2
   148  0010D5  02                 	db	2
   149                           
   150                           ;initializer for _gConProbeResponse
   151  0010D6  09                 	db	9
   152  0010D7  00                 	db	0
   153  0010D8  03                 	db	3
   154                           
   155                           ;initializer for _cy_lowMultiplier
   156  0010D9  00C9               	dw	201
   157                           
   158                           ;initializer for _cy_highMultiplier
   159  0010DB  00C3               	dw	195
   160                           
   161                           ;initializer for _cx_lowMultiplier
   162  0010DD  00B1               	dw	177
   163                           
   164                           ;initializer for _cx_highMultiplier
   165  0010DF  0101               	dw	257
   166                           
   167                           ;initializer for _sy_lowMultiplier
   168  0010E1  00E4               	dw	228
   169                           
   170                           ;initializer for _sy_highMultiplier
   171  0010E3  00AF               	dw	175
   172                           
   173                           ;initializer for _sx_lowMultiplier
   174  0010E5  00E8               	dw	232
   175                           
   176                           ;initializer for _sx_highMultiplier
   177  0010E7  00C8               	dw	200
   178                           
   179                           ;initializer for _cy_high
   180  0010E9  0181               	dw	385
   181                           
   182                           ;initializer for _cy_center
   183  0010EB  00FE               	dw	254
   184                           
   185                           ;initializer for _cy_low
   186  0010ED  007F               	dw	127
   187                           
   188                           ;initializer for _cx_high
   189  0010EF  0163               	dw	355
   190                           
   191                           ;initializer for _cx_center
   192  0010F1  00FC               	dw	252
   193                           
   194                           	psect	nvBANK0
   195  0000FE                     __pnvBANK0:
   196                           	callstack 0
   197  0000FE                     _IOCBF2_InterruptHandler:
   198                           	callstack 0
   199  0000FE                     	ds	2
   200  0000                     _PIR0bits	set	14752
   201  0000                     _NVMDAT	set	14819
   202  0000                     _NVMADRL	set	14816
   203  0000                     _NVMCON2	set	14822
   204  0000                     _NVMCON1bits	set	14821
   205  0000                     _IPR1bits	set	14721
   206  0000                     _PIR1bits	set	14753
   207  0000                     _PIE1bits	set	14737
   208  0000                     _PMD7	set	14791
   209  0000                     _PMD6	set	14790
   210  0000                     _PMD5	set	14789
   211  0000                     _PMD4	set	14788
   212  0000                     _PMD3	set	14787
   213  0000                     _PMD2	set	14786
   214  0000                     _PMD1	set	14785
   215  0000                     _PMD0	set	14784
   216  0000                     _OSCTUNE	set	14814
   217  0000                     _OSCFRQ	set	14815
   218  0000                     _OSCEN	set	14813
   219  0000                     _OSCCON3	set	14811
   220  0000                     _OSCCON1	set	14809
   221  0000                     _SMT1SIGPPS	set	15058
   222  0000                     _IOCBPbits	set	14933
   223  0000                     _IOCBNbits	set	14934
   224  0000                     _IOCBFbits	set	14935
   225  0000                     _INLVLE	set	14980
   226  0000                     _INLVLC	set	14948
   227  0000                     _INLVLB	set	14932
   228  0000                     _INLVLA	set	14916
   229  0000                     _SLRCONC	set	14947
   230  0000                     _SLRCONB	set	14931
   231  0000                     _SLRCONA	set	14915
   232  0000                     _ODCONC	set	14946
   233  0000                     _ODCONB	set	14930
   234  0000                     _ODCONA	set	14914
   235  0000                     _RC4I2C	set	14955
   236  0000                     _RC3I2C	set	14954
   237  0000                     _RB2I2C	set	14939
   238  0000                     _RB1I2C	set	14938
   239  0000                     _WPUC	set	14945
   240  0000                     _WPUA	set	14913
   241  0000                     _WPUB	set	14929
   242  0000                     _WPUE	set	14977
   243  0000                     _ANSELA	set	14912
   244  0000                     _ANSELB	set	14928
   245  0000                     _ANSELC	set	14944
   246  0000                     _ADCON1bits	set	16121
   247  0000                     _ADERRL	set	16098
   248  0000                     _ADERRH	set	16099
   249  0000                     _ADPREVL	set	16109
   250  0000                     _ADPREVH	set	16110
   251  0000                     _ADFLTRL	set	16102
   252  0000                     _ADFLTRH	set	16103
   253  0000                     _ADSTATbits	set	16124
   254  0000                     _ADACCL	set	16104
   255  0000                     _ADACCH	set	16105
   256  0000                     _ADCON2bits	set	16122
   257  0000                     _ADCNT	set	16107
   258  0000                     _ADCON3bits	set	16123
   259  0000                     _ADRESL	set	16111
   260  0000                     _ADRESH	set	16112
   261  0000                     _ADCON0bits	set	16120
   262  0000                     _ADCON0	set	16120
   263  0000                     _ADCLK	set	16127
   264  0000                     _ADACT	set	16126
   265  0000                     _ADREF	set	16125
   266  0000                     _ADSTAT	set	16124
   267  0000                     _ADCON3	set	16123
   268  0000                     _ADCON2	set	16122
   269  0000                     _ADCON1	set	16121
   270  0000                     _ADPREH	set	16119
   271  0000                     _ADPREL	set	16118
   272  0000                     _ADCAP	set	16117
   273  0000                     _ADACQH	set	16116
   274  0000                     _ADACQL	set	16115
   275  0000                     _ADPCH	set	16113
   276  0000                     _ADRPT	set	16108
   277  0000                     _ADACCU	set	16106
   278  0000                     _ADSTPTH	set	16101
   279  0000                     _ADSTPTL	set	16100
   280  0000                     _ADUTHH	set	16097
   281  0000                     _ADUTHL	set	16096
   282  0000                     _ADLTHH	set	16095
   283  0000                     _ADLTHL	set	16094
   284  0000                     _SMT1TMR	set	16146
   285  0000                     _SMT1CPR	set	16149
   286  0000                     _SMT1CPW	set	16152
   287  0000                     _SMT1PR	set	16155
   288  0000                     _SMT1CPWL	set	16152
   289  0000                     _SMT1STATbits	set	16160
   290  0000                     _SMT1CON0bits	set	16158
   291  0000                     _SMT1CON1bits	set	16159
   292  0000                     _SMT1PRL	set	16155
   293  0000                     _SMT1PRH	set	16156
   294  0000                     _SMT1PRU	set	16157
   295  0000                     _SMT1SIG	set	16162
   296  0000                     _SMT1WIN	set	16163
   297  0000                     _SMT1CLK	set	16161
   298  0000                     _SMT1STAT	set	16160
   299  0000                     _SMT1CON1	set	16159
   300  0000                     _SMT1CON0	set	16158
   301  0000                     _TABLAT	set	16373
   302  0000                     _TBLPTRL	set	16374
   303  0000                     _TBLPTRH	set	16375
   304  0000                     _TBLPTRU	set	16376
   305  0000                     _PORTBbits	set	16331
   306  0000                     _PORTCbits	set	16332
   307  0000                     _PORTAbits	set	16330
   308  0000                     _INTCON0bits	set	16338
   309  0000                     _TRISC	set	16324
   310  0000                     _TRISB	set	16323
   311  0000                     _TRISA	set	16322
   312  0000                     _LATC	set	16316
   313  0000                     _LATB	set	16315
   314  0000                     _LATA	set	16314
   315                           
   316                           ; #config settings
   317                           
   318                           	psect	cinit
   319  000C2A                     __pcinit:
   320                           	callstack 0
   321  000C2A                     start_initialization:
   322                           	callstack 0
   323  000C2A                     __initialization:
   324                           	callstack 0
   325                           
   326                           ; Initialize objects allocated to BANK0 (39 bytes)
   327                           ; load TBLPTR registers with __pidataBANK0
   328  000C2A  0ECC               	movlw	low __pidataBANK0
   329  000C2C  6EF6               	movwf	tblptrl,c
   330  000C2E  0E10               	movlw	high __pidataBANK0
   331  000C30  6EF7               	movwf	tblptrh,c
   332  000C32  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   333  000C34  6EF8               	movwf	tblptru,c
   334  000C36  EE00  F0D7         	lfsr	0,__pdataBANK0
   335  000C3A  EE10 F027          	lfsr	1,39
   336  000C3E                     copy_data0:
   337  000C3E  0009               	tblrd		*+
   338  000C40  006F FFD7 FFEE     	movff	tablat,postinc0
   339  000C46  50E5               	movf	postdec1,w,c
   340  000C48  50E1               	movf	fsr1l,w,c
   341  000C4A  E1F9               	bnz	copy_data0
   342                           
   343                           ; Initialize objects allocated to COMRAM (27 bytes)
   344                           ; load TBLPTR registers with __pidataCOMRAM
   345  000C4C  0E3E               	movlw	low __pidataCOMRAM
   346  000C4E  6EF6               	movwf	tblptrl,c
   347  000C50  0E11               	movlw	high __pidataCOMRAM
   348  000C52  6EF7               	movwf	tblptrh,c
   349  000C54  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   350  000C56  6EF8               	movwf	tblptru,c
   351  000C58  EE00  F030         	lfsr	0,__pdataCOMRAM
   352  000C5C  EE10 F01B          	lfsr	1,27
   353  000C60                     copy_data1:
   354  000C60  0009               	tblrd		*+
   355  000C62  006F FFD7 FFEE     	movff	tablat,postinc0
   356  000C68  50E5               	movf	postdec1,w,c
   357  000C6A  50E1               	movf	fsr1l,w,c
   358  000C6C  E1F9               	bnz	copy_data1
   359                           
   360                           ; Clear objects allocated to BANK1 (60 bytes)
   361  000C6E  EE00  F100         	lfsr	0,__pbssBANK1
   362  000C72  0E3C               	movlw	60
   363  000C74                     clear_0:
   364  000C74  6AEE               	clrf	postinc0,c
   365  000C76  06E8               	decf	wreg,f,c
   366  000C78  E1FD               	bnz	clear_0
   367                           
   368                           ; Clear objects allocated to BANK0 (119 bytes)
   369  000C7A  EE00  F060         	lfsr	0,__pbssBANK0
   370  000C7E  0E77               	movlw	119
   371  000C80                     clear_1:
   372  000C80  6AEE               	clrf	postinc0,c
   373  000C82  06E8               	decf	wreg,f,c
   374  000C84  E1FD               	bnz	clear_1
   375                           
   376                           ; Clear objects allocated to COMRAM (47 bytes)
   377  000C86  EE00  F001         	lfsr	0,__pbssCOMRAM
   378  000C8A  0E2F               	movlw	47
   379  000C8C                     clear_2:
   380  000C8C  6AEE               	clrf	postinc0,c
   381  000C8E  06E8               	decf	wreg,f,c
   382  000C90  E1FD               	bnz	clear_2
   383                           
   384                           ;
   385                           ; Setup IVTBASE
   386                           ;
   387  000C92  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   388  000C94  6ED5               	movwf	213,c
   389  000C96  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   390  000C98  6ED6               	movwf	214,c
   391  000C9A  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   392  000C9C  6ED7               	movwf	215,c
   393  000C9E                     end_of_initialization:
   394                           	callstack 0
   395  000C9E                     __end_of__initialization:
   396                           	callstack 0
   397  000C9E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   398  000CA0  6EF8               	movwf	tblptru,c
   399  000CA2  0100               	movlb	0
   400  000CA4  EF17  F005         	goto	_main	;jump to C main() function
   401                           
   402                           	psect	bssCOMRAM
   403  000001                     __pbssCOMRAM:
   404                           	callstack 0
   405  000001                     _tmplowm@joysticks$F1611:
   406                           	callstack 0
   407  000001                     	ds	2
   408  000003                     _tmphighm@joysticks$F1610:
   409                           	callstack 0
   410  000003                     	ds	2
   411  000005                     _tmpcenter@joysticks$F1609:
   412                           	callstack 0
   413  000005                     	ds	2
   414  000007                     _tmplow@joysticks$F1608:
   415                           	callstack 0
   416  000007                     	ds	2
   417  000009                     _tmphigh@joysticks$F1607:
   418                           	callstack 0
   419  000009                     	ds	2
   420  00000B                     _adc_read:
   421                           	callstack 0
   422  00000B                     	ds	2
   423  00000D                     	ds	1
   424  00000E                     	ds	1
   425  00000F                     	ds	1
   426  000010                     	ds	1
   427  000011                     	ds	1
   428  000012                     	ds	1
   429  000013                     _clearRead@joysticks$F1614:
   430                           	callstack 0
   431  000013                     	ds	1
   432  000014                     _initiatedRead@joysticks$F1613:
   433                           	callstack 0
   434  000014                     	ds	1
   435  000015                     _stickIdx@joysticks$F1612:
   436                           	callstack 0
   437  000015                     	ds	1
   438  000016                     	ds	1
   439  000017                     	ds	1
   440  000018                     	ds	1
   441  000019                     _stickcalibration:
   442                           	callstack 0
   443  000019                     	ds	1
   444  00001A                     	ds	1
   445  00001B                     	ds	1
   446  00001C                     	ds	1
   447  00001D                     _testpulse:
   448                           	callstack 0
   449  00001D                     	ds	1
   450  00001E                     	ds	1
   451  00001F                     	ds	1
   452  000020                     	ds	1
   453  000021                     _testcount:
   454                           	callstack 0
   455  000021                     	ds	1
   456  000022                     	ds	1
   457  000023                     	ds	1
   458  000024                     	ds	1
   459  000025                     	ds	1
   460  000026                     	ds	1
   461  000027                     	ds	1
   462  000028                     _gInStatus:
   463                           	callstack 0
   464  000028                     	ds	1
   465  000029                     _gInPacketIdx:
   466                           	callstack 0
   467  000029                     	ds	1
   468  00002A                     _gInCommandByte:
   469                           	callstack 0
   470  00002A                     	ds	1
   471  00002B                     _gInPulseWidth:
   472                           	callstack 0
   473  00002B                     	ds	1
   474  00002C                     _gInBitBufferIdx:
   475                           	callstack 0
   476  00002C                     	ds	1
   477  00002D                     _gConOutIdx:
   478                           	callstack 0
   479  00002D                     	ds	1
   480  00002E                     _gConByteCount:
   481                           	callstack 0
   482  00002E                     	ds	1
   483  00002F                     _gConOutByte:
   484                           	callstack 0
   485  00002F                     	ds	1
   486                           
   487                           	psect	dataCOMRAM
   488  000030                     __pdataCOMRAM:
   489                           	callstack 0
   490  000030                     _gConPollPacket:
   491                           	callstack 0
   492  000030                     	ds	8
   493  000038                     _cx_low:
   494                           	callstack 0
   495  000038                     	ds	2
   496  00003A                     _sy_high:
   497                           	callstack 0
   498  00003A                     	ds	2
   499  00003C                     _sy_center:
   500                           	callstack 0
   501  00003C                     	ds	2
   502  00003E                     _sy_low:
   503                           	callstack 0
   504  00003E                     	ds	2
   505  000040                     _sx_high:
   506                           	callstack 0
   507  000040                     	ds	2
   508  000042                     _sx_center:
   509                           	callstack 0
   510  000042                     	ds	2
   511  000044                     _sx_low:
   512                           	callstack 0
   513  000044                     	ds	2
   514  000046                     _gCommandPollMask:
   515                           	callstack 0
   516  000046                     	ds	1
   517  000047                     _gCommandOriginMask:
   518                           	callstack 0
   519  000047                     	ds	1
   520  000048                     _gLowThreshold:
   521                           	callstack 0
   522  000048                     	ds	1
   523  000049                     _gInBitCounter:
   524                           	callstack 0
   525  000049                     	ds	1
   526  00004A                     _gConBitCounter:
   527                           	callstack 0
   528  00004A                     	ds	1
   529                           
   530                           	psect	bssBANK0
   531  000060                     __pbssBANK0:
   532                           	callstack 0
   533  000060                     _gInPacket:
   534                           	callstack 0
   535  000060                     	ds	4
   536  000064                     	ds	2
   537  000066                     	ds	2
   538  000068                     	ds	2
   539  00006A                     	ds	2
   540  00006C                     	ds	2
   541  00006E                     	ds	2
   542  000070                     	ds	2
   543  000072                     	ds	2
   544  000074                     	ds	2
   545  000076                     	ds	2
   546  000078                     	ds	2
   547  00007A                     	ds	2
   548  00007C                     	ds	2
   549  00007E                     	ds	2
   550  000080                     	ds	2
   551  000082                     	ds	2
   552  000084                     	ds	2
   553  000086                     	ds	2
   554  000088                     	ds	2
   555  00008A                     	ds	2
   556  00008C                     	ds	2
   557  00008E                     	ds	2
   558  000090                     	ds	2
   559  000092                     	ds	2
   560  000094                     	ds	2
   561  000096                     	ds	2
   562  000098                     	ds	2
   563  00009A                     	ds	2
   564  00009C                     	ds	2
   565  00009E                     	ds	2
   566  0000A0                     	ds	2
   567  0000A2                     	ds	2
   568  0000A4                     	ds	2
   569  0000A6                     	ds	2
   570  0000A8                     	ds	2
   571  0000AA                     _SettingData:
   572                           	callstack 0
   573  0000AA                     	ds	45
   574                           
   575                           	psect	dataBANK0
   576  0000D7                     __pdataBANK0:
   577                           	callstack 0
   578  0000D7                     _gConOriginResponse:
   579                           	callstack 0
   580  0000D7                     	ds	10
   581  0000E1                     _gConProbeResponse:
   582                           	callstack 0
   583  0000E1                     	ds	3
   584  0000E4                     _cy_lowMultiplier:
   585                           	callstack 0
   586  0000E4                     	ds	2
   587  0000E6                     _cy_highMultiplier:
   588                           	callstack 0
   589  0000E6                     	ds	2
   590  0000E8                     _cx_lowMultiplier:
   591                           	callstack 0
   592  0000E8                     	ds	2
   593  0000EA                     _cx_highMultiplier:
   594                           	callstack 0
   595  0000EA                     	ds	2
   596  0000EC                     _sy_lowMultiplier:
   597                           	callstack 0
   598  0000EC                     	ds	2
   599  0000EE                     _sy_highMultiplier:
   600                           	callstack 0
   601  0000EE                     	ds	2
   602  0000F0                     _sx_lowMultiplier:
   603                           	callstack 0
   604  0000F0                     	ds	2
   605  0000F2                     _sx_highMultiplier:
   606                           	callstack 0
   607  0000F2                     	ds	2
   608  0000F4                     _cy_high:
   609                           	callstack 0
   610  0000F4                     	ds	2
   611  0000F6                     _cy_center:
   612                           	callstack 0
   613  0000F6                     	ds	2
   614  0000F8                     _cy_low:
   615                           	callstack 0
   616  0000F8                     	ds	2
   617  0000FA                     _cx_high:
   618                           	callstack 0
   619  0000FA                     	ds	2
   620  0000FC                     _cx_center:
   621                           	callstack 0
   622  0000FC                     	ds	2
   623                           
   624                           	psect	bssBANK1
   625  000100                     __pbssBANK1:
   626                           	callstack 0
   627  000100                     _gInBitBuffer:
   628                           	callstack 0
   629  000100                     	ds	60
   630                           
   631                           	psect	cstackBANK1
   632  00013C                     __pcstackBANK1:
   633                           	callstack 0
   634  00013C                     ??_scansticks:
   635  00013C                     getmultiplier@distance:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x0
   639  00013C                     	ds	2
   640  00013E                     getmultiplier@ratio:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x2
   644  00013E                     	ds	2
   645  000140                     _getmultiplier$2844:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x4
   649  000140                     	ds	2
   650                           
   651                           	psect	cstackCOMRAM
   652  00004B                     __pcstackCOMRAM:
   653                           	callstack 0
   654  00004B                     ??_INTERRUPT_InterruptManagerHigh:
   655  00004B                     
   656                           ; 1 bytes @ 0x0
   657  00004B                     	ds	4
   658  00004F                     ??_calibratesticks:
   659  00004F                     ??_checkbuttons:
   660  00004F                     ?___wmul:
   661                           	callstack 0
   662  00004F                     ?___lwdiv:
   663                           	callstack 0
   664  00004F                     DATAEE_WriteByte@bData:
   665                           	callstack 0
   666  00004F                     DATAEE_ReadByte@bAdd:
   667                           	callstack 0
   668  00004F                     IOCBF2_SetInterruptHandler@InterruptHandler:
   669                           	callstack 0
   670  00004F                     ___wmul@multiplier:
   671                           	callstack 0
   672  00004F                     ___lwdiv@dividend:
   673                           	callstack 0
   674  00004F                     memset@p1:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x4
   678  00004F                     	ds	1
   679  000050                     DATAEE_WriteByte@bAdd:
   680                           	callstack 0
   681                           
   682                           ; 1 bytes @ 0x5
   683  000050                     	ds	1
   684  000051                     DATAEE_WriteByte@GIEBitValue:
   685                           	callstack 0
   686  000051                     ___wmul@multiplicand:
   687                           	callstack 0
   688  000051                     ___lwdiv@divisor:
   689                           	callstack 0
   690  000051                     memset@c:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x6
   694  000051                     	ds	1
   695  000052                     savesettings@writing:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x7
   699  000052                     	ds	1
   700  000053                     ___lwdiv@counter:
   701                           	callstack 0
   702  000053                     ___wmul@product:
   703                           	callstack 0
   704  000053                     memset@n:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x8
   708  000053                     	ds	1
   709  000054                     savesettings@i:
   710                           	callstack 0
   711  000054                     ___lwdiv@quotient:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x9
   715  000054                     	ds	1
   716  000055                     slinjim@dividend:
   717                           	callstack 0
   718  000055                     memset@p:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0xA
   722  000055                     	ds	1
   723  000056                     ?_getmultiplier:
   724                           	callstack 0
   725  000056                     getmultiplier@high:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0xB
   729  000056                     	ds	1
   730  000057                     slinjim@multiplier:
   731                           	callstack 0
   732  000057                     loadsettings@loading:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0xC
   736  000057                     	ds	1
   737  000058                     getmultiplier@low:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0xD
   741  000058                     	ds	1
   742  000059                     loadsettings@i:
   743                           	callstack 0
   744  000059                     slinjim@conversion:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0xE
   748  000059                     	ds	1
   749  00005A                     
   750                           ; 1 bytes @ 0xF
   751  00005A                     	ds	1
   752  00005B                     
   753                           ; 1 bytes @ 0x10
   754 ;;
   755 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   756 ;;
   757 ;; *************** function _main *****************
   758 ;; Defined at:
   759 ;;		line 66 in file "main.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;		None
   762 ;; Auto vars:     Size  Location     Type
   763 ;;		None
   764 ;; Return value:  Size  Location     Type
   765 ;;                  1    wreg      void 
   766 ;; Registers used:
   767 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   773 ;;      Params:         0       0       0       0       0       0       0       0       0
   774 ;;      Locals:         0       0       0       0       0       0       0       0       0
   775 ;;      Temps:          0       0       0       0       0       0       0       0       0
   776 ;;      Totals:         0       0       0       0       0       0       0       0       0
   777 ;;Total ram usage:        0 bytes
   778 ;; Hardware stack levels required when called: 5
   779 ;; This function calls:
   780 ;;		_SYSTEM_Initialize
   781 ;;		_bytecleanup
   782 ;;		_bytepush
   783 ;;		_calibratesticks
   784 ;;		_checkbuttons
   785 ;;		_commandreader
   786 ;;		_loadsettings
   787 ;;		_savesettings
   788 ;;		_scansticks
   789 ;;		_setstickmultipliers
   790 ;;		_zerosticks
   791 ;; This function is called by:
   792 ;;		Startup code after reset
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           	psect	text0
   797  000A2E                     __ptext0:
   798                           	callstack 0
   799  000A2E                     _main:
   800                           	callstack 26
   801  000A2E  0E60               	movlw	_gInPacket	;# 
   802  000A30  006F FFA0  F029    	movff	wreg,_gInPacketIdx	;# 
   803  000A36                     
   804                           ;main.c: 71:     SYSTEM_Initialize();
   805  000A36  ECBA  F008         	call	_SYSTEM_Initialize	;wreg free
   806  000A3A                     
   807                           ;main.c: 74:     loadsettings();
   808  000A3A  ECD0  F005         	call	_loadsettings	;wreg free
   809  000A3E                     
   810                           ;main.c: 77:     ADPCH = 0x00;
   811  000A3E  0E00               	movlw	0
   812  000A40  013E               	movlb	62	; () banked
   813  000A42  6FF1               	movwf	241,b	;volatile
   814  000A44                     
   815                           ; BSR set to: 62
   816                           ;main.c: 79:     ADCON0bits.ADON = 1;
   817  000A44  8FF8               	bsf	248,7,b	;volatile
   818  000A46                     
   819                           ; BSR set to: 62
   820                           ;main.c: 82:     if (!PORTAbits.RA6 && !PORTAbits.RA7 && !PORTAbits.RA4)
   821  000A46  BCCA               	btfsc	202,6,c	;volatile
   822  000A48  EF28  F005         	goto	u1261
   823  000A4C  EF2A  F005         	goto	u1260
   824  000A50                     u1261:
   825  000A50  EF4F  F005         	goto	l3672
   826  000A54                     u1260:
   827  000A54                     
   828                           ; BSR set to: 62
   829  000A54  BECA               	btfsc	202,7,c	;volatile
   830  000A56  EF2F  F005         	goto	u1271
   831  000A5A  EF31  F005         	goto	u1270
   832  000A5E                     u1271:
   833  000A5E  EF4F  F005         	goto	l3672
   834  000A62                     u1270:
   835  000A62                     
   836                           ; BSR set to: 62
   837  000A62  B8CA               	btfsc	202,4,c	;volatile
   838  000A64  EF36  F005         	goto	u1281
   839  000A68  EF38  F005         	goto	u1280
   840  000A6C                     u1281:
   841  000A6C  EF4F  F005         	goto	l3672
   842  000A70                     u1280:
   843  000A70                     
   844                           ; BSR set to: 62
   845                           ;main.c: 83:     {;main.c: 84:         stickcalibration = 1;
   846  000A70  0E01               	movlw	1
   847  000A72  6E19               	movwf	_stickcalibration^0,c
   848  000A74                     
   849                           ; BSR set to: 62
   850                           ;main.c: 86:         zerosticks();
   851  000A74  ECA5  F007         	call	_zerosticks	;wreg free
   852  000A78  EF4F  F005         	goto	l3672
   853  000A7C                     l3662:
   854                           
   855                           ;main.c: 90:     {;main.c: 91:         calibratesticks();
   856  000A7C  EC90  F001         	call	_calibratesticks	;wreg free
   857  000A80                     
   858                           ;main.c: 94:         if (!PORTCbits.RC1)
   859  000A80  B2CC               	btfsc	204,1,c	;volatile
   860  000A82  EF45  F005         	goto	u1291
   861  000A86  EF47  F005         	goto	u1290
   862  000A8A                     u1291:
   863  000A8A  EF4F  F005         	goto	l3672
   864  000A8E                     u1290:
   865  000A8E                     
   866                           ;main.c: 95:         {;main.c: 96:             setstickmultipliers();
   867  000A8E  ECA6  F004         	call	_setstickmultipliers	;wreg free
   868  000A92                     
   869                           ;main.c: 97:             savesettings();
   870  000A92  EC20  F008         	call	_savesettings	;wreg free
   871  000A96                     
   872                           ;main.c: 98:             stickcalibration = 0;
   873  000A96  0E00               	movlw	0
   874  000A98  6E19               	movwf	_stickcalibration^0,c
   875                           
   876                           ;main.c: 99:             break;
   877  000A9A  EF57  F005         	goto	l832
   878  000A9E                     l3672:
   879                           
   880                           ;main.c: 89:     while (stickcalibration)
   881  000A9E  5019               	movf	_stickcalibration^0,w,c
   882  000AA0  A4D8               	btfss	status,2,c
   883  000AA2  EF55  F005         	goto	u1301
   884  000AA6  EF57  F005         	goto	u1300
   885  000AAA                     u1301:
   886  000AAA  EF3E  F005         	goto	l3662
   887  000AAE                     u1300:
   888  000AAE                     l832:
   889                           
   890                           ;main.c: 104:     INTCON0bits.GIEH = 1;
   891  000AAE  8ED2               	bsf	210,7,c	;volatile
   892  000AB0                     l3674:
   893                           
   894                           ;main.c: 107:     {;main.c: 109:         commandreader();
   895  000AB0  EC2C  F007         	call	_commandreader	;wreg free
   896                           
   897                           ;main.c: 111:         bytepush();
   898  000AB4  ECBE  F002         	call	_bytepush	;wreg free
   899                           
   900                           ;main.c: 113:         bytecleanup();
   901  000AB8  EC05  F008         	call	_bytecleanup	;wreg free
   902  000ABC                     
   903                           ;main.c: 116:         if (gInStatus & (1 << 3))
   904  000ABC  A628               	btfss	_gInStatus^0,3,c	;volatile
   905  000ABE  EF63  F005         	goto	u1311
   906  000AC2  EF65  F005         	goto	u1310
   907  000AC6                     u1311:
   908  000AC6  EF67  F005         	goto	l3680
   909  000ACA                     u1310:
   910  000ACA                     
   911                           ;main.c: 117:         {;main.c: 118:             scansticks();
   912  000ACA  EC0F  F000         	call	_scansticks	;wreg free
   913  000ACE                     l3680:
   914                           
   915                           ;main.c: 121:         if (gInStatus & (1 << 2))
   916  000ACE  A428               	btfss	_gInStatus^0,2,c	;volatile
   917  000AD0  EF6C  F005         	goto	u1321
   918  000AD4  EF6E  F005         	goto	u1320
   919  000AD8                     u1321:
   920  000AD8  EF58  F005         	goto	l3674
   921  000ADC                     u1320:
   922  000ADC                     
   923                           ;main.c: 122:         {;main.c: 123:             checkbuttons();
   924  000ADC  ECD8  F003         	call	_checkbuttons	;wreg free
   925  000AE0  EF58  F005         	goto	l3674
   926  000AE4  EF0D  F000         	goto	start
   927  000AE8                     __end_of_main:
   928                           	callstack 0
   929                           
   930 ;; *************** function _zerosticks *****************
   931 ;; Defined at:
   932 ;;		line 51 in file "settings.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;		None
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		wreg, status,2
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   946 ;;      Params:         0       0       0       0       0       0       0       0       0
   947 ;;      Locals:         0       0       0       0       0       0       0       0       0
   948 ;;      Temps:          0       0       0       0       0       0       0       0       0
   949 ;;      Totals:         0       0       0       0       0       0       0       0       0
   950 ;;Total ram usage:        0 bytes
   951 ;; Hardware stack levels used: 1
   952 ;; Hardware stack levels required when called: 2
   953 ;; This function calls:
   954 ;;		Nothing
   955 ;; This function is called by:
   956 ;;		_main
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           	psect	text1
   961  000F4A                     __ptext1:
   962                           	callstack 0
   963  000F4A                     _zerosticks:
   964                           	callstack 28
   965  000F4A                     
   966                           ;settings.c: 53:     SettingData.sx_low = 250U;
   967  000F4A  0E00               	movlw	0
   968  000F4C  0100               	movlb	0	; () banked
   969  000F4E  6FAF               	movwf	(_SettingData+5)& (0+255),b
   970  000F50  0EFA               	movlw	250
   971  000F52  6FAE               	movwf	(_SettingData+4)& (0+255),b
   972                           
   973                           ;settings.c: 54:     SettingData.sx_high = 250U;
   974  000F54  0E00               	movlw	0
   975  000F56  6FB3               	movwf	(_SettingData+9)& (0+255),b
   976  000F58  0EFA               	movlw	250
   977  000F5A  6FB2               	movwf	(_SettingData+8)& (0+255),b
   978                           
   979                           ;settings.c: 56:     SettingData.sy_low = 250U;
   980  000F5C  0E00               	movlw	0
   981  000F5E  6FB5               	movwf	(_SettingData+11)& (0+255),b
   982  000F60  0EFA               	movlw	250
   983  000F62  6FB4               	movwf	(_SettingData+10)& (0+255),b
   984                           
   985                           ;settings.c: 57:     SettingData.sy_high = 250U;
   986  000F64  0E00               	movlw	0
   987  000F66  6FB9               	movwf	(_SettingData+15)& (0+255),b
   988  000F68  0EFA               	movlw	250
   989  000F6A  6FB8               	movwf	(_SettingData+14)& (0+255),b
   990                           
   991                           ;settings.c: 59:     SettingData.cx_low = 250U;
   992  000F6C  0E00               	movlw	0
   993  000F6E  6FBB               	movwf	(_SettingData+17)& (0+255),b
   994  000F70  0EFA               	movlw	250
   995  000F72  6FBA               	movwf	(_SettingData+16)& (0+255),b
   996                           
   997                           ;settings.c: 60:     SettingData.cx_high = 250U;
   998  000F74  0E00               	movlw	0
   999  000F76  6FBF               	movwf	(_SettingData+21)& (0+255),b
  1000  000F78  0EFA               	movlw	250
  1001  000F7A  6FBE               	movwf	(_SettingData+20)& (0+255),b
  1002                           
  1003                           ;settings.c: 62:     SettingData.cy_low = 250U;
  1004  000F7C  0E00               	movlw	0
  1005  000F7E  6FC1               	movwf	(_SettingData+23)& (0+255),b
  1006  000F80  0EFA               	movlw	250
  1007  000F82  6FC0               	movwf	(_SettingData+22)& (0+255),b
  1008                           
  1009                           ;settings.c: 63:     SettingData.cy_high = 250U;
  1010  000F84  0E00               	movlw	0
  1011  000F86  6FC5               	movwf	(_SettingData+27)& (0+255),b
  1012  000F88  0EFA               	movlw	250
  1013  000F8A  6FC4               	movwf	(_SettingData+26)& (0+255),b
  1014  000F8C                     
  1015                           ; BSR set to: 0
  1016  000F8C  0012               	return		;funcret
  1017  000F8E                     __end_of_zerosticks:
  1018                           	callstack 0
  1019                           
  1020 ;; *************** function _setstickmultipliers *****************
  1021 ;; Defined at:
  1022 ;;		line 66 in file "settings.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;		None
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;		None
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  1    wreg      void 
  1029 ;; Registers used:
  1030 ;;		wreg, status,2, status,0, cstack
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1036 ;;      Params:         0       0       0       0       0       0       0       0       0
  1037 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1038 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1039 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1040 ;;Total ram usage:        0 bytes
  1041 ;; Hardware stack levels used: 1
  1042 ;; Hardware stack levels required when called: 4
  1043 ;; This function calls:
  1044 ;;		_getmultiplier
  1045 ;; This function is called by:
  1046 ;;		_main
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           	psect	text2
  1051  00094C                     __ptext2:
  1052                           	callstack 0
  1053  00094C                     _setstickmultipliers:
  1054                           	callstack 26
  1055  00094C                     
  1056                           ;settings.c: 68:     SettingData.sx_highMultiplier = getmultiplier(SettingData.sx_high, 
      +                          SettingData.sx_center);
  1057  00094C  C0B2  F056         	movff	_SettingData+8,getmultiplier@high
  1058  000950  C0B3  F057         	movff	_SettingData+9,getmultiplier@high+1
  1059  000954  C0B0  F058         	movff	_SettingData+6,getmultiplier@low
  1060  000958  C0B1  F059         	movff	_SettingData+7,getmultiplier@low+1
  1061  00095C  EC57  F007         	call	_getmultiplier	;wreg free
  1062  000960  C056  F0C6         	movff	?_getmultiplier,_SettingData+28
  1063  000964  C057  F0C7         	movff	?_getmultiplier+1,_SettingData+29
  1064                           
  1065                           ;settings.c: 69:     SettingData.sx_lowMultiplier = getmultiplier(SettingData.sx_center,
      +                           SettingData.sx_low);
  1066  000968  C0B0  F056         	movff	_SettingData+6,getmultiplier@high
  1067  00096C  C0B1  F057         	movff	_SettingData+7,getmultiplier@high+1
  1068  000970  C0AE  F058         	movff	_SettingData+4,getmultiplier@low
  1069  000974  C0AF  F059         	movff	_SettingData+5,getmultiplier@low+1
  1070  000978  EC57  F007         	call	_getmultiplier	;wreg free
  1071  00097C  C056  F0C8         	movff	?_getmultiplier,_SettingData+30
  1072  000980  C057  F0C9         	movff	?_getmultiplier+1,_SettingData+31
  1073                           
  1074                           ;settings.c: 71:     SettingData.cx_highMultiplier = getmultiplier(SettingData.cx_high, 
      +                          SettingData.cx_center);
  1075  000984  C0BE  F056         	movff	_SettingData+20,getmultiplier@high
  1076  000988  C0BF  F057         	movff	_SettingData+21,getmultiplier@high+1
  1077  00098C  C0BC  F058         	movff	_SettingData+18,getmultiplier@low
  1078  000990  C0BD  F059         	movff	_SettingData+19,getmultiplier@low+1
  1079  000994  EC57  F007         	call	_getmultiplier	;wreg free
  1080  000998  C056  F0CE         	movff	?_getmultiplier,_SettingData+36
  1081  00099C  C057  F0CF         	movff	?_getmultiplier+1,_SettingData+37
  1082                           
  1083                           ;settings.c: 72:     SettingData.cx_lowMultiplier = getmultiplier(SettingData.cx_center,
      +                           SettingData.cx_low);
  1084  0009A0  C0BC  F056         	movff	_SettingData+18,getmultiplier@high
  1085  0009A4  C0BD  F057         	movff	_SettingData+19,getmultiplier@high+1
  1086  0009A8  C0BA  F058         	movff	_SettingData+16,getmultiplier@low
  1087  0009AC  C0BB  F059         	movff	_SettingData+17,getmultiplier@low+1
  1088  0009B0  EC57  F007         	call	_getmultiplier	;wreg free
  1089  0009B4  C056  F0D0         	movff	?_getmultiplier,_SettingData+38
  1090  0009B8  C057  F0D1         	movff	?_getmultiplier+1,_SettingData+39
  1091                           
  1092                           ;settings.c: 74:     SettingData.sy_highMultiplier = getmultiplier(SettingData.sy_high, 
      +                          SettingData.sy_center);
  1093  0009BC  C0B8  F056         	movff	_SettingData+14,getmultiplier@high
  1094  0009C0  C0B9  F057         	movff	_SettingData+15,getmultiplier@high+1
  1095  0009C4  C0B6  F058         	movff	_SettingData+12,getmultiplier@low
  1096  0009C8  C0B7  F059         	movff	_SettingData+13,getmultiplier@low+1
  1097  0009CC  EC57  F007         	call	_getmultiplier	;wreg free
  1098  0009D0  C056  F0CA         	movff	?_getmultiplier,_SettingData+32
  1099  0009D4  C057  F0CB         	movff	?_getmultiplier+1,_SettingData+33
  1100                           
  1101                           ;settings.c: 75:     SettingData.sy_lowMultiplier = getmultiplier(SettingData.sy_center,
      +                           SettingData.sy_low);
  1102  0009D8  C0B6  F056         	movff	_SettingData+12,getmultiplier@high
  1103  0009DC  C0B7  F057         	movff	_SettingData+13,getmultiplier@high+1
  1104  0009E0  C0B4  F058         	movff	_SettingData+10,getmultiplier@low
  1105  0009E4  C0B5  F059         	movff	_SettingData+11,getmultiplier@low+1
  1106  0009E8  EC57  F007         	call	_getmultiplier	;wreg free
  1107  0009EC  C056  F0CC         	movff	?_getmultiplier,_SettingData+34
  1108  0009F0  C057  F0CD         	movff	?_getmultiplier+1,_SettingData+35
  1109                           
  1110                           ;settings.c: 77:     SettingData.cy_highMultiplier = getmultiplier(SettingData.cy_high, 
      +                          SettingData.cy_center);
  1111  0009F4  C0C4  F056         	movff	_SettingData+26,getmultiplier@high
  1112  0009F8  C0C5  F057         	movff	_SettingData+27,getmultiplier@high+1
  1113  0009FC  C0C2  F058         	movff	_SettingData+24,getmultiplier@low
  1114  000A00  C0C3  F059         	movff	_SettingData+25,getmultiplier@low+1
  1115  000A04  EC57  F007         	call	_getmultiplier	;wreg free
  1116  000A08  C056  F0D2         	movff	?_getmultiplier,_SettingData+40
  1117  000A0C  C057  F0D3         	movff	?_getmultiplier+1,_SettingData+41
  1118                           
  1119                           ;settings.c: 78:     SettingData.cy_lowMultiplier = getmultiplier(SettingData.cy_center,
      +                           SettingData.cy_low);
  1120  000A10  C0C2  F056         	movff	_SettingData+24,getmultiplier@high
  1121  000A14  C0C3  F057         	movff	_SettingData+25,getmultiplier@high+1
  1122  000A18  C0C0  F058         	movff	_SettingData+22,getmultiplier@low
  1123  000A1C  C0C1  F059         	movff	_SettingData+23,getmultiplier@low+1
  1124  000A20  EC57  F007         	call	_getmultiplier	;wreg free
  1125  000A24  C056  F0D4         	movff	?_getmultiplier,_SettingData+42
  1126  000A28  C057  F0D5         	movff	?_getmultiplier+1,_SettingData+43
  1127  000A2C  0012               	return		;funcret
  1128  000A2E                     __end_of_setstickmultipliers:
  1129                           	callstack 0
  1130                           
  1131 ;; *************** function _getmultiplier *****************
  1132 ;; Defined at:
  1133 ;;		line 64 in file "joysticks.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;  high            2   11[COMRAM] unsigned int 
  1136 ;;  low             2   13[COMRAM] unsigned int 
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;  ratio           2    2[BANK1 ] unsigned int 
  1139 ;;  distance        2    0[BANK1 ] unsigned int 
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  2   11[COMRAM] unsigned int 
  1142 ;; Registers used:
  1143 ;;		wreg, status,2, status,0, cstack
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1149 ;;      Params:         4       0       0       0       0       0       0       0       0
  1150 ;;      Locals:         0       0       6       0       0       0       0       0       0
  1151 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1152 ;;      Totals:         4       0       6       0       0       0       0       0       0
  1153 ;;Total ram usage:       10 bytes
  1154 ;; Hardware stack levels used: 1
  1155 ;; Hardware stack levels required when called: 3
  1156 ;; This function calls:
  1157 ;;		___lwdiv
  1158 ;; This function is called by:
  1159 ;;		_setstickmultipliers
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           	psect	text3
  1164  000EAE                     __ptext3:
  1165                           	callstack 0
  1166  000EAE                     _getmultiplier:
  1167                           	callstack 26
  1168  000EAE                     
  1169                           ;joysticks.c: 64: uint16_t getmultiplier(uint16_t high, uint16_t low);joysticks.c: 65: {
      +                          ;joysticks.c: 67:     uint16_t distance = high-low;
  1170  000EAE  5058               	movf	getmultiplier@low^0,w,c
  1171  000EB0  5C56               	subwf	getmultiplier@high^0,w,c
  1172  000EB2  0101               	movlb	1	; () banked
  1173  000EB4  6F3C               	movwf	getmultiplier@distance& (0+255),b
  1174  000EB6  5059               	movf	(getmultiplier@low+1)^0,w,c
  1175  000EB8  5857               	subwfb	(getmultiplier@high+1)^0,w,c
  1176  000EBA  6F3D               	movwf	(getmultiplier@distance+1)& (0+255),b
  1177  000EBC                     
  1178                           ; BSR set to: 1
  1179                           ;joysticks.c: 68:     uint16_t ratio = ((10000U / distance) * 256U)/100U;
  1180  000EBC  C13C  F051         	movff	getmultiplier@distance,___lwdiv@divisor
  1181  000EC0  C13D  F052         	movff	getmultiplier@distance+1,___lwdiv@divisor+1
  1182  000EC4  0E27               	movlw	39
  1183  000EC6  6E50               	movwf	(___lwdiv@dividend+1)^0,c
  1184  000EC8  0E10               	movlw	16
  1185  000ECA  6E4F               	movwf	___lwdiv@dividend^0,c
  1186  000ECC  EC54  F006         	call	___lwdiv	;wreg free
  1187  000ED0  C04F  F050         	movff	?___lwdiv,?___lwdiv+1
  1188  000ED4  6A4F               	clrf	?___lwdiv^0,c
  1189  000ED6  C04F  F140         	movff	?___lwdiv,_getmultiplier$2844
  1190  000EDA  C050  F141         	movff	?___lwdiv+1,_getmultiplier$2844+1
  1191  000EDE                     
  1192                           ;joysticks.c: 68:     uint16_t ratio = ((10000U / distance) * 256U)/100U;
  1193  000EDE  C140  F04F         	movff	_getmultiplier$2844,___lwdiv@dividend
  1194  000EE2  C141  F050         	movff	_getmultiplier$2844+1,___lwdiv@dividend+1
  1195  000EE6  0E00               	movlw	0
  1196  000EE8  6E52               	movwf	(___lwdiv@divisor+1)^0,c
  1197  000EEA  0E64               	movlw	100
  1198  000EEC  6E51               	movwf	___lwdiv@divisor^0,c
  1199  000EEE  EC54  F006         	call	___lwdiv	;wreg free
  1200  000EF2  C04F  F13E         	movff	?___lwdiv,getmultiplier@ratio
  1201  000EF6  C050  F13F         	movff	?___lwdiv+1,getmultiplier@ratio+1
  1202  000EFA                     
  1203                           ;joysticks.c: 70:     return ratio;
  1204  000EFA  C13E  F056         	movff	getmultiplier@ratio,?_getmultiplier
  1205  000EFE  C13F  F057         	movff	getmultiplier@ratio+1,?_getmultiplier+1
  1206  000F02  0012               	return		;funcret
  1207  000F04                     __end_of_getmultiplier:
  1208                           	callstack 0
  1209                           
  1210 ;; *************** function ___lwdiv *****************
  1211 ;; Defined at:
  1212 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;  dividend        2    4[COMRAM] unsigned int 
  1215 ;;  divisor         2    6[COMRAM] unsigned int 
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;  quotient        2    9[COMRAM] unsigned int 
  1218 ;;  counter         1    8[COMRAM] unsigned char 
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  2    4[COMRAM] unsigned int 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1228 ;;      Params:         4       0       0       0       0       0       0       0       0
  1229 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1230 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1231 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1232 ;;Total ram usage:        7 bytes
  1233 ;; Hardware stack levels used: 1
  1234 ;; Hardware stack levels required when called: 2
  1235 ;; This function calls:
  1236 ;;		Nothing
  1237 ;; This function is called by:
  1238 ;;		_getmultiplier
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242                           	psect	text4
  1243  000CA8                     __ptext4:
  1244                           	callstack 0
  1245  000CA8                     ___lwdiv:
  1246                           	callstack 26
  1247  000CA8  0E00               	movlw	0
  1248  000CAA  6E55               	movwf	(___lwdiv@quotient+1)^0,c
  1249  000CAC  0E00               	movlw	0
  1250  000CAE  6E54               	movwf	___lwdiv@quotient^0,c
  1251  000CB0  5051               	movf	___lwdiv@divisor^0,w,c
  1252  000CB2  1052               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1253  000CB4  B4D8               	btfsc	status,2,c
  1254  000CB6  EF5F  F006         	goto	u1161
  1255  000CBA  EF61  F006         	goto	u1160
  1256  000CBE                     u1161:
  1257  000CBE  EF89  F006         	goto	l1964
  1258  000CC2                     u1160:
  1259  000CC2  0E01               	movlw	1
  1260  000CC4  6E53               	movwf	___lwdiv@counter^0,c
  1261  000CC6  EF69  F006         	goto	l3544
  1262  000CCA                     l3542:
  1263  000CCA  90D8               	bcf	status,0,c
  1264  000CCC  3651               	rlcf	___lwdiv@divisor^0,f,c
  1265  000CCE  3652               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1266  000CD0  2A53               	incf	___lwdiv@counter^0,f,c
  1267  000CD2                     l3544:
  1268  000CD2  AE52               	btfss	(___lwdiv@divisor+1)^0,7,c
  1269  000CD4  EF6E  F006         	goto	u1171
  1270  000CD8  EF70  F006         	goto	u1170
  1271  000CDC                     u1171:
  1272  000CDC  EF65  F006         	goto	l3542
  1273  000CE0                     u1170:
  1274  000CE0                     l3546:
  1275  000CE0  90D8               	bcf	status,0,c
  1276  000CE2  3654               	rlcf	___lwdiv@quotient^0,f,c
  1277  000CE4  3655               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1278  000CE6  5051               	movf	___lwdiv@divisor^0,w,c
  1279  000CE8  5C4F               	subwf	___lwdiv@dividend^0,w,c
  1280  000CEA  5052               	movf	(___lwdiv@divisor+1)^0,w,c
  1281  000CEC  5850               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1282  000CEE  A0D8               	btfss	status,0,c
  1283  000CF0  EF7C  F006         	goto	u1181
  1284  000CF4  EF7E  F006         	goto	u1180
  1285  000CF8                     u1181:
  1286  000CF8  EF83  F006         	goto	l3554
  1287  000CFC                     u1180:
  1288  000CFC  5051               	movf	___lwdiv@divisor^0,w,c
  1289  000CFE  5E4F               	subwf	___lwdiv@dividend^0,f,c
  1290  000D00  5052               	movf	(___lwdiv@divisor+1)^0,w,c
  1291  000D02  5A50               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1292  000D04  8054               	bsf	___lwdiv@quotient^0,0,c
  1293  000D06                     l3554:
  1294  000D06  90D8               	bcf	status,0,c
  1295  000D08  3252               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1296  000D0A  3251               	rrcf	___lwdiv@divisor^0,f,c
  1297  000D0C  2E53               	decfsz	___lwdiv@counter^0,f,c
  1298  000D0E  EF70  F006         	goto	l3546
  1299  000D12                     l1964:
  1300  000D12  C054  F04F         	movff	___lwdiv@quotient,?___lwdiv
  1301  000D16  C055  F050         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1302  000D1A  0012               	return		;funcret
  1303  000D1C                     __end_of___lwdiv:
  1304                           	callstack 0
  1305                           
  1306 ;; *************** function _scansticks *****************
  1307 ;; Defined at:
  1308 ;;		line 75 in file "joysticks.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;		None
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;		None
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  1    wreg      void 
  1315 ;; Registers used:
  1316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1322 ;;      Params:         0       0       0       0       0       0       0       0       0
  1323 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1324 ;;      Temps:          0       0       4       0       0       0       0       0       0
  1325 ;;      Totals:         0       0       4       0       0       0       0       0       0
  1326 ;;Total ram usage:        4 bytes
  1327 ;; Hardware stack levels used: 1
  1328 ;; Hardware stack levels required when called: 4
  1329 ;; This function calls:
  1330 ;;		_slinjim
  1331 ;; This function is called by:
  1332 ;;		_main
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           	psect	text5
  1337  00001E                     __ptext5:
  1338                           	callstack 0
  1339  00001E                     _scansticks:
  1340                           	callstack 26
  1341  00001E                     
  1342                           ;joysticks.c: 79:     if (!initiatedRead)
  1343  00001E  5014               	movf	_initiatedRead@joysticks$F1613^0,w,c
  1344  000020  A4D8               	btfss	status,2,c
  1345  000022  EF15  F000         	goto	u1191
  1346  000026  EF17  F000         	goto	u1190
  1347  00002A                     u1191:
  1348  00002A  EF23  F000         	goto	l1139
  1349  00002E                     u1190:
  1350  00002E                     
  1351                           ;joysticks.c: 80:     {;joysticks.c: 81:         ADPCH = SX_A;
  1352  00002E  0E02               	movlw	2
  1353  000030  013E               	movlb	62	; () banked
  1354  000032  6FF1               	movwf	241,b	;volatile
  1355  000034                     
  1356                           ; BSR set to: 62
  1357                           ;joysticks.c: 82:         ADCON0bits.ADGO = 1;
  1358  000034  81F8               	bsf	248,0,b	;volatile
  1359                           
  1360                           ;joysticks.c: 83:         stickIdx = 0;
  1361  000036  0E00               	movlw	0
  1362  000038  6E15               	movwf	_stickIdx@joysticks$F1612^0,c
  1363                           
  1364                           ;joysticks.c: 84:         clearRead = 0;
  1365  00003A  0E00               	movlw	0
  1366  00003C  6E13               	movwf	_clearRead@joysticks$F1614^0,c
  1367                           
  1368                           ;joysticks.c: 85:         initiatedRead = 1;
  1369  00003E  0E01               	movlw	1
  1370  000040  6E14               	movwf	_initiatedRead@joysticks$F1613^0,c
  1371                           
  1372                           ;joysticks.c: 86:     }
  1373  000042  EF8F  F001         	goto	l1149
  1374  000046                     l1139:
  1375                           
  1376                           ;joysticks.c: 88:     {;joysticks.c: 91:         if (!ADCON0bits.ADGO)
  1377  000046  013E               	movlb	62	; () banked
  1378  000048  B1F8               	btfsc	248,0,b	;volatile
  1379  00004A  EF29  F000         	goto	u1201
  1380  00004E  EF2B  F000         	goto	u1200
  1381  000052                     u1201:
  1382  000052  EF8F  F001         	goto	l1149
  1383  000056                     u1200:
  1384  000056                     
  1385                           ; BSR set to: 62
  1386                           ;joysticks.c: 92:         {;joysticks.c: 93:             if (clearRead)
  1387  000056  5013               	movf	_clearRead@joysticks$F1614^0,w,c
  1388  000058  B4D8               	btfsc	status,2,c
  1389  00005A  EF31  F000         	goto	u1211
  1390  00005E  EF33  F000         	goto	u1210
  1391  000062                     u1211:
  1392  000062  EF71  F000         	goto	l3600
  1393  000066                     u1210:
  1394  000066  EF4C  F000         	goto	l3592
  1395  00006A                     l3580:
  1396                           
  1397                           ; BSR set to: 1
  1398                           ;joysticks.c: 99:                         ADPCH = SY_A;
  1399  00006A  0E03               	movlw	3
  1400  00006C  013E               	movlb	62	; () banked
  1401  00006E  6FF1               	movwf	241,b	;volatile
  1402                           
  1403                           ;joysticks.c: 100:                         break;
  1404  000070  EF6A  F000         	goto	l3594
  1405  000074                     l3582:
  1406                           
  1407                           ; BSR set to: 1
  1408                           ;joysticks.c: 102:                         ADPCH = CX_A;
  1409  000074  0E00               	movlw	0
  1410  000076  013E               	movlb	62	; () banked
  1411  000078  6FF1               	movwf	241,b	;volatile
  1412                           
  1413                           ;joysticks.c: 103:                         break;
  1414  00007A  EF6A  F000         	goto	l3594
  1415  00007E                     l3584:
  1416                           
  1417                           ; BSR set to: 1
  1418                           ;joysticks.c: 105:                         ADPCH = CY_A;
  1419  00007E  0E01               	movlw	1
  1420  000080  013E               	movlb	62	; () banked
  1421  000082  6FF1               	movwf	241,b	;volatile
  1422                           
  1423                           ;joysticks.c: 106:                         break;
  1424  000084  EF6A  F000         	goto	l3594
  1425  000088                     l1148:
  1426                           
  1427                           ; BSR set to: 1
  1428  000088  9628               	bcf	_gInStatus,3,c	;# 
  1429  00008A  8428               	bsf	_gInStatus,2,c	;# 
  1430  00008C                     
  1431                           ;joysticks.c: 110:                         initiatedRead = 0;
  1432  00008C  0E00               	movlw	0
  1433  00008E  6E14               	movwf	_initiatedRead@joysticks$F1613^0,c
  1434                           
  1435                           ;joysticks.c: 111:                         clearRead = 0;
  1436  000090  0E00               	movlw	0
  1437  000092  6E13               	movwf	_clearRead@joysticks$F1614^0,c
  1438  000094  EF8F  F001         	goto	l1149
  1439  000098                     l3592:
  1440                           
  1441                           ; BSR set to: 62
  1442  000098  5015               	movf	_stickIdx@joysticks$F1612^0,w,c
  1443  00009A  0101               	movlb	1	; () banked
  1444  00009C  6F3C               	movwf	??_scansticks& (0+255),b
  1445  00009E  6B3D               	clrf	(??_scansticks+1)& (0+255),b
  1446                           
  1447                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1448                           ; Switch size 1, requested type "simple"
  1449                           ; Number of cases is 1, Range of values is 0 to 0
  1450                           ; switch strategies available:
  1451                           ; Name         Instructions Cycles
  1452                           ; simple_byte            4     3 (average)
  1453                           ;	Chosen strategy is simple_byte
  1454  0000A0  513D               	movf	(??_scansticks+1)& (0+255),w,b
  1455  0000A2  0A00               	xorlw	0	; case 0
  1456  0000A4  B4D8               	btfsc	status,2,c
  1457  0000A6  EF57  F000         	goto	l3804
  1458  0000AA  EF6A  F000         	goto	l3594
  1459  0000AE                     l3804:
  1460                           
  1461                           ; BSR set to: 1
  1462                           ; Switch size 1, requested type "simple"
  1463                           ; Number of cases is 4, Range of values is 0 to 3
  1464                           ; switch strategies available:
  1465                           ; Name         Instructions Cycles
  1466                           ; simple_byte           13     7 (average)
  1467                           ;	Chosen strategy is simple_byte
  1468  0000AE  513C               	movf	??_scansticks& (0+255),w,b
  1469  0000B0  0A00               	xorlw	0	; case 0
  1470  0000B2  B4D8               	btfsc	status,2,c
  1471  0000B4  EF35  F000         	goto	l3580
  1472  0000B8  0A01               	xorlw	1	; case 1
  1473  0000BA  B4D8               	btfsc	status,2,c
  1474  0000BC  EF3A  F000         	goto	l3582
  1475  0000C0  0A03               	xorlw	3	; case 2
  1476  0000C2  B4D8               	btfsc	status,2,c
  1477  0000C4  EF3F  F000         	goto	l3584
  1478  0000C8  0A01               	xorlw	1	; case 3
  1479  0000CA  B4D8               	btfsc	status,2,c
  1480  0000CC  EF44  F000         	goto	l1148
  1481  0000D0  EF6A  F000         	goto	l3594
  1482  0000D4                     l3594:
  1483                           
  1484                           ;joysticks.c: 123:                 stickIdx++;
  1485  0000D4  2A15               	incf	_stickIdx@joysticks$F1612^0,f,c
  1486  0000D6                     
  1487                           ;joysticks.c: 124:                 clearRead = 0;
  1488  0000D6  0E00               	movlw	0
  1489  0000D8  6E13               	movwf	_clearRead@joysticks$F1614^0,c
  1490  0000DA                     
  1491                           ;joysticks.c: 125:                 ADCON0bits.ADGO = 1;
  1492  0000DA  013E               	movlb	62	; () banked
  1493  0000DC  81F8               	bsf	248,0,b	;volatile
  1494                           
  1495                           ;joysticks.c: 126:             }
  1496  0000DE  EF8F  F001         	goto	l1149
  1497  0000E2                     l3600:
  1498                           
  1499                           ; BSR set to: 62
  1500                           ;joysticks.c: 128:             {;joysticks.c: 129:                 clearRead = 1;
  1501  0000E2  0E01               	movlw	1
  1502  0000E4  6E13               	movwf	_clearRead@joysticks$F1614^0,c
  1503                           
  1504                           ;joysticks.c: 132:                 ADPCH = channel_VSS;
  1505  0000E6  0E3B               	movlw	59
  1506  0000E8  6FF1               	movwf	241,b	;volatile
  1507  0000EA                     
  1508                           ; BSR set to: 62
  1509                           ;joysticks.c: 133:                 ADCON0bits.ADGO = 1;
  1510  0000EA  81F8               	bsf	248,0,b	;volatile
  1511  0000EC                     
  1512                           ; BSR set to: 62
  1513                           ;joysticks.c: 137:                 adc_read = ((adc_result_t)((ADRESH << 8) + ADRESL)) >
      +                          > 3;
  1514  0000EC  51EF               	movf	239,w,b	;volatile
  1515  0000EE  006F FBC0  F13C    	movff	16112,??_scansticks	;volatile
  1516  0000F4  0101               	movlb	1	; () banked
  1517  0000F6  6B3D               	clrf	(??_scansticks+1)& (0+255),b
  1518  0000F8  C13C  F13D         	movff	??_scansticks,??_scansticks+1
  1519  0000FC  6B3C               	clrf	??_scansticks& (0+255),b
  1520  0000FE  273C               	addwf	??_scansticks& (0+255),f,b
  1521  000100  0E00               	movlw	0
  1522  000102  233D               	addwfc	(??_scansticks+1)& (0+255),f,b
  1523  000104  90D8               	bcf	status,0,c
  1524  000106  333D               	rrcf	(??_scansticks+1)& (0+255),f,b
  1525  000108  333C               	rrcf	??_scansticks& (0+255),f,b
  1526  00010A  90D8               	bcf	status,0,c
  1527  00010C  333D               	rrcf	(??_scansticks+1)& (0+255),f,b
  1528  00010E  333C               	rrcf	??_scansticks& (0+255),f,b
  1529  000110  90D8               	bcf	status,0,c
  1530  000112  333D               	rrcf	(??_scansticks+1)& (0+255),f,b
  1531  000114  333C               	rrcf	??_scansticks& (0+255),f,b
  1532  000116  C13C  F00B         	movff	??_scansticks,_adc_read
  1533  00011A  C13D  F00C         	movff	??_scansticks+1,_adc_read+1
  1534                           
  1535                           ;joysticks.c: 141:                 switch (stickIdx)
  1536  00011E  EFE9  F000         	goto	l3608
  1537  000122                     l1152:
  1538                           
  1539                           ; BSR set to: 1
  1540                           ;joysticks.c: 145:                         tmphigh = SettingData.sx_high;
  1541  000122  C0B2  F009         	movff	_SettingData+8,_tmphigh@joysticks$F1607
  1542  000126  C0B3  F00A         	movff	_SettingData+9,_tmphigh@joysticks$F1607+1
  1543                           
  1544                           ;joysticks.c: 146:                         tmplow = SettingData.sx_low;
  1545  00012A  C0AE  F007         	movff	_SettingData+4,_tmplow@joysticks$F1608
  1546  00012E  C0AF  F008         	movff	_SettingData+5,_tmplow@joysticks$F1608+1
  1547                           
  1548                           ;joysticks.c: 147:                         tmpcenter = SettingData.sx_center;
  1549  000132  C0B0  F005         	movff	_SettingData+6,_tmpcenter@joysticks$F1609
  1550  000136  C0B1  F006         	movff	_SettingData+7,_tmpcenter@joysticks$F1609+1
  1551                           
  1552                           ;joysticks.c: 148:                         tmphighm = SettingData.sx_highMultiplier;
  1553  00013A  C0C6  F003         	movff	_SettingData+28,_tmphighm@joysticks$F1610
  1554  00013E  C0C7  F004         	movff	_SettingData+29,_tmphighm@joysticks$F1610+1
  1555                           
  1556                           ;joysticks.c: 149:                         tmplowm = SettingData.sx_lowMultiplier;
  1557  000142  C0C8  F001         	movff	_SettingData+30,_tmplowm@joysticks$F1611
  1558  000146  C0C9  F002         	movff	_SettingData+31,_tmplowm@joysticks$F1611+1
  1559                           
  1560                           ;joysticks.c: 151:                         break;
  1561  00014A  EF06  F001         	goto	l3610
  1562  00014E                     l1154:
  1563                           
  1564                           ; BSR set to: 1
  1565                           ;joysticks.c: 155:                         tmphigh = SettingData.sy_high;
  1566  00014E  C0B8  F009         	movff	_SettingData+14,_tmphigh@joysticks$F1607
  1567  000152  C0B9  F00A         	movff	_SettingData+15,_tmphigh@joysticks$F1607+1
  1568                           
  1569                           ;joysticks.c: 156:                         tmplow = SettingData.sy_low;
  1570  000156  C0B4  F007         	movff	_SettingData+10,_tmplow@joysticks$F1608
  1571  00015A  C0B5  F008         	movff	_SettingData+11,_tmplow@joysticks$F1608+1
  1572                           
  1573                           ;joysticks.c: 157:                         tmpcenter = SettingData.sy_center;
  1574  00015E  C0B6  F005         	movff	_SettingData+12,_tmpcenter@joysticks$F1609
  1575  000162  C0B7  F006         	movff	_SettingData+13,_tmpcenter@joysticks$F1609+1
  1576                           
  1577                           ;joysticks.c: 158:                         tmphighm = SettingData.sy_highMultiplier;
  1578  000166  C0CA  F003         	movff	_SettingData+32,_tmphighm@joysticks$F1610
  1579  00016A  C0CB  F004         	movff	_SettingData+33,_tmphighm@joysticks$F1610+1
  1580                           
  1581                           ;joysticks.c: 159:                         tmplowm = SettingData.sy_lowMultiplier;
  1582  00016E  C0CC  F001         	movff	_SettingData+34,_tmplowm@joysticks$F1611
  1583  000172  C0CD  F002         	movff	_SettingData+35,_tmplowm@joysticks$F1611+1
  1584                           
  1585                           ;joysticks.c: 161:                         break;
  1586  000176  EF06  F001         	goto	l3610
  1587  00017A                     l1155:
  1588                           
  1589                           ; BSR set to: 1
  1590                           ;joysticks.c: 165:                         tmphigh = SettingData.cx_high;
  1591  00017A  C0BE  F009         	movff	_SettingData+20,_tmphigh@joysticks$F1607
  1592  00017E  C0BF  F00A         	movff	_SettingData+21,_tmphigh@joysticks$F1607+1
  1593                           
  1594                           ;joysticks.c: 166:                         tmplow = SettingData.cx_low;
  1595  000182  C0BA  F007         	movff	_SettingData+16,_tmplow@joysticks$F1608
  1596  000186  C0BB  F008         	movff	_SettingData+17,_tmplow@joysticks$F1608+1
  1597                           
  1598                           ;joysticks.c: 167:                         tmpcenter = SettingData.cx_center;
  1599  00018A  C0BC  F005         	movff	_SettingData+18,_tmpcenter@joysticks$F1609
  1600  00018E  C0BD  F006         	movff	_SettingData+19,_tmpcenter@joysticks$F1609+1
  1601                           
  1602                           ;joysticks.c: 168:                         tmphighm = SettingData.cx_highMultiplier;
  1603  000192  C0CE  F003         	movff	_SettingData+36,_tmphighm@joysticks$F1610
  1604  000196  C0CF  F004         	movff	_SettingData+37,_tmphighm@joysticks$F1610+1
  1605                           
  1606                           ;joysticks.c: 169:                         tmplowm = SettingData.cx_lowMultiplier;
  1607  00019A  C0D0  F001         	movff	_SettingData+38,_tmplowm@joysticks$F1611
  1608  00019E  C0D1  F002         	movff	_SettingData+39,_tmplowm@joysticks$F1611+1
  1609                           
  1610                           ;joysticks.c: 171:                         break;
  1611  0001A2  EF06  F001         	goto	l3610
  1612  0001A6                     l1156:
  1613                           
  1614                           ; BSR set to: 1
  1615                           ;joysticks.c: 175:                         tmphigh = SettingData.cy_high;
  1616  0001A6  C0C4  F009         	movff	_SettingData+26,_tmphigh@joysticks$F1607
  1617  0001AA  C0C5  F00A         	movff	_SettingData+27,_tmphigh@joysticks$F1607+1
  1618                           
  1619                           ;joysticks.c: 176:                         tmplow = SettingData.cy_low;
  1620  0001AE  C0C0  F007         	movff	_SettingData+22,_tmplow@joysticks$F1608
  1621  0001B2  C0C1  F008         	movff	_SettingData+23,_tmplow@joysticks$F1608+1
  1622                           
  1623                           ;joysticks.c: 177:                         tmpcenter = SettingData.cy_center;
  1624  0001B6  C0C2  F005         	movff	_SettingData+24,_tmpcenter@joysticks$F1609
  1625  0001BA  C0C3  F006         	movff	_SettingData+25,_tmpcenter@joysticks$F1609+1
  1626                           
  1627                           ;joysticks.c: 178:                         tmphighm = SettingData.cy_highMultiplier;
  1628  0001BE  C0D2  F003         	movff	_SettingData+40,_tmphighm@joysticks$F1610
  1629  0001C2  C0D3  F004         	movff	_SettingData+41,_tmphighm@joysticks$F1610+1
  1630                           
  1631                           ;joysticks.c: 179:                         tmplowm = SettingData.cy_lowMultiplier;
  1632  0001C6  C0D4  F001         	movff	_SettingData+42,_tmplowm@joysticks$F1611
  1633  0001CA  C0D5  F002         	movff	_SettingData+43,_tmplowm@joysticks$F1611+1
  1634                           
  1635                           ;joysticks.c: 181:                         break;
  1636  0001CE  EF06  F001         	goto	l3610
  1637  0001D2                     l3608:
  1638                           
  1639                           ; BSR set to: 1
  1640  0001D2  5015               	movf	_stickIdx@joysticks$F1612^0,w,c
  1641  0001D4  6F3C               	movwf	??_scansticks& (0+255),b
  1642  0001D6  6B3D               	clrf	(??_scansticks+1)& (0+255),b
  1643                           
  1644                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1645                           ; Switch size 1, requested type "simple"
  1646                           ; Number of cases is 1, Range of values is 0 to 0
  1647                           ; switch strategies available:
  1648                           ; Name         Instructions Cycles
  1649                           ; simple_byte            4     3 (average)
  1650                           ;	Chosen strategy is simple_byte
  1651  0001D8  513D               	movf	(??_scansticks+1)& (0+255),w,b
  1652  0001DA  0A00               	xorlw	0	; case 0
  1653  0001DC  B4D8               	btfsc	status,2,c
  1654  0001DE  EFF3  F000         	goto	l3806
  1655  0001E2  EF06  F001         	goto	l3610
  1656  0001E6                     l3806:
  1657                           
  1658                           ; BSR set to: 1
  1659                           ; Switch size 1, requested type "simple"
  1660                           ; Number of cases is 4, Range of values is 0 to 3
  1661                           ; switch strategies available:
  1662                           ; Name         Instructions Cycles
  1663                           ; simple_byte           13     7 (average)
  1664                           ;	Chosen strategy is simple_byte
  1665  0001E6  513C               	movf	??_scansticks& (0+255),w,b
  1666  0001E8  0A00               	xorlw	0	; case 0
  1667  0001EA  B4D8               	btfsc	status,2,c
  1668  0001EC  EF91  F000         	goto	l1152
  1669  0001F0  0A01               	xorlw	1	; case 1
  1670  0001F2  B4D8               	btfsc	status,2,c
  1671  0001F4  EFA7  F000         	goto	l1154
  1672  0001F8  0A03               	xorlw	3	; case 2
  1673  0001FA  B4D8               	btfsc	status,2,c
  1674  0001FC  EFBD  F000         	goto	l1155
  1675  000200  0A01               	xorlw	1	; case 3
  1676  000202  B4D8               	btfsc	status,2,c
  1677  000204  EFD3  F000         	goto	l1156
  1678  000208  EF06  F001         	goto	l3610
  1679  00020C                     l3610:
  1680                           
  1681                           ; BSR set to: 1
  1682                           ;joysticks.c: 189:                 if (adc_read > tmpcenter+4)
  1683  00020C  0E04               	movlw	4
  1684  00020E  2405               	addwf	_tmpcenter@joysticks$F1609^0,w,c
  1685  000210  6F3C               	movwf	??_scansticks& (0+255),b
  1686  000212  0E00               	movlw	0
  1687  000214  2006               	addwfc	(_tmpcenter@joysticks$F1609+1)^0,w,c
  1688  000216  6F3D               	movwf	(??_scansticks+1)& (0+255),b
  1689  000218  500B               	movf	_adc_read^0,w,c
  1690  00021A  5D3C               	subwf	??_scansticks& (0+255),w,b
  1691  00021C  500C               	movf	(_adc_read+1)^0,w,c
  1692  00021E  593D               	subwfb	(??_scansticks+1)& (0+255),w,b
  1693  000220  B0D8               	btfsc	status,0,c
  1694  000222  EF15  F001         	goto	u1221
  1695  000226  EF17  F001         	goto	u1220
  1696  00022A                     u1221:
  1697  00022A  EF42  F001         	goto	l3618
  1698  00022E                     u1220:
  1699  00022E                     
  1700                           ; BSR set to: 1
  1701                           ;joysticks.c: 190:                 {;joysticks.c: 191:                     if (adc_read 
      +                          >= tmphigh)
  1702  00022E  5009               	movf	_tmphigh@joysticks$F1607^0,w,c
  1703  000230  5C0B               	subwf	_adc_read^0,w,c
  1704  000232  500A               	movf	(_tmphigh@joysticks$F1607+1)^0,w,c
  1705  000234  580C               	subwfb	(_adc_read+1)^0,w,c
  1706  000236  A0D8               	btfss	status,0,c
  1707  000238  EF20  F001         	goto	u1231
  1708  00023C  EF22  F001         	goto	u1230
  1709  000240                     u1231:
  1710  000240  EF2C  F001         	goto	l3616
  1711  000244                     u1230:
  1712  000244                     
  1713                           ; BSR set to: 1
  1714                           ;joysticks.c: 192:                     {;joysticks.c: 193:                         gConP
      +                          ollPacket[stickIdx+2] = 228U;
  1715  000244  0E32               	movlw	low (_gConPollPacket+2)
  1716  000246  2415               	addwf	_stickIdx@joysticks$F1612^0,w,c
  1717  000248  6ED9               	movwf	fsr2l,c
  1718  00024A  6ADA               	clrf	fsr2h,c
  1719  00024C  0E00               	movlw	high (_gConPollPacket+2)
  1720  00024E  22DA               	addwfc	fsr2h,f,c
  1721  000250  0EE4               	movlw	228
  1722  000252  6EDF               	movwf	indf2,c
  1723                           
  1724                           ;joysticks.c: 194:                     }
  1725  000254  EF8F  F001         	goto	l1149
  1726  000258                     l3616:
  1727                           
  1728                           ; BSR set to: 1
  1729                           ;joysticks.c: 196:                     {;joysticks.c: 197:                         gConP
      +                          ollPacket[stickIdx+2] = 128U + slinjim(adc_read - tmpcenter, tmphighm);
  1730  000258  0E32               	movlw	low (_gConPollPacket+2)
  1731  00025A  2415               	addwf	_stickIdx@joysticks$F1612^0,w,c
  1732  00025C  6ED9               	movwf	fsr2l,c
  1733  00025E  6ADA               	clrf	fsr2h,c
  1734  000260  0E00               	movlw	high (_gConPollPacket+2)
  1735  000262  22DA               	addwfc	fsr2h,f,c
  1736  000264  5005               	movf	_tmpcenter@joysticks$F1609^0,w,c
  1737  000266  5C0B               	subwf	_adc_read^0,w,c
  1738  000268  6E55               	movwf	slinjim@dividend^0,c
  1739  00026A  5006               	movf	(_tmpcenter@joysticks$F1609+1)^0,w,c
  1740  00026C  580C               	subwfb	(_adc_read+1)^0,w,c
  1741  00026E  6E56               	movwf	(slinjim@dividend+1)^0,c
  1742  000270  C003  F057         	movff	_tmphighm@joysticks$F1610,slinjim@multiplier
  1743  000274  C004  F058         	movff	_tmphighm@joysticks$F1610+1,slinjim@multiplier+1
  1744  000278  EC7A  F008         	call	_slinjim	;wreg free
  1745  00027C  0F80               	addlw	128
  1746  00027E  6EDF               	movwf	indf2,c
  1747  000280  EF8F  F001         	goto	l1149
  1748  000284                     l3618:
  1749                           
  1750                           ; BSR set to: 1
  1751  000284  0EFC               	movlw	252
  1752  000286  6F3C               	movwf	??_scansticks& (0+255),b
  1753  000288  0EFF               	movlw	255
  1754  00028A  6F3D               	movwf	(??_scansticks+1)& (0+255),b
  1755  00028C  C005  F13E         	movff	_tmpcenter@joysticks$F1609,??_scansticks+2
  1756  000290  C006  F13F         	movff	_tmpcenter@joysticks$F1609+1,??_scansticks+3
  1757  000294  513C               	movf	??_scansticks& (0+255),w,b
  1758  000296  273E               	addwf	(??_scansticks+2)& (0+255),f,b
  1759  000298  513D               	movf	(??_scansticks+1)& (0+255),w,b
  1760  00029A  233F               	addwfc	(??_scansticks+3)& (0+255),f,b
  1761  00029C  513E               	movf	(??_scansticks+2)& (0+255),w,b
  1762  00029E  5C0B               	subwf	_adc_read^0,w,c
  1763  0002A0  513F               	movf	(??_scansticks+3)& (0+255),w,b
  1764  0002A2  580C               	subwfb	(_adc_read+1)^0,w,c
  1765  0002A4  B0D8               	btfsc	status,0,c
  1766  0002A6  EF57  F001         	goto	u1241
  1767  0002AA  EF59  F001         	goto	u1240
  1768  0002AE                     u1241:
  1769  0002AE  EF87  F001         	goto	l3626
  1770  0002B2                     u1240:
  1771  0002B2                     
  1772                           ; BSR set to: 1
  1773                           ;joysticks.c: 201:                 {;joysticks.c: 202:                     if (adc_read 
      +                          <= tmplow)
  1774  0002B2  500B               	movf	_adc_read^0,w,c
  1775  0002B4  5C07               	subwf	_tmplow@joysticks$F1608^0,w,c
  1776  0002B6  500C               	movf	(_adc_read+1)^0,w,c
  1777  0002B8  5808               	subwfb	(_tmplow@joysticks$F1608+1)^0,w,c
  1778  0002BA  A0D8               	btfss	status,0,c
  1779  0002BC  EF62  F001         	goto	u1251
  1780  0002C0  EF64  F001         	goto	u1250
  1781  0002C4                     u1251:
  1782  0002C4  EF6E  F001         	goto	l3624
  1783  0002C8                     u1250:
  1784  0002C8                     
  1785                           ; BSR set to: 1
  1786                           ;joysticks.c: 203:                     {;joysticks.c: 204:                         gConP
      +                          ollPacket[stickIdx+2] = 28U;
  1787  0002C8  0E32               	movlw	low (_gConPollPacket+2)
  1788  0002CA  2415               	addwf	_stickIdx@joysticks$F1612^0,w,c
  1789  0002CC  6ED9               	movwf	fsr2l,c
  1790  0002CE  6ADA               	clrf	fsr2h,c
  1791  0002D0  0E00               	movlw	high (_gConPollPacket+2)
  1792  0002D2  22DA               	addwfc	fsr2h,f,c
  1793  0002D4  0E1C               	movlw	28
  1794  0002D6  6EDF               	movwf	indf2,c
  1795                           
  1796                           ;joysticks.c: 205:                     }
  1797  0002D8  EF8F  F001         	goto	l1149
  1798  0002DC                     l3624:
  1799                           
  1800                           ; BSR set to: 1
  1801                           ;joysticks.c: 207:                     {;joysticks.c: 208:                         gConP
      +                          ollPacket[stickIdx+2] = 127U - slinjim(tmpcenter - adc_read, tmplowm);
  1802  0002DC  0E32               	movlw	low (_gConPollPacket+2)
  1803  0002DE  2415               	addwf	_stickIdx@joysticks$F1612^0,w,c
  1804  0002E0  6ED9               	movwf	fsr2l,c
  1805  0002E2  6ADA               	clrf	fsr2h,c
  1806  0002E4  0E00               	movlw	high (_gConPollPacket+2)
  1807  0002E6  22DA               	addwfc	fsr2h,f,c
  1808  0002E8  500B               	movf	_adc_read^0,w,c
  1809  0002EA  5C05               	subwf	_tmpcenter@joysticks$F1609^0,w,c
  1810  0002EC  6E55               	movwf	slinjim@dividend^0,c
  1811  0002EE  500C               	movf	(_adc_read+1)^0,w,c
  1812  0002F0  5806               	subwfb	(_tmpcenter@joysticks$F1609+1)^0,w,c
  1813  0002F2  6E56               	movwf	(slinjim@dividend+1)^0,c
  1814  0002F4  C001  F057         	movff	_tmplowm@joysticks$F1611,slinjim@multiplier
  1815  0002F8  C002  F058         	movff	_tmplowm@joysticks$F1611+1,slinjim@multiplier+1
  1816  0002FC  EC7A  F008         	call	_slinjim	;wreg free
  1817  000300  0101               	movlb	1	; () banked
  1818  000302  6F3C               	movwf	??_scansticks& (0+255),b
  1819  000304  513C               	movf	??_scansticks& (0+255),w,b
  1820  000306  087F               	sublw	127
  1821  000308  6EDF               	movwf	indf2,c
  1822  00030A  EF8F  F001         	goto	l1149
  1823  00030E                     l3626:
  1824                           
  1825                           ; BSR set to: 1
  1826                           ;joysticks.c: 212:                 {;joysticks.c: 213:                     gConPollPacke
      +                          t[stickIdx+2] = 128U;
  1827  00030E  0E32               	movlw	low (_gConPollPacket+2)
  1828  000310  2415               	addwf	_stickIdx@joysticks$F1612^0,w,c
  1829  000312  6ED9               	movwf	fsr2l,c
  1830  000314  6ADA               	clrf	fsr2h,c
  1831  000316  0E00               	movlw	high (_gConPollPacket+2)
  1832  000318  22DA               	addwfc	fsr2h,f,c
  1833  00031A  0E80               	movlw	128
  1834  00031C  6EDF               	movwf	indf2,c
  1835  00031E                     l1149:
  1836  00031E  0012               	return		;funcret
  1837  000320                     __end_of_scansticks:
  1838                           	callstack 0
  1839                           
  1840 ;; *************** function _slinjim *****************
  1841 ;; Defined at:
  1842 ;;		line 55 in file "joysticks.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;  dividend        2   10[COMRAM] unsigned int 
  1845 ;;  multiplier      2   12[COMRAM] unsigned int 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;  conversion      2   14[COMRAM] unsigned int 
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      unsigned char 
  1850 ;; Registers used:
  1851 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1857 ;;      Params:         4       0       0       0       0       0       0       0       0
  1858 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1859 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1860 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1861 ;;Total ram usage:        6 bytes
  1862 ;; Hardware stack levels used: 1
  1863 ;; Hardware stack levels required when called: 3
  1864 ;; This function calls:
  1865 ;;		___wmul
  1866 ;; This function is called by:
  1867 ;;		_scansticks
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           	psect	text6
  1872  0010F4                     __ptext6:
  1873                           	callstack 0
  1874  0010F4                     _slinjim:
  1875                           	callstack 26
  1876  0010F4                     
  1877                           ;joysticks.c: 55: unsigned char slinjim(uint16_t dividend, uint16_t multiplier);joystick
      +                          s.c: 56: {;joysticks.c: 57:     uint16_t conversion = (dividend * multiplier+1) >> 8;
  1878  0010F4  C055  F04F         	movff	slinjim@dividend,___wmul@multiplier
  1879  0010F8  C056  F050         	movff	slinjim@dividend+1,___wmul@multiplier+1
  1880  0010FC  C057  F051         	movff	slinjim@multiplier,___wmul@multiplicand
  1881  001100  C058  F052         	movff	slinjim@multiplier+1,___wmul@multiplicand+1
  1882  001104  EC51  F008         	call	___wmul	;wreg free
  1883  001108  0E01               	movlw	1
  1884  00110A  264F               	addwf	?___wmul^0,f,c
  1885  00110C  0E00               	movlw	0
  1886  00110E  2250               	addwfc	(?___wmul+1)^0,f,c
  1887  001110  5050               	movf	(?___wmul+1)^0,w,c
  1888  001112  6E59               	movwf	slinjim@conversion^0,c
  1889  001114  6A5A               	clrf	(slinjim@conversion+1)^0,c
  1890  001116                     
  1891                           ;joysticks.c: 58:     return (unsigned char) conversion;
  1892  001116  5059               	movf	slinjim@conversion^0,w,c
  1893  001118  0012               	return		;funcret
  1894  00111A                     __end_of_slinjim:
  1895                           	callstack 0
  1896                           
  1897 ;; *************** function ___wmul *****************
  1898 ;; Defined at:
  1899 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;  multiplier      2    4[COMRAM] unsigned int 
  1902 ;;  multiplicand    2    6[COMRAM] unsigned int 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  product         2    8[COMRAM] unsigned int 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  2    4[COMRAM] unsigned int 
  1907 ;; Registers used:
  1908 ;;		wreg, status,2, status,0, prodl, prodh
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1914 ;;      Params:         4       0       0       0       0       0       0       0       0
  1915 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1916 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1917 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1918 ;;Total ram usage:        6 bytes
  1919 ;; Hardware stack levels used: 1
  1920 ;; Hardware stack levels required when called: 2
  1921 ;; This function calls:
  1922 ;;		Nothing
  1923 ;; This function is called by:
  1924 ;;		_slinjim
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           	psect	text7
  1929  0010A2                     __ptext7:
  1930                           	callstack 0
  1931  0010A2                     ___wmul:
  1932                           	callstack 26
  1933  0010A2  504F               	movf	___wmul@multiplier^0,w,c
  1934  0010A4  0251               	mulwf	___wmul@multiplicand^0,c
  1935  0010A6  006F FFCC  F053    	movff	prodl,___wmul@product
  1936  0010AC  006F FFD0  F054    	movff	prodh,___wmul@product+1
  1937  0010B2  504F               	movf	___wmul@multiplier^0,w,c
  1938  0010B4  0252               	mulwf	(___wmul@multiplicand+1)^0,c
  1939  0010B6  50F3               	movf	243,w,c
  1940  0010B8  2654               	addwf	(___wmul@product+1)^0,f,c
  1941  0010BA  5050               	movf	(___wmul@multiplier+1)^0,w,c
  1942  0010BC  0251               	mulwf	___wmul@multiplicand^0,c
  1943  0010BE  50F3               	movf	243,w,c
  1944  0010C0  2654               	addwf	(___wmul@product+1)^0,f,c
  1945  0010C2  C053  F04F         	movff	___wmul@product,?___wmul
  1946  0010C6  C054  F050         	movff	___wmul@product+1,?___wmul+1
  1947  0010CA  0012               	return		;funcret
  1948  0010CC                     __end_of___wmul:
  1949                           	callstack 0
  1950                           
  1951 ;; *************** function _loadsettings *****************
  1952 ;; Defined at:
  1953 ;;		line 81 in file "settings.c"
  1954 ;; Parameters:    Size  Location     Type
  1955 ;;		None
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;  loading         2   12[COMRAM] PTR unsigned char 
  1958 ;;		 -> SettingData(45), 
  1959 ;;  i               1   14[COMRAM] unsigned char 
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      void 
  1962 ;; Registers used:
  1963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1969 ;;      Params:         0       0       0       0       0       0       0       0       0
  1970 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1971 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1972 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1973 ;;Total ram usage:        3 bytes
  1974 ;; Hardware stack levels used: 1
  1975 ;; Hardware stack levels required when called: 4
  1976 ;; This function calls:
  1977 ;;		_DATAEE_ReadByte
  1978 ;;		_memset
  1979 ;;		_savesettings
  1980 ;;		_setdefaultsettings
  1981 ;; This function is called by:
  1982 ;;		_main
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           	psect	text8
  1987  000BA0                     __ptext8:
  1988                           	callstack 0
  1989  000BA0                     _loadsettings:
  1990                           	callstack 26
  1991  000BA0                     
  1992                           ;settings.c: 84:     memset((void*)&SettingData, 0, sizeof(Settings));
  1993  000BA0  0EAA               	movlw	low _SettingData
  1994  000BA2  6E4F               	movwf	memset@p1^0,c
  1995  000BA4  0E00               	movlw	high _SettingData
  1996  000BA6  6E50               	movwf	(memset@p1+1)^0,c
  1997  000BA8  0E00               	movlw	0
  1998  000BAA  6E52               	movwf	(memset@c+1)^0,c
  1999  000BAC  0E00               	movlw	0
  2000  000BAE  6E51               	movwf	memset@c^0,c
  2001  000BB0  0E00               	movlw	0
  2002  000BB2  6E54               	movwf	(memset@n+1)^0,c
  2003  000BB4  0E2D               	movlw	45
  2004  000BB6  6E53               	movwf	memset@n^0,c
  2005  000BB8  ECE6  F007         	call	_memset	;wreg free
  2006  000BBC                     
  2007                           ;settings.c: 86:     uint8_t* loading = (uint8_t*)&SettingData;
  2008  000BBC  0EAA               	movlw	low _SettingData
  2009  000BBE  6E57               	movwf	loadsettings@loading^0,c
  2010  000BC0  0E00               	movlw	high _SettingData
  2011  000BC2  6E58               	movwf	(loadsettings@loading+1)^0,c
  2012  000BC4                     
  2013                           ;settings.c: 87:     uint8_t i;;settings.c: 89:     for (i = 0; i < sizeof(Settings); i+
      +                          +)
  2014  000BC4  0E00               	movlw	0
  2015  000BC6  6E59               	movwf	loadsettings@i^0,c
  2016  000BC8                     l1414:
  2017  000BC8  0004               	clrwdt		;# 
  2018  000BCA                     
  2019                           ;settings.c: 92:         loading[i] = DATAEE_ReadByte(i);
  2020  000BCA  5059               	movf	loadsettings@i^0,w,c
  2021  000BCC  2457               	addwf	loadsettings@loading^0,w,c
  2022  000BCE  6ED9               	movwf	fsr2l,c
  2023  000BD0  0E00               	movlw	0
  2024  000BD2  2058               	addwfc	(loadsettings@loading+1)^0,w,c
  2025  000BD4  6EDA               	movwf	fsr2h,c
  2026  000BD6  5059               	movf	loadsettings@i^0,w,c
  2027  000BD8  ECAD  F008         	call	_DATAEE_ReadByte
  2028  000BDC  6EDF               	movwf	indf2,c
  2029  000BDE                     
  2030                           ;settings.c: 95:         if (i == 3U && SettingData.configKey != 0x4EF4)
  2031  000BDE  0E03               	movlw	3
  2032  000BE0  1859               	xorwf	loadsettings@i^0,w,c
  2033  000BE2  A4D8               	btfss	status,2,c
  2034  000BE4  EFF6  F005         	goto	u851
  2035  000BE8  EFF8  F005         	goto	u850
  2036  000BEC                     u851:
  2037  000BEC  EF0B  F006         	goto	l3200
  2038  000BF0                     u850:
  2039  000BF0  0EF4               	movlw	244
  2040  000BF2  0100               	movlb	0	; () banked
  2041  000BF4  19AC               	xorwf	(_SettingData+2)& (0+255),w,b
  2042  000BF6  E109               	bnz	u860
  2043  000BF8  0E4E               	movlw	78
  2044  000BFA  19AD               	xorwf	(_SettingData+3)& (0+255),w,b
  2045  000BFC  B4D8               	btfsc	status,2,c
  2046  000BFE  EF03  F006         	goto	u861
  2047  000C02  EF05  F006         	goto	u860
  2048  000C06                     u861:
  2049  000C06  EF0B  F006         	goto	l3200
  2050  000C0A                     u860:
  2051  000C0A                     
  2052                           ; BSR set to: 0
  2053                           ;settings.c: 96:         {;settings.c: 98:             setdefaultsettings();
  2054  000C0A  EC74  F005         	call	_setdefaultsettings	;wreg free
  2055  000C0E                     
  2056                           ;settings.c: 99:             savesettings();
  2057  000C0E  EC20  F008         	call	_savesettings	;wreg free
  2058  000C12  EF14  F006         	goto	l1417
  2059  000C16                     l3200:
  2060                           
  2061                           ;settings.c: 102:     }
  2062  000C16  2A59               	incf	loadsettings@i^0,f,c
  2063  000C18  0E2C               	movlw	44
  2064  000C1A  6459               	cpfsgt	loadsettings@i^0,c
  2065  000C1C  EF12  F006         	goto	u871
  2066  000C20  EF14  F006         	goto	u870
  2067  000C24                     u871:
  2068  000C24  EFE4  F005         	goto	l1414
  2069  000C28                     u870:
  2070  000C28                     l1417:
  2071  000C28  0012               	return		;funcret
  2072  000C2A                     __end_of_loadsettings:
  2073                           	callstack 0
  2074                           
  2075 ;; *************** function _setdefaultsettings *****************
  2076 ;; Defined at:
  2077 ;;		line 15 in file "settings.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;		None
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;		None
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  1    wreg      void 
  2084 ;; Registers used:
  2085 ;;		wreg, status,2
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2091 ;;      Params:         0       0       0       0       0       0       0       0       0
  2092 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2093 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2094 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2095 ;;Total ram usage:        0 bytes
  2096 ;; Hardware stack levels used: 1
  2097 ;; Hardware stack levels required when called: 2
  2098 ;; This function calls:
  2099 ;;		Nothing
  2100 ;; This function is called by:
  2101 ;;		_loadsettings
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           	psect	text9
  2106  000AE8                     __ptext9:
  2107                           	callstack 0
  2108  000AE8                     _setdefaultsettings:
  2109                           	callstack 27
  2110  000AE8                     
  2111                           ;settings.c: 17:     SettingData.buffer = 0x0000;
  2112  000AE8  0E00               	movlw	0
  2113  000AEA  0100               	movlb	0	; () banked
  2114  000AEC  6FAB               	movwf	(_SettingData+1)& (0+255),b
  2115  000AEE  0E00               	movlw	0
  2116  000AF0  6FAA               	movwf	_SettingData& (0+255),b
  2117                           
  2118                           ;settings.c: 18:     SettingData.configKey = 0x4EF4;
  2119  000AF2  0E4E               	movlw	78
  2120  000AF4  6FAD               	movwf	(_SettingData+3)& (0+255),b
  2121  000AF6  0EF4               	movlw	244
  2122  000AF8  6FAC               	movwf	(_SettingData+2)& (0+255),b
  2123                           
  2124                           ;settings.c: 20:     SettingData.sx_low = 0x0008;
  2125  000AFA  0E00               	movlw	0
  2126  000AFC  6FAF               	movwf	(_SettingData+5)& (0+255),b
  2127  000AFE  0E08               	movlw	8
  2128  000B00  6FAE               	movwf	(_SettingData+4)& (0+255),b
  2129                           
  2130                           ;settings.c: 21:     SettingData.sx_center = 254U;
  2131  000B02  0E00               	movlw	0
  2132  000B04  6FB1               	movwf	(_SettingData+7)& (0+255),b
  2133  000B06  0EFE               	movlw	254
  2134  000B08  6FB0               	movwf	(_SettingData+6)& (0+255),b
  2135                           
  2136                           ;settings.c: 22:     SettingData.sx_high = 385U;
  2137  000B0A  0E01               	movlw	1
  2138  000B0C  6FB3               	movwf	(_SettingData+9)& (0+255),b
  2139  000B0E  0E81               	movlw	129
  2140  000B10  6FB2               	movwf	(_SettingData+8)& (0+255),b
  2141                           
  2142                           ;settings.c: 24:     SettingData.sy_low = 140U;
  2143  000B12  0E00               	movlw	0
  2144  000B14  6FB5               	movwf	(_SettingData+11)& (0+255),b
  2145  000B16  0E8C               	movlw	140
  2146  000B18  6FB4               	movwf	(_SettingData+10)& (0+255),b
  2147                           
  2148                           ;settings.c: 25:     SettingData.sy_center = 252U;
  2149  000B1A  0E00               	movlw	0
  2150  000B1C  6FB7               	movwf	(_SettingData+13)& (0+255),b
  2151  000B1E  0EFC               	movlw	252
  2152  000B20  6FB6               	movwf	(_SettingData+12)& (0+255),b
  2153                           
  2154                           ;settings.c: 26:     SettingData.sy_high = 398U;
  2155  000B22  0E01               	movlw	1
  2156  000B24  6FB9               	movwf	(_SettingData+15)& (0+255),b
  2157  000B26  0E8E               	movlw	142
  2158  000B28  6FB8               	movwf	(_SettingData+14)& (0+255),b
  2159                           
  2160                           ;settings.c: 28:     SettingData.cx_low = 108U;
  2161  000B2A  0E00               	movlw	0
  2162  000B2C  6FBB               	movwf	(_SettingData+17)& (0+255),b
  2163  000B2E  0E6C               	movlw	108
  2164  000B30  6FBA               	movwf	(_SettingData+16)& (0+255),b
  2165                           
  2166                           ;settings.c: 29:     SettingData.cx_center = 252U;
  2167  000B32  0E00               	movlw	0
  2168  000B34  6FBD               	movwf	(_SettingData+19)& (0+255),b
  2169  000B36  0EFC               	movlw	252
  2170  000B38  6FBC               	movwf	(_SettingData+18)& (0+255),b
  2171                           
  2172                           ;settings.c: 30:     SettingData.cx_high = 355U;
  2173  000B3A  0E01               	movlw	1
  2174  000B3C  6FBF               	movwf	(_SettingData+21)& (0+255),b
  2175  000B3E  0E63               	movlw	99
  2176  000B40  6FBE               	movwf	(_SettingData+20)& (0+255),b
  2177                           
  2178                           ;settings.c: 32:     SettingData.cy_low = 127U;
  2179  000B42  0E00               	movlw	0
  2180  000B44  6FC1               	movwf	(_SettingData+23)& (0+255),b
  2181  000B46  0E7F               	movlw	127
  2182  000B48  6FC0               	movwf	(_SettingData+22)& (0+255),b
  2183                           
  2184                           ;settings.c: 33:     SettingData.cy_center = 254U;
  2185  000B4A  0E00               	movlw	0
  2186  000B4C  6FC3               	movwf	(_SettingData+25)& (0+255),b
  2187  000B4E  0EFE               	movlw	254
  2188  000B50  6FC2               	movwf	(_SettingData+24)& (0+255),b
  2189                           
  2190                           ;settings.c: 34:     SettingData.cy_high = 385U;
  2191  000B52  0E01               	movlw	1
  2192  000B54  6FC5               	movwf	(_SettingData+27)& (0+255),b
  2193  000B56  0E81               	movlw	129
  2194  000B58  6FC4               	movwf	(_SettingData+26)& (0+255),b
  2195                           
  2196                           ;settings.c: 36:     SettingData.sx_highMultiplier = 200U;
  2197  000B5A  0E00               	movlw	0
  2198  000B5C  6FC7               	movwf	(_SettingData+29)& (0+255),b
  2199  000B5E  0EC8               	movlw	200
  2200  000B60  6FC6               	movwf	(_SettingData+28)& (0+255),b
  2201                           
  2202                           ;settings.c: 37:     SettingData.sx_lowMultiplier = 232U;
  2203  000B62  0E00               	movlw	0
  2204  000B64  6FC9               	movwf	(_SettingData+31)& (0+255),b
  2205  000B66  0EE8               	movlw	232
  2206  000B68  6FC8               	movwf	(_SettingData+30)& (0+255),b
  2207                           
  2208                           ;settings.c: 39:     SettingData.sy_highMultiplier = 175U;
  2209  000B6A  0E00               	movlw	0
  2210  000B6C  6FCB               	movwf	(_SettingData+33)& (0+255),b
  2211  000B6E  0EAF               	movlw	175
  2212  000B70  6FCA               	movwf	(_SettingData+32)& (0+255),b
  2213                           
  2214                           ;settings.c: 40:     SettingData.sy_lowMultiplier = 228U;
  2215  000B72  0E00               	movlw	0
  2216  000B74  6FCD               	movwf	(_SettingData+35)& (0+255),b
  2217  000B76  0EE4               	movlw	228
  2218  000B78  6FCC               	movwf	(_SettingData+34)& (0+255),b
  2219                           
  2220                           ;settings.c: 42:     SettingData.cx_highMultiplier = 257U;
  2221  000B7A  0E01               	movlw	1
  2222  000B7C  6FCF               	movwf	(_SettingData+37)& (0+255),b
  2223  000B7E  0E01               	movlw	1
  2224  000B80  6FCE               	movwf	(_SettingData+36)& (0+255),b
  2225                           
  2226                           ;settings.c: 43:     SettingData.cx_lowMultiplier = 177U;
  2227  000B82  0E00               	movlw	0
  2228  000B84  6FD1               	movwf	(_SettingData+39)& (0+255),b
  2229  000B86  0EB1               	movlw	177
  2230  000B88  6FD0               	movwf	(_SettingData+38)& (0+255),b
  2231                           
  2232                           ;settings.c: 45:     SettingData.cy_highMultiplier = 195U;
  2233  000B8A  0E00               	movlw	0
  2234  000B8C  6FD3               	movwf	(_SettingData+41)& (0+255),b
  2235  000B8E  0EC3               	movlw	195
  2236  000B90  6FD2               	movwf	(_SettingData+40)& (0+255),b
  2237                           
  2238                           ;settings.c: 46:     SettingData.cy_lowMultiplier = 201U;
  2239  000B92  0E00               	movlw	0
  2240  000B94  6FD5               	movwf	(_SettingData+43)& (0+255),b
  2241  000B96  0EC9               	movlw	201
  2242  000B98  6FD4               	movwf	(_SettingData+42)& (0+255),b
  2243                           
  2244                           ;settings.c: 48:     SettingData.trigger_mode = 0x0;
  2245  000B9A  0E00               	movlw	0
  2246  000B9C  6FD6               	movwf	(_SettingData+44)& (0+255),b
  2247  000B9E                     
  2248                           ; BSR set to: 0
  2249  000B9E  0012               	return		;funcret
  2250  000BA0                     __end_of_setdefaultsettings:
  2251                           	callstack 0
  2252                           
  2253 ;; *************** function _savesettings *****************
  2254 ;; Defined at:
  2255 ;;		line 105 in file "settings.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;		None
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;  writing         2    7[COMRAM] PTR unsigned char 
  2260 ;;		 -> SettingData(45), 
  2261 ;;  i               1    9[COMRAM] unsigned char 
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  1    wreg      void 
  2264 ;; Registers used:
  2265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2271 ;;      Params:         0       0       0       0       0       0       0       0       0
  2272 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2273 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2274 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2275 ;;Total ram usage:        3 bytes
  2276 ;; Hardware stack levels used: 1
  2277 ;; Hardware stack levels required when called: 3
  2278 ;; This function calls:
  2279 ;;		_DATAEE_WriteByte
  2280 ;; This function is called by:
  2281 ;;		_main
  2282 ;;		_loadsettings
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text10
  2287  001040                     __ptext10:
  2288                           	callstack 0
  2289  001040                     _savesettings:
  2290                           	callstack 27
  2291  001040                     
  2292                           ;settings.c: 107:     uint8_t i;;settings.c: 108:     uint8_t* writing = (uint8_t*)&Sett
      +                          ingData;
  2293  001040  0EAA               	movlw	low _SettingData
  2294  001042  6E52               	movwf	savesettings@writing^0,c
  2295  001044  0E00               	movlw	high _SettingData
  2296  001046  6E53               	movwf	(savesettings@writing+1)^0,c
  2297  001048                     
  2298                           ;settings.c: 109:     for (i = 0; i < sizeof(Settings); i++)
  2299  001048  0E00               	movlw	0
  2300  00104A  6E54               	movwf	savesettings@i^0,c
  2301  00104C                     l3120:
  2302                           
  2303                           ;settings.c: 110:     {;settings.c: 111:         DATAEE_WriteByte(i, writing[i]);
  2304  00104C  5054               	movf	savesettings@i^0,w,c
  2305  00104E  2452               	addwf	savesettings@writing^0,w,c
  2306  001050  6ED9               	movwf	fsr2l,c
  2307  001052  0E00               	movlw	0
  2308  001054  2053               	addwfc	(savesettings@writing+1)^0,w,c
  2309  001056  6EDA               	movwf	fsr2h,c
  2310  001058  50DF               	movf	indf2,w,c
  2311  00105A  6E4F               	movwf	DATAEE_WriteByte@bData^0,c
  2312  00105C  5054               	movf	savesettings@i^0,w,c
  2313  00105E  EC82  F007         	call	_DATAEE_WriteByte
  2314  001062                     
  2315                           ;settings.c: 112:     }
  2316  001062  2A54               	incf	savesettings@i^0,f,c
  2317  001064  0E2C               	movlw	44
  2318  001066  6454               	cpfsgt	savesettings@i^0,c
  2319  001068  EF38  F008         	goto	u831
  2320  00106C  EF3A  F008         	goto	u830
  2321  001070                     u831:
  2322  001070  EF26  F008         	goto	l3120
  2323  001074                     u830:
  2324  001074  0012               	return		;funcret
  2325  001076                     __end_of_savesettings:
  2326                           	callstack 0
  2327                           
  2328 ;; *************** function _DATAEE_WriteByte *****************
  2329 ;; Defined at:
  2330 ;;		line 165 in file "mcc_generated_files/memory.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  bAdd            1    wreg     unsigned char 
  2333 ;;  bData           1    4[COMRAM] unsigned char 
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;  bAdd            1    5[COMRAM] unsigned char 
  2336 ;;  GIEBitValue     1    6[COMRAM] unsigned char 
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  1    wreg      void 
  2339 ;; Registers used:
  2340 ;;		wreg, status,2
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2346 ;;      Params:         1       0       0       0       0       0       0       0       0
  2347 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2348 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2349 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2350 ;;Total ram usage:        3 bytes
  2351 ;; Hardware stack levels used: 1
  2352 ;; Hardware stack levels required when called: 2
  2353 ;; This function calls:
  2354 ;;		Nothing
  2355 ;; This function is called by:
  2356 ;;		_savesettings
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           	psect	text11
  2361  000F04                     __ptext11:
  2362                           	callstack 0
  2363  000F04                     _DATAEE_WriteByte:
  2364                           	callstack 27
  2365                           
  2366                           ;incstack = 0
  2367                           ;DATAEE_WriteByte@bAdd stored from wreg
  2368  000F04  6E50               	movwf	DATAEE_WriteByte@bAdd^0,c
  2369  000F06                     
  2370                           ;mcc_generated_files/memory.c: 165: void DATAEE_WriteByte(uint8_t bAdd, uint8_t bData);m
      +                          cc_generated_files/memory.c: 166: {;mcc_generated_files/memory.c: 167:     uint8_t GIEBi
      +                          tValue = INTCON0bits.GIE;
  2371  000F06  0E00               	movlw	0
  2372  000F08  BED2               	btfsc	210,7,c	;volatile
  2373  000F0A  0E01               	movlw	1
  2374  000F0C  6E51               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
  2375  000F0E                     
  2376                           ;mcc_generated_files/memory.c: 169:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  2377  000F0E  0060  F143  F9E0   	movff	DATAEE_WriteByte@bAdd,14816	;volatile
  2378  000F14                     
  2379                           ;mcc_generated_files/memory.c: 170:     NVMDAT = bData;
  2380  000F14  0060  F13F  F9E3   	movff	DATAEE_WriteByte@bData,14819	;volatile
  2381  000F1A                     
  2382                           ;mcc_generated_files/memory.c: 171:     NVMCON1bits.NVMREG = 0;
  2383  000F1A  0E3F               	movlw	-193
  2384  000F1C  0139               	movlb	57	; () banked
  2385  000F1E  17E5               	andwf	229,f,b	;volsfr
  2386  000F20                     
  2387                           ; BSR set to: 57
  2388                           ;mcc_generated_files/memory.c: 172:     NVMCON1bits.WREN = 1;
  2389  000F20  85E5               	bsf	229,2,b	;volsfr
  2390  000F22                     
  2391                           ; BSR set to: 57
  2392                           ;mcc_generated_files/memory.c: 173:     INTCON0bits.GIE = 0;
  2393  000F22  9ED2               	bcf	210,7,c	;volatile
  2394  000F24                     
  2395                           ; BSR set to: 57
  2396                           ;mcc_generated_files/memory.c: 174:     NVMCON2 = 0x55;
  2397  000F24  0E55               	movlw	85
  2398  000F26  6FE6               	movwf	230,b	;volsfr
  2399  000F28                     
  2400                           ; BSR set to: 57
  2401                           ;mcc_generated_files/memory.c: 175:     NVMCON2 = 0xAA;
  2402  000F28  0EAA               	movlw	170
  2403  000F2A  6FE6               	movwf	230,b	;volsfr
  2404  000F2C                     
  2405                           ; BSR set to: 57
  2406                           ;mcc_generated_files/memory.c: 176:     NVMCON1bits.WR = 1;
  2407  000F2C  83E5               	bsf	229,1,b	;volsfr
  2408  000F2E                     l1473:
  2409                           
  2410                           ; BSR set to: 57
  2411                           ;mcc_generated_files/memory.c: 178:     while (NVMCON1bits.WR)
  2412  000F2E  B3E5               	btfsc	229,1,b	;volsfr
  2413  000F30  EF9C  F007         	goto	u781
  2414  000F34  EF9E  F007         	goto	u780
  2415  000F38                     u781:
  2416  000F38  EF97  F007         	goto	l1473
  2417  000F3C                     u780:
  2418  000F3C                     
  2419                           ; BSR set to: 57
  2420                           ;mcc_generated_files/memory.c: 182:     NVMCON1bits.WREN = 0;
  2421  000F3C  95E5               	bcf	229,2,b	;volsfr
  2422                           
  2423                           ;mcc_generated_files/memory.c: 183:     INTCON0bits.GIE = GIEBitValue;
  2424  000F3E  B051               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
  2425  000F40  D002               	bra	u795
  2426  000F42  9ED2               	bcf	210,7,c	;volatile
  2427  000F44  D001               	bra	u796
  2428  000F46                     u795:
  2429  000F46  8ED2               	bsf	210,7,c	;volatile
  2430  000F48                     u796:
  2431  000F48  0012               	return		;funcret
  2432  000F4A                     __end_of_DATAEE_WriteByte:
  2433                           	callstack 0
  2434                           
  2435 ;; *************** function _memset *****************
  2436 ;; Defined at:
  2437 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\memset.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;  p1              2    4[COMRAM] PTR void 
  2440 ;;		 -> SettingData(45), 
  2441 ;;  c               2    6[COMRAM] int 
  2442 ;;  n               2    8[COMRAM] unsigned int 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  p               2   10[COMRAM] PTR unsigned char 
  2445 ;;		 -> SettingData(45), 
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  2    4[COMRAM] PTR void 
  2448 ;; Registers used:
  2449 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2455 ;;      Params:         6       0       0       0       0       0       0       0       0
  2456 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2457 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2458 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2459 ;;Total ram usage:        8 bytes
  2460 ;; Hardware stack levels used: 1
  2461 ;; Hardware stack levels required when called: 2
  2462 ;; This function calls:
  2463 ;;		Nothing
  2464 ;; This function is called by:
  2465 ;;		_loadsettings
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           	psect	text12
  2470  000FCC                     __ptext12:
  2471                           	callstack 0
  2472  000FCC                     _memset:
  2473                           	callstack 27
  2474  000FCC  C04F  F055         	movff	memset@p1,memset@p
  2475  000FD0  C050  F056         	movff	memset@p1+1,memset@p+1
  2476  000FD4  EFF7  F007         	goto	l3150
  2477  000FD8                     l3146:
  2478  000FD8  0060  F157  FFD9   	movff	memset@p,fsr2l
  2479  000FDE  0060  F15B  FFDA   	movff	memset@p+1,fsr2h
  2480  000FE4  0060  F147  FFDF   	movff	memset@c,indf2
  2481  000FEA  4A55               	infsnz	memset@p^0,f,c
  2482  000FEC  2A56               	incf	(memset@p+1)^0,f,c
  2483  000FEE                     l3150:
  2484  000FEE  0653               	decf	memset@n^0,f,c
  2485  000FF0  A0D8               	btfss	status,0,c
  2486  000FF2  0654               	decf	(memset@n+1)^0,f,c
  2487  000FF4  2853               	incf	memset@n^0,w,c
  2488  000FF6  E106               	bnz	u841
  2489  000FF8  2854               	incf	(memset@n+1)^0,w,c
  2490  000FFA  A4D8               	btfss	status,2,c
  2491  000FFC  EF02  F008         	goto	u841
  2492  001000  EF04  F008         	goto	u840
  2493  001004                     u841:
  2494  001004  EFEC  F007         	goto	l3146
  2495  001008                     u840:
  2496  001008  0012               	return		;funcret
  2497  00100A                     __end_of_memset:
  2498                           	callstack 0
  2499                           
  2500 ;; *************** function _DATAEE_ReadByte *****************
  2501 ;; Defined at:
  2502 ;;		line 186 in file "mcc_generated_files/memory.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;  bAdd            1    wreg     unsigned char 
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;  bAdd            1    4[COMRAM] unsigned char 
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      unsigned char 
  2509 ;; Registers used:
  2510 ;;		wreg, status,2
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2516 ;;      Params:         0       0       0       0       0       0       0       0       0
  2517 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2518 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2519 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2520 ;;Total ram usage:        1 bytes
  2521 ;; Hardware stack levels used: 1
  2522 ;; Hardware stack levels required when called: 2
  2523 ;; This function calls:
  2524 ;;		Nothing
  2525 ;; This function is called by:
  2526 ;;		_loadsettings
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530                           	psect	text13
  2531  00115A                     __ptext13:
  2532                           	callstack 0
  2533  00115A                     _DATAEE_ReadByte:
  2534                           	callstack 27
  2535                           
  2536                           ;incstack = 0
  2537                           ;DATAEE_ReadByte@bAdd stored from wreg
  2538  00115A  6E4F               	movwf	DATAEE_ReadByte@bAdd^0,c
  2539  00115C                     
  2540                           ;mcc_generated_files/memory.c: 186: uint8_t DATAEE_ReadByte(uint8_t bAdd);mcc_generated_
      +                          files/memory.c: 187: {;mcc_generated_files/memory.c: 188:     NVMADRL = (uint8_t)(bAdd &
      +                           0xFF);
  2541  00115C  0060  F13F  F9E0   	movff	DATAEE_ReadByte@bAdd,14816	;volatile
  2542  001162                     
  2543                           ;mcc_generated_files/memory.c: 189:     NVMCON1bits.NVMREG = 0;
  2544  001162  0E3F               	movlw	-193
  2545  001164  0139               	movlb	57	; () banked
  2546  001166  17E5               	andwf	229,f,b	;volsfr
  2547  001168                     
  2548                           ; BSR set to: 57
  2549                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.RD = 1;
  2550  001168  81E5               	bsf	229,0,b	;volsfr
  2551  00116A                     
  2552                           ; BSR set to: 57
  2553                           ;mcc_generated_files/memory.c: 191:     __nop();
  2554  00116A  F000               	nop	
  2555  00116C                     
  2556                           ;mcc_generated_files/memory.c: 192:     __nop();
  2557  00116C  F000               	nop	
  2558  00116E                     
  2559                           ;mcc_generated_files/memory.c: 194:     return (NVMDAT);
  2560  00116E  0139               	movlb	57	; () banked
  2561  001170  51E3               	movf	227,w,b	;volatile
  2562  001172                     
  2563                           ; BSR set to: 57
  2564  001172  0012               	return		;funcret
  2565  001174                     __end_of_DATAEE_ReadByte:
  2566                           	callstack 0
  2567                           
  2568 ;; *************** function _checkbuttons *****************
  2569 ;; Defined at:
  2570 ;;		line 12 in file "button.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;		None
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;		None
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  1    wreg      void 
  2577 ;; Registers used:
  2578 ;;		wreg, status,2, status,0
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2584 ;;      Params:         0       0       0       0       0       0       0       0       0
  2585 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2586 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2587 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2588 ;;Total ram usage:        2 bytes
  2589 ;; Hardware stack levels used: 1
  2590 ;; Hardware stack levels required when called: 2
  2591 ;; This function calls:
  2592 ;;		Nothing
  2593 ;; This function is called by:
  2594 ;;		_main
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           	psect	text14
  2599  0007B0                     __ptext14:
  2600                           	callstack 0
  2601  0007B0                     _checkbuttons:
  2602                           	callstack 28
  2603  0007B0                     
  2604                           ;button.c: 18:     if (!(gInStatus & (1 << 1)))
  2605  0007B0  B228               	btfsc	_gInStatus^0,1,c	;volatile
  2606  0007B2  EFDD  F003         	goto	u291
  2607  0007B6  EFDF  F003         	goto	u290
  2608  0007BA                     u291:
  2609  0007BA  EFE8  F003         	goto	l2596
  2610  0007BE                     u290:
  2611  0007BE                     
  2612                           ;button.c: 19:     {;button.c: 22:         gConPollPacket[0] = 0x0;
  2613  0007BE  0E00               	movlw	0
  2614  0007C0  6E30               	movwf	_gConPollPacket^0,c	;volatile
  2615                           
  2616                           ;button.c: 23:         gConPollPacket[1] = 0x0;
  2617  0007C2  0E00               	movlw	0
  2618  0007C4  6E31               	movwf	(_gConPollPacket+1)^0,c	;volatile
  2619                           
  2620                           ;button.c: 24:         gConPollPacket[6] = 0x0;
  2621  0007C6  0E00               	movlw	0
  2622  0007C8  6E36               	movwf	(_gConPollPacket+6)^0,c	;volatile
  2623                           
  2624                           ;button.c: 25:         gConPollPacket[7] = 0x0;
  2625  0007CA  0E00               	movlw	0
  2626  0007CC  6E37               	movwf	(_gConPollPacket+7)^0,c	;volatile
  2627  0007CE  8228               	bsf	_gInStatus,1,c	;# 
  2628  0007D0                     l2596:
  2629                           
  2630                           ;button.c: 34:     gConPollPacket[0] |= !PORTCbits.RC1 << 4;
  2631  0007D0  A2CC               	btfss	204,1,c	;volatile
  2632  0007D2  EFED  F003         	goto	u301
  2633  0007D6  EFF1  F003         	goto	u300
  2634  0007DA                     u301:
  2635  0007DA  6A4F               	clrf	??_checkbuttons^0,c
  2636  0007DC  2A4F               	incf	??_checkbuttons^0,f,c
  2637  0007DE  EFF2  F003         	goto	u318
  2638  0007E2                     u300:
  2639  0007E2  6A4F               	clrf	??_checkbuttons^0,c
  2640  0007E4                     u318:
  2641  0007E4  384F               	swapf	??_checkbuttons^0,w,c
  2642  0007E6  0BF0               	andlw	240
  2643  0007E8  1230               	iorwf	_gConPollPacket^0,f,c	;volatile
  2644  0007EA                     
  2645                           ;button.c: 35:     gConPollPacket[0] |= !PORTAbits.RA6 << 3;
  2646  0007EA  ACCA               	btfss	202,6,c	;volatile
  2647  0007EC  EFFA  F003         	goto	u321
  2648  0007F0  EFFE  F003         	goto	u320
  2649  0007F4                     u321:
  2650  0007F4  6A4F               	clrf	??_checkbuttons^0,c
  2651  0007F6  2A4F               	incf	??_checkbuttons^0,f,c
  2652  0007F8  EFFF  F003         	goto	u338
  2653  0007FC                     u320:
  2654  0007FC  6A4F               	clrf	??_checkbuttons^0,c
  2655  0007FE                     u338:
  2656  0007FE  90D8               	bcf	status,0,c
  2657  000800  364F               	rlcf	??_checkbuttons^0,f,c
  2658  000802  90D8               	bcf	status,0,c
  2659  000804  364F               	rlcf	??_checkbuttons^0,f,c
  2660  000806  90D8               	bcf	status,0,c
  2661  000808  344F               	rlcf	??_checkbuttons^0,w,c
  2662  00080A  1230               	iorwf	_gConPollPacket^0,f,c	;volatile
  2663  00080C                     
  2664                           ;button.c: 36:     gConPollPacket[0] |= !PORTAbits.RA7 << 2;
  2665  00080C  AECA               	btfss	202,7,c	;volatile
  2666  00080E  EF0B  F004         	goto	u341
  2667  000812  EF0F  F004         	goto	u340
  2668  000816                     u341:
  2669  000816  6A4F               	clrf	??_checkbuttons^0,c
  2670  000818  2A4F               	incf	??_checkbuttons^0,f,c
  2671  00081A  EF10  F004         	goto	u358
  2672  00081E                     u340:
  2673  00081E  6A4F               	clrf	??_checkbuttons^0,c
  2674  000820                     u358:
  2675  000820  90D8               	bcf	status,0,c
  2676  000822  364F               	rlcf	??_checkbuttons^0,f,c
  2677  000824  90D8               	bcf	status,0,c
  2678  000826  344F               	rlcf	??_checkbuttons^0,w,c
  2679  000828  1230               	iorwf	_gConPollPacket^0,f,c	;volatile
  2680  00082A                     
  2681                           ;button.c: 37:     gConPollPacket[0] |= !PORTAbits.RA5 << 1;
  2682  00082A  AACA               	btfss	202,5,c	;volatile
  2683  00082C  EF1A  F004         	goto	u361
  2684  000830  EF1E  F004         	goto	u360
  2685  000834                     u361:
  2686  000834  6A4F               	clrf	??_checkbuttons^0,c
  2687  000836  2A4F               	incf	??_checkbuttons^0,f,c
  2688  000838  EF1F  F004         	goto	u378
  2689  00083C                     u360:
  2690  00083C  6A4F               	clrf	??_checkbuttons^0,c
  2691  00083E                     u378:
  2692  00083E  90D8               	bcf	status,0,c
  2693  000840  344F               	rlcf	??_checkbuttons^0,w,c
  2694  000842  1230               	iorwf	_gConPollPacket^0,f,c	;volatile
  2695  000844                     
  2696                           ;button.c: 38:     gConPollPacket[0] |= !PORTAbits.RA4;
  2697  000844  A8CA               	btfss	202,4,c	;volatile
  2698  000846  EF27  F004         	goto	u381
  2699  00084A  EF2A  F004         	goto	u380
  2700  00084E                     u381:
  2701  00084E  0E01               	movlw	1
  2702  000850  EF2B  F004         	goto	u390
  2703  000854                     u380:
  2704  000854  0E00               	movlw	0
  2705  000856                     u390:
  2706  000856  1230               	iorwf	_gConPollPacket^0,f,c	;volatile
  2707  000858                     
  2708                           ;button.c: 43:     gConPollPacket[1] = 1 << 7;
  2709  000858  0E80               	movlw	128
  2710  00085A  6E31               	movwf	(_gConPollPacket+1)^0,c	;volatile
  2711                           
  2712                           ;button.c: 44:     gConPollPacket[1] |= !PORTCbits.RC5 << 6;
  2713  00085C  AACC               	btfss	204,5,c	;volatile
  2714  00085E  EF33  F004         	goto	u401
  2715  000862  EF37  F004         	goto	u400
  2716  000866                     u401:
  2717  000866  6A4F               	clrf	??_checkbuttons^0,c
  2718  000868  2A4F               	incf	??_checkbuttons^0,f,c
  2719  00086A  EF38  F004         	goto	u418
  2720  00086E                     u400:
  2721  00086E  6A4F               	clrf	??_checkbuttons^0,c
  2722  000870                     u418:
  2723  000870  0E06               	movlw	6
  2724  000872  6E50               	movwf	(??_checkbuttons+1)^0,c
  2725  000874                     u425:
  2726  000874  90D8               	bcf	status,0,c
  2727  000876  364F               	rlcf	??_checkbuttons^0,f,c
  2728  000878  2E50               	decfsz	(??_checkbuttons+1)^0,f,c
  2729  00087A  EF3A  F004         	goto	u425
  2730  00087E  504F               	movf	??_checkbuttons^0,w,c
  2731  000880  1231               	iorwf	(_gConPollPacket+1)^0,f,c	;volatile
  2732                           
  2733                           ;button.c: 45:     gConPollPacket[1] |= !PORTCbits.RC2 << 5;
  2734  000882  A4CC               	btfss	204,2,c	;volatile
  2735  000884  EF46  F004         	goto	u431
  2736  000888  EF4A  F004         	goto	u430
  2737  00088C                     u431:
  2738  00088C  6A4F               	clrf	??_checkbuttons^0,c
  2739  00088E  2A4F               	incf	??_checkbuttons^0,f,c
  2740  000890  EF4B  F004         	goto	u448
  2741  000894                     u430:
  2742  000894  6A4F               	clrf	??_checkbuttons^0,c
  2743  000896                     u448:
  2744  000896  0E05               	movlw	5
  2745  000898  6E50               	movwf	(??_checkbuttons+1)^0,c
  2746  00089A                     u455:
  2747  00089A  90D8               	bcf	status,0,c
  2748  00089C  364F               	rlcf	??_checkbuttons^0,f,c
  2749  00089E  2E50               	decfsz	(??_checkbuttons+1)^0,f,c
  2750  0008A0  EF4D  F004         	goto	u455
  2751  0008A4  504F               	movf	??_checkbuttons^0,w,c
  2752  0008A6  1231               	iorwf	(_gConPollPacket+1)^0,f,c	;volatile
  2753                           
  2754                           ;button.c: 48:     gConPollPacket[1] |= !PORTBbits.RB5 << 4;
  2755  0008A8  AACB               	btfss	203,5,c	;volatile
  2756  0008AA  EF59  F004         	goto	u461
  2757  0008AE  EF5D  F004         	goto	u460
  2758  0008B2                     u461:
  2759  0008B2  6A4F               	clrf	??_checkbuttons^0,c
  2760  0008B4  2A4F               	incf	??_checkbuttons^0,f,c
  2761  0008B6  EF5E  F004         	goto	u478
  2762  0008BA                     u460:
  2763  0008BA  6A4F               	clrf	??_checkbuttons^0,c
  2764  0008BC                     u478:
  2765  0008BC  384F               	swapf	??_checkbuttons^0,w,c
  2766  0008BE  0BF0               	andlw	240
  2767  0008C0  1231               	iorwf	(_gConPollPacket+1)^0,f,c	;volatile
  2768                           
  2769                           ;button.c: 49:     gConPollPacket[1] |= !PORTCbits.RC0 << 4;
  2770  0008C2  A0CC               	btfss	204,0,c	;volatile
  2771  0008C4  EF66  F004         	goto	u481
  2772  0008C8  EF6A  F004         	goto	u480
  2773  0008CC                     u481:
  2774  0008CC  6A4F               	clrf	??_checkbuttons^0,c
  2775  0008CE  2A4F               	incf	??_checkbuttons^0,f,c
  2776  0008D0  EF6B  F004         	goto	u498
  2777  0008D4                     u480:
  2778  0008D4  6A4F               	clrf	??_checkbuttons^0,c
  2779  0008D6                     u498:
  2780  0008D6  384F               	swapf	??_checkbuttons^0,w,c
  2781  0008D8  0BF0               	andlw	240
  2782  0008DA  1231               	iorwf	(_gConPollPacket+1)^0,f,c	;volatile
  2783                           
  2784                           ;button.c: 51:     gConPollPacket[1] |= !PORTCbits.RC6 << 3;
  2785  0008DC  ACCC               	btfss	204,6,c	;volatile
  2786  0008DE  EF73  F004         	goto	u501
  2787  0008E2  EF77  F004         	goto	u500
  2788  0008E6                     u501:
  2789  0008E6  6A4F               	clrf	??_checkbuttons^0,c
  2790  0008E8  2A4F               	incf	??_checkbuttons^0,f,c
  2791  0008EA  EF78  F004         	goto	u518
  2792  0008EE                     u500:
  2793  0008EE  6A4F               	clrf	??_checkbuttons^0,c
  2794  0008F0                     u518:
  2795  0008F0  90D8               	bcf	status,0,c
  2796  0008F2  364F               	rlcf	??_checkbuttons^0,f,c
  2797  0008F4  90D8               	bcf	status,0,c
  2798  0008F6  364F               	rlcf	??_checkbuttons^0,f,c
  2799  0008F8  90D8               	bcf	status,0,c
  2800  0008FA  344F               	rlcf	??_checkbuttons^0,w,c
  2801  0008FC  1231               	iorwf	(_gConPollPacket+1)^0,f,c	;volatile
  2802                           
  2803                           ;button.c: 52:     gConPollPacket[1] |= !PORTCbits.RC7 << 2;
  2804  0008FE  AECC               	btfss	204,7,c	;volatile
  2805  000900  EF84  F004         	goto	u521
  2806  000904  EF88  F004         	goto	u520
  2807  000908                     u521:
  2808  000908  6A4F               	clrf	??_checkbuttons^0,c
  2809  00090A  2A4F               	incf	??_checkbuttons^0,f,c
  2810  00090C  EF89  F004         	goto	u538
  2811  000910                     u520:
  2812  000910  6A4F               	clrf	??_checkbuttons^0,c
  2813  000912                     u538:
  2814  000912  90D8               	bcf	status,0,c
  2815  000914  364F               	rlcf	??_checkbuttons^0,f,c
  2816  000916  90D8               	bcf	status,0,c
  2817  000918  344F               	rlcf	??_checkbuttons^0,w,c
  2818  00091A  1231               	iorwf	(_gConPollPacket+1)^0,f,c	;volatile
  2819                           
  2820                           ;button.c: 53:     gConPollPacket[1] |= !PORTBbits.RB0 << 1;
  2821  00091C  A0CB               	btfss	203,0,c	;volatile
  2822  00091E  EF93  F004         	goto	u541
  2823  000922  EF97  F004         	goto	u540
  2824  000926                     u541:
  2825  000926  6A4F               	clrf	??_checkbuttons^0,c
  2826  000928  2A4F               	incf	??_checkbuttons^0,f,c
  2827  00092A  EF98  F004         	goto	u558
  2828  00092E                     u540:
  2829  00092E  6A4F               	clrf	??_checkbuttons^0,c
  2830  000930                     u558:
  2831  000930  90D8               	bcf	status,0,c
  2832  000932  344F               	rlcf	??_checkbuttons^0,w,c
  2833  000934  1231               	iorwf	(_gConPollPacket+1)^0,f,c	;volatile
  2834                           
  2835                           ;button.c: 54:     gConPollPacket[1] |= !PORTBbits.RB1;
  2836  000936  A2CB               	btfss	203,1,c	;volatile
  2837  000938  EFA0  F004         	goto	u561
  2838  00093C  EFA3  F004         	goto	u560
  2839  000940                     u561:
  2840  000940  0E01               	movlw	1
  2841  000942  EFA4  F004         	goto	u570
  2842  000946                     u560:
  2843  000946  0E00               	movlw	0
  2844  000948                     u570:
  2845  000948  1231               	iorwf	(_gConPollPacket+1)^0,f,c	;volatile
  2846  00094A  0012               	return		;funcret
  2847  00094C                     __end_of_checkbuttons:
  2848                           	callstack 0
  2849                           
  2850 ;; *************** function _calibratesticks *****************
  2851 ;; Defined at:
  2852 ;;		line 227 in file "joysticks.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;		None
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;		None
  2857 ;; Return value:  Size  Location     Type
  2858 ;;                  1    wreg      void 
  2859 ;; Registers used:
  2860 ;;		wreg, status,2, status,0
  2861 ;; Tracked objects:
  2862 ;;		On entry : 0/0
  2863 ;;		On exit  : 0/0
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2866 ;;      Params:         0       0       0       0       0       0       0       0       0
  2867 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2868 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2869 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2870 ;;Total ram usage:        2 bytes
  2871 ;; Hardware stack levels used: 1
  2872 ;; Hardware stack levels required when called: 2
  2873 ;; This function calls:
  2874 ;;		Nothing
  2875 ;; This function is called by:
  2876 ;;		_main
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           	psect	text15
  2881  000320                     __ptext15:
  2882                           	callstack 0
  2883  000320                     _calibratesticks:
  2884                           	callstack 28
  2885  000320                     
  2886                           ;joysticks.c: 231:     if (!initiatedRead)
  2887  000320  5014               	movf	_initiatedRead@joysticks$F1613^0,w,c
  2888  000322  A4D8               	btfss	status,2,c
  2889  000324  EF96  F001         	goto	u881
  2890  000328  EF98  F001         	goto	u880
  2891  00032C                     u881:
  2892  00032C  EFA4  F001         	goto	l1167
  2893  000330                     u880:
  2894  000330                     
  2895                           ;joysticks.c: 232:     {;joysticks.c: 233:         ADPCH = SX_A;
  2896  000330  0E02               	movlw	2
  2897  000332  013E               	movlb	62	; () banked
  2898  000334  6FF1               	movwf	241,b	;volatile
  2899  000336                     
  2900                           ; BSR set to: 62
  2901                           ;joysticks.c: 234:         ADCON0bits.ADGO = 1;
  2902  000336  81F8               	bsf	248,0,b	;volatile
  2903                           
  2904                           ;joysticks.c: 235:         stickIdx = 0;
  2905  000338  0E00               	movlw	0
  2906  00033A  6E15               	movwf	_stickIdx@joysticks$F1612^0,c
  2907                           
  2908                           ;joysticks.c: 236:         clearRead = 0;
  2909  00033C  0E00               	movlw	0
  2910  00033E  6E13               	movwf	_clearRead@joysticks$F1614^0,c
  2911                           
  2912                           ;joysticks.c: 237:         initiatedRead = 1;
  2913  000340  0E01               	movlw	1
  2914  000342  6E14               	movwf	_initiatedRead@joysticks$F1613^0,c
  2915                           
  2916                           ;joysticks.c: 238:     }
  2917  000344  EFBD  F002         	goto	l1177
  2918  000348                     l1167:
  2919                           
  2920                           ;joysticks.c: 240:     {;joysticks.c: 243:         if (!ADCON0bits.ADGO)
  2921  000348  013E               	movlb	62	; () banked
  2922  00034A  B1F8               	btfsc	248,0,b	;volatile
  2923  00034C  EFAA  F001         	goto	u891
  2924  000350  EFAC  F001         	goto	u890
  2925  000354                     u891:
  2926  000354  EFBD  F002         	goto	l1177
  2927  000358                     u890:
  2928  000358                     
  2929                           ; BSR set to: 62
  2930                           ;joysticks.c: 244:         {;joysticks.c: 245:             if (clearRead)
  2931  000358  5013               	movf	_clearRead@joysticks$F1614^0,w,c
  2932  00035A  B4D8               	btfsc	status,2,c
  2933  00035C  EFB2  F001         	goto	u901
  2934  000360  EFB4  F001         	goto	u900
  2935  000364                     u901:
  2936  000364  EFED  F001         	goto	l3236
  2937  000368                     u900:
  2938  000368  EFCA  F001         	goto	l3228
  2939  00036C                     l3216:
  2940                           
  2941                           ; BSR set to: 62
  2942                           ;joysticks.c: 251:                         ADPCH = SY_A;
  2943  00036C  0E03               	movlw	3
  2944  00036E  6FF1               	movwf	241,b	;volatile
  2945                           
  2946                           ;joysticks.c: 252:                         break;
  2947  000370  EFE7  F001         	goto	l3230
  2948  000374                     l3218:
  2949                           
  2950                           ; BSR set to: 62
  2951                           ;joysticks.c: 254:                         ADPCH = CX_A;
  2952  000374  0E00               	movlw	0
  2953  000376  6FF1               	movwf	241,b	;volatile
  2954                           
  2955                           ;joysticks.c: 255:                         break;
  2956  000378  EFE7  F001         	goto	l3230
  2957  00037C                     l3220:
  2958                           
  2959                           ; BSR set to: 62
  2960                           ;joysticks.c: 257:                         ADPCH = CY_A;
  2961  00037C  0E01               	movlw	1
  2962  00037E  6FF1               	movwf	241,b	;volatile
  2963                           
  2964                           ;joysticks.c: 258:                         break;
  2965  000380  EFE7  F001         	goto	l3230
  2966  000384                     l3222:
  2967                           
  2968                           ; BSR set to: 62
  2969                           ;joysticks.c: 260:                         initiatedRead = 0;
  2970  000384  0E00               	movlw	0
  2971  000386  6E14               	movwf	_initiatedRead@joysticks$F1613^0,c
  2972                           
  2973                           ;joysticks.c: 261:                         clearRead = 0;
  2974  000388  0E00               	movlw	0
  2975  00038A  6E13               	movwf	_clearRead@joysticks$F1614^0,c
  2976  00038C  EFBD  F002         	goto	l1177
  2977  000390                     l3224:
  2978                           
  2979                           ; BSR set to: 62
  2980                           ;joysticks.c: 262:                         return;
  2981  000390  EFBD  F002         	goto	l1177
  2982  000394                     l3228:
  2983                           
  2984                           ; BSR set to: 62
  2985  000394  5015               	movf	_stickIdx@joysticks$F1612^0,w,c
  2986  000396  6E4F               	movwf	??_calibratesticks^0,c
  2987  000398  6A50               	clrf	(??_calibratesticks+1)^0,c
  2988                           
  2989                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2990                           ; Switch size 1, requested type "simple"
  2991                           ; Number of cases is 1, Range of values is 0 to 0
  2992                           ; switch strategies available:
  2993                           ; Name         Instructions Cycles
  2994                           ; simple_byte            4     3 (average)
  2995                           ;	Chosen strategy is simple_byte
  2996  00039A  5050               	movf	(??_calibratesticks+1)^0,w,c
  2997  00039C  0A00               	xorlw	0	; case 0
  2998  00039E  B4D8               	btfsc	status,2,c
  2999  0003A0  EFD4  F001         	goto	l3808
  3000  0003A4  EFE7  F001         	goto	l3230
  3001  0003A8                     l3808:
  3002                           
  3003                           ; BSR set to: 62
  3004                           ; Switch size 1, requested type "simple"
  3005                           ; Number of cases is 4, Range of values is 0 to 3
  3006                           ; switch strategies available:
  3007                           ; Name         Instructions Cycles
  3008                           ; simple_byte           13     7 (average)
  3009                           ;	Chosen strategy is simple_byte
  3010  0003A8  504F               	movf	??_calibratesticks^0,w,c
  3011  0003AA  0A00               	xorlw	0	; case 0
  3012  0003AC  B4D8               	btfsc	status,2,c
  3013  0003AE  EFB6  F001         	goto	l3216
  3014  0003B2  0A01               	xorlw	1	; case 1
  3015  0003B4  B4D8               	btfsc	status,2,c
  3016  0003B6  EFBA  F001         	goto	l3218
  3017  0003BA  0A03               	xorlw	3	; case 2
  3018  0003BC  B4D8               	btfsc	status,2,c
  3019  0003BE  EFBE  F001         	goto	l3220
  3020  0003C2  0A01               	xorlw	1	; case 3
  3021  0003C4  B4D8               	btfsc	status,2,c
  3022  0003C6  EFC2  F001         	goto	l3222
  3023  0003CA  EFE7  F001         	goto	l3230
  3024  0003CE                     l3230:
  3025                           
  3026                           ; BSR set to: 62
  3027                           ;joysticks.c: 266:                 stickIdx++;
  3028  0003CE  2A15               	incf	_stickIdx@joysticks$F1612^0,f,c
  3029  0003D0                     
  3030                           ; BSR set to: 62
  3031                           ;joysticks.c: 267:                 clearRead = 0;
  3032  0003D0  0E00               	movlw	0
  3033  0003D2  6E13               	movwf	_clearRead@joysticks$F1614^0,c
  3034  0003D4                     
  3035                           ; BSR set to: 62
  3036                           ;joysticks.c: 268:                 ADCON0bits.ADGO = 1;
  3037  0003D4  81F8               	bsf	248,0,b	;volatile
  3038                           
  3039                           ;joysticks.c: 269:             }
  3040  0003D6  EFBD  F002         	goto	l1177
  3041  0003DA                     l3236:
  3042                           
  3043                           ; BSR set to: 62
  3044                           ;joysticks.c: 271:             {;joysticks.c: 272:                 clearRead = 1;
  3045  0003DA  0E01               	movlw	1
  3046  0003DC  6E13               	movwf	_clearRead@joysticks$F1614^0,c
  3047                           
  3048                           ;joysticks.c: 275:                 ADPCH = channel_VSS;
  3049  0003DE  0E3B               	movlw	59
  3050  0003E0  6FF1               	movwf	241,b	;volatile
  3051  0003E2                     
  3052                           ; BSR set to: 62
  3053                           ;joysticks.c: 276:                 ADCON0bits.ADGO = 1;
  3054  0003E2  81F8               	bsf	248,0,b	;volatile
  3055  0003E4                     
  3056                           ; BSR set to: 62
  3057                           ;joysticks.c: 280:                 adc_read = ((adc_result_t)((ADRESH << 8) + ADRESL)) >
      +                          > 3;
  3058  0003E4  51EF               	movf	239,w,b	;volatile
  3059  0003E6  006F FBC0  F04F    	movff	16112,??_calibratesticks	;volatile
  3060  0003EC  6A50               	clrf	(??_calibratesticks+1)^0,c
  3061  0003EE  C04F  F050         	movff	??_calibratesticks,??_calibratesticks+1
  3062  0003F2  6A4F               	clrf	??_calibratesticks^0,c
  3063  0003F4  264F               	addwf	??_calibratesticks^0,f,c
  3064  0003F6  0E00               	movlw	0
  3065  0003F8  2250               	addwfc	(??_calibratesticks+1)^0,f,c
  3066  0003FA  90D8               	bcf	status,0,c
  3067  0003FC  3250               	rrcf	(??_calibratesticks+1)^0,f,c
  3068  0003FE  324F               	rrcf	??_calibratesticks^0,f,c
  3069  000400  90D8               	bcf	status,0,c
  3070  000402  3250               	rrcf	(??_calibratesticks+1)^0,f,c
  3071  000404  324F               	rrcf	??_calibratesticks^0,f,c
  3072  000406  90D8               	bcf	status,0,c
  3073  000408  3250               	rrcf	(??_calibratesticks+1)^0,f,c
  3074  00040A  324F               	rrcf	??_calibratesticks^0,f,c
  3075  00040C  C04F  F00B         	movff	??_calibratesticks,_adc_read
  3076  000410  C050  F00C         	movff	??_calibratesticks+1,_adc_read+1
  3077                           
  3078                           ;joysticks.c: 284:                 switch (stickIdx)
  3079  000414  EFA0  F002         	goto	l3276
  3080  000418                     l3242:
  3081                           
  3082                           ; BSR set to: 62
  3083                           ;joysticks.c: 288:                         if (adc_read > SettingData.sx_high)
  3084  000418  500B               	movf	_adc_read^0,w,c
  3085  00041A  0100               	movlb	0	; () banked
  3086  00041C  5DB2               	subwf	(_SettingData+8)& (0+255),w,b
  3087  00041E  500C               	movf	(_adc_read+1)^0,w,c
  3088  000420  59B3               	subwfb	(_SettingData+9)& (0+255),w,b
  3089  000422  B0D8               	btfsc	status,0,c
  3090  000424  EF16  F002         	goto	u911
  3091  000428  EF18  F002         	goto	u910
  3092  00042C                     u911:
  3093  00042C  EF1C  F002         	goto	l3246
  3094  000430                     u910:
  3095  000430                     
  3096                           ; BSR set to: 0
  3097                           ;joysticks.c: 289:                         {;joysticks.c: 290:                          
      +                             SettingData.sx_high = adc_read;
  3098  000430  C00B  F0B2         	movff	_adc_read,_SettingData+8
  3099  000434  C00C  F0B3         	movff	_adc_read+1,_SettingData+9
  3100  000438                     l3246:
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;joysticks.c: 293:                         if (adc_read < SettingData.sx_low)
  3104  000438  51AE               	movf	(_SettingData+4)& (0+255),w,b
  3105  00043A  5C0B               	subwf	_adc_read^0,w,c
  3106  00043C  51AF               	movf	(_SettingData+5)& (0+255),w,b
  3107  00043E  580C               	subwfb	(_adc_read+1)^0,w,c
  3108  000440  B0D8               	btfsc	status,0,c
  3109  000442  EF25  F002         	goto	u921
  3110  000446  EF27  F002         	goto	u920
  3111  00044A                     u921:
  3112  00044A  EF2B  F002         	goto	l1182
  3113  00044E                     u920:
  3114  00044E                     
  3115                           ; BSR set to: 0
  3116                           ;joysticks.c: 294:                         {;joysticks.c: 295:                          
      +                             SettingData.sx_low = adc_read;
  3117  00044E  C00B  F0AE         	movff	_adc_read,_SettingData+4
  3118  000452  C00C  F0AF         	movff	_adc_read+1,_SettingData+5
  3119  000456                     l1182:
  3120                           
  3121                           ; BSR set to: 0
  3122                           ;joysticks.c: 298:                         SettingData.sx_center = adc_read;
  3123  000456  C00B  F0B0         	movff	_adc_read,_SettingData+6
  3124  00045A  C00C  F0B1         	movff	_adc_read+1,_SettingData+7
  3125                           
  3126                           ;joysticks.c: 300:                         break;
  3127  00045E  EFBD  F002         	goto	l1177
  3128  000462                     l3250:
  3129                           
  3130                           ; BSR set to: 62
  3131                           ;joysticks.c: 304:                         if (adc_read > SettingData.sy_high)
  3132  000462  500B               	movf	_adc_read^0,w,c
  3133  000464  0100               	movlb	0	; () banked
  3134  000466  5DB8               	subwf	(_SettingData+14)& (0+255),w,b
  3135  000468  500C               	movf	(_adc_read+1)^0,w,c
  3136  00046A  59B9               	subwfb	(_SettingData+15)& (0+255),w,b
  3137  00046C  B0D8               	btfsc	status,0,c
  3138  00046E  EF3B  F002         	goto	u931
  3139  000472  EF3D  F002         	goto	u930
  3140  000476                     u931:
  3141  000476  EF41  F002         	goto	l3254
  3142  00047A                     u930:
  3143  00047A                     
  3144                           ; BSR set to: 0
  3145                           ;joysticks.c: 305:                         {;joysticks.c: 306:                          
      +                             SettingData.sy_high = adc_read;
  3146  00047A  C00B  F0B8         	movff	_adc_read,_SettingData+14
  3147  00047E  C00C  F0B9         	movff	_adc_read+1,_SettingData+15
  3148  000482                     l3254:
  3149                           
  3150                           ; BSR set to: 0
  3151                           ;joysticks.c: 309:                         if (adc_read < SettingData.sy_low)
  3152  000482  51B4               	movf	(_SettingData+10)& (0+255),w,b
  3153  000484  5C0B               	subwf	_adc_read^0,w,c
  3154  000486  51B5               	movf	(_SettingData+11)& (0+255),w,b
  3155  000488  580C               	subwfb	(_adc_read+1)^0,w,c
  3156  00048A  B0D8               	btfsc	status,0,c
  3157  00048C  EF4A  F002         	goto	u941
  3158  000490  EF4C  F002         	goto	u940
  3159  000494                     u941:
  3160  000494  EF50  F002         	goto	l1186
  3161  000498                     u940:
  3162  000498                     
  3163                           ; BSR set to: 0
  3164                           ;joysticks.c: 310:                         {;joysticks.c: 311:                          
      +                             SettingData.sy_low = adc_read;
  3165  000498  C00B  F0B4         	movff	_adc_read,_SettingData+10
  3166  00049C  C00C  F0B5         	movff	_adc_read+1,_SettingData+11
  3167  0004A0                     l1186:
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;joysticks.c: 314:                         SettingData.sy_center = adc_read;
  3171  0004A0  C00B  F0B6         	movff	_adc_read,_SettingData+12
  3172  0004A4  C00C  F0B7         	movff	_adc_read+1,_SettingData+13
  3173                           
  3174                           ;joysticks.c: 316:                         break;
  3175  0004A8  EFBD  F002         	goto	l1177
  3176  0004AC                     l3258:
  3177                           
  3178                           ; BSR set to: 62
  3179                           ;joysticks.c: 320:                         if (adc_read > SettingData.cx_high)
  3180  0004AC  500B               	movf	_adc_read^0,w,c
  3181  0004AE  0100               	movlb	0	; () banked
  3182  0004B0  5DBE               	subwf	(_SettingData+20)& (0+255),w,b
  3183  0004B2  500C               	movf	(_adc_read+1)^0,w,c
  3184  0004B4  59BF               	subwfb	(_SettingData+21)& (0+255),w,b
  3185  0004B6  B0D8               	btfsc	status,0,c
  3186  0004B8  EF60  F002         	goto	u951
  3187  0004BC  EF62  F002         	goto	u950
  3188  0004C0                     u951:
  3189  0004C0  EF66  F002         	goto	l3262
  3190  0004C4                     u950:
  3191  0004C4                     
  3192                           ; BSR set to: 0
  3193                           ;joysticks.c: 321:                         {;joysticks.c: 322:                          
      +                             SettingData.cx_high = adc_read;
  3194  0004C4  C00B  F0BE         	movff	_adc_read,_SettingData+20
  3195  0004C8  C00C  F0BF         	movff	_adc_read+1,_SettingData+21
  3196  0004CC                     l3262:
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;joysticks.c: 325:                         if (adc_read < SettingData.cx_low)
  3200  0004CC  51BA               	movf	(_SettingData+16)& (0+255),w,b
  3201  0004CE  5C0B               	subwf	_adc_read^0,w,c
  3202  0004D0  51BB               	movf	(_SettingData+17)& (0+255),w,b
  3203  0004D2  580C               	subwfb	(_adc_read+1)^0,w,c
  3204  0004D4  B0D8               	btfsc	status,0,c
  3205  0004D6  EF6F  F002         	goto	u961
  3206  0004DA  EF71  F002         	goto	u960
  3207  0004DE                     u961:
  3208  0004DE  EF75  F002         	goto	l1189
  3209  0004E2                     u960:
  3210  0004E2                     
  3211                           ; BSR set to: 0
  3212                           ;joysticks.c: 326:                         {;joysticks.c: 327:                          
      +                             SettingData.cx_low = adc_read;
  3213  0004E2  C00B  F0BA         	movff	_adc_read,_SettingData+16
  3214  0004E6  C00C  F0BB         	movff	_adc_read+1,_SettingData+17
  3215  0004EA                     l1189:
  3216                           
  3217                           ; BSR set to: 0
  3218                           ;joysticks.c: 330:                         SettingData.cx_center = adc_read;
  3219  0004EA  C00B  F0BC         	movff	_adc_read,_SettingData+18
  3220  0004EE  C00C  F0BD         	movff	_adc_read+1,_SettingData+19
  3221                           
  3222                           ;joysticks.c: 332:                         break;
  3223  0004F2  EFBD  F002         	goto	l1177
  3224  0004F6                     l3266:
  3225                           
  3226                           ; BSR set to: 62
  3227                           ;joysticks.c: 336:                         if (adc_read > SettingData.cy_high)
  3228  0004F6  500B               	movf	_adc_read^0,w,c
  3229  0004F8  0100               	movlb	0	; () banked
  3230  0004FA  5DC4               	subwf	(_SettingData+26)& (0+255),w,b
  3231  0004FC  500C               	movf	(_adc_read+1)^0,w,c
  3232  0004FE  59C5               	subwfb	(_SettingData+27)& (0+255),w,b
  3233  000500  B0D8               	btfsc	status,0,c
  3234  000502  EF85  F002         	goto	u971
  3235  000506  EF87  F002         	goto	u970
  3236  00050A                     u971:
  3237  00050A  EF8B  F002         	goto	l3270
  3238  00050E                     u970:
  3239  00050E                     
  3240                           ; BSR set to: 0
  3241                           ;joysticks.c: 337:                         {;joysticks.c: 338:                          
      +                             SettingData.cy_high = adc_read;
  3242  00050E  C00B  F0C4         	movff	_adc_read,_SettingData+26
  3243  000512  C00C  F0C5         	movff	_adc_read+1,_SettingData+27
  3244  000516                     l3270:
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;joysticks.c: 341:                         if (adc_read < SettingData.cy_low)
  3248  000516  51C0               	movf	(_SettingData+22)& (0+255),w,b
  3249  000518  5C0B               	subwf	_adc_read^0,w,c
  3250  00051A  51C1               	movf	(_SettingData+23)& (0+255),w,b
  3251  00051C  580C               	subwfb	(_adc_read+1)^0,w,c
  3252  00051E  B0D8               	btfsc	status,0,c
  3253  000520  EF94  F002         	goto	u981
  3254  000524  EF96  F002         	goto	u980
  3255  000528                     u981:
  3256  000528  EF9A  F002         	goto	l1192
  3257  00052C                     u980:
  3258  00052C                     
  3259                           ; BSR set to: 0
  3260                           ;joysticks.c: 342:                         {;joysticks.c: 343:                          
      +                             SettingData.cy_low = adc_read;
  3261  00052C  C00B  F0C0         	movff	_adc_read,_SettingData+22
  3262  000530  C00C  F0C1         	movff	_adc_read+1,_SettingData+23
  3263  000534                     l1192:
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;joysticks.c: 346:                         SettingData.cy_center = adc_read;
  3267  000534  C00B  F0C2         	movff	_adc_read,_SettingData+24
  3268  000538  C00C  F0C3         	movff	_adc_read+1,_SettingData+25
  3269                           
  3270                           ;joysticks.c: 348:                         break;
  3271  00053C  EFBD  F002         	goto	l1177
  3272  000540                     l3276:
  3273                           
  3274                           ; BSR set to: 62
  3275  000540  5015               	movf	_stickIdx@joysticks$F1612^0,w,c
  3276  000542  6E4F               	movwf	??_calibratesticks^0,c
  3277  000544  6A50               	clrf	(??_calibratesticks+1)^0,c
  3278                           
  3279                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3280                           ; Switch size 1, requested type "simple"
  3281                           ; Number of cases is 1, Range of values is 0 to 0
  3282                           ; switch strategies available:
  3283                           ; Name         Instructions Cycles
  3284                           ; simple_byte            4     3 (average)
  3285                           ;	Chosen strategy is simple_byte
  3286  000546  5050               	movf	(??_calibratesticks+1)^0,w,c
  3287  000548  0A00               	xorlw	0	; case 0
  3288  00054A  B4D8               	btfsc	status,2,c
  3289  00054C  EFAA  F002         	goto	l3810
  3290  000550  EFC8  F001         	goto	l3224
  3291  000554                     l3810:
  3292                           
  3293                           ; BSR set to: 62
  3294                           ; Switch size 1, requested type "simple"
  3295                           ; Number of cases is 4, Range of values is 0 to 3
  3296                           ; switch strategies available:
  3297                           ; Name         Instructions Cycles
  3298                           ; simple_byte           13     7 (average)
  3299                           ;	Chosen strategy is simple_byte
  3300  000554  504F               	movf	??_calibratesticks^0,w,c
  3301  000556  0A00               	xorlw	0	; case 0
  3302  000558  B4D8               	btfsc	status,2,c
  3303  00055A  EF0C  F002         	goto	l3242
  3304  00055E  0A01               	xorlw	1	; case 1
  3305  000560  B4D8               	btfsc	status,2,c
  3306  000562  EF31  F002         	goto	l3250
  3307  000566  0A03               	xorlw	3	; case 2
  3308  000568  B4D8               	btfsc	status,2,c
  3309  00056A  EF56  F002         	goto	l3258
  3310  00056E  0A01               	xorlw	1	; case 3
  3311  000570  B4D8               	btfsc	status,2,c
  3312  000572  EF7B  F002         	goto	l3266
  3313  000576  EFC8  F001         	goto	l3224
  3314  00057A                     l1177:
  3315  00057A  0012               	return		;funcret
  3316  00057C                     __end_of_calibratesticks:
  3317                           	callstack 0
  3318                           
  3319 ;; *************** function _SYSTEM_Initialize *****************
  3320 ;; Defined at:
  3321 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;		None
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;		None
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  1    wreg      void 
  3328 ;; Registers used:
  3329 ;;		wreg, status,2, status,0, cstack
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3335 ;;      Params:         0       0       0       0       0       0       0       0       0
  3336 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3337 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3338 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3339 ;;Total ram usage:        0 bytes
  3340 ;; Hardware stack levels used: 1
  3341 ;; Hardware stack levels required when called: 4
  3342 ;; This function calls:
  3343 ;;		_ADCC_Initialize
  3344 ;;		_INTERRUPT_Initialize
  3345 ;;		_OSCILLATOR_Initialize
  3346 ;;		_PIN_MANAGER_Initialize
  3347 ;;		_PMD_Initialize
  3348 ;;		_SMT1_Initialize
  3349 ;; This function is called by:
  3350 ;;		_main
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           	psect	text16
  3355  001174                     __ptext16:
  3356                           	callstack 0
  3357  001174                     _SYSTEM_Initialize:
  3358                           	callstack 26
  3359  001174                     
  3360                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  3361  001174  ECE0  F008         	call	_INTERRUPT_Initialize	;wreg free
  3362  001178                     
  3363                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  3364  001178  EC8D  F008         	call	_PMD_Initialize	;wreg free
  3365  00117C                     
  3366                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3367  00117C  EC8E  F006         	call	_PIN_MANAGER_Initialize	;wreg free
  3368  001180                     
  3369                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3370  001180  ECC7  F008         	call	_OSCILLATOR_Initialize	;wreg free
  3371  001184                     
  3372                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  3373  001184  ECFE  F006         	call	_ADCC_Initialize	;wreg free
  3374  001188                     
  3375                           ;mcc_generated_files/mcc.c: 57:     SMT1_Initialize();
  3376  001188  EC3B  F008         	call	_SMT1_Initialize	;wreg free
  3377  00118C  0012               	return		;funcret
  3378  00118E                     __end_of_SYSTEM_Initialize:
  3379                           	callstack 0
  3380                           
  3381 ;; *************** function _SMT1_Initialize *****************
  3382 ;; Defined at:
  3383 ;;		line 60 in file "mcc_generated_files/smt1.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;		None
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;		None
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  1    wreg      void 
  3390 ;; Registers used:
  3391 ;;		wreg, status,2
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3397 ;;      Params:         0       0       0       0       0       0       0       0       0
  3398 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3399 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3400 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3401 ;;Total ram usage:        0 bytes
  3402 ;; Hardware stack levels used: 1
  3403 ;; Hardware stack levels required when called: 2
  3404 ;; This function calls:
  3405 ;;		Nothing
  3406 ;; This function is called by:
  3407 ;;		_SYSTEM_Initialize
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           	psect	text17
  3412  001076                     __ptext17:
  3413                           	callstack 0
  3414  001076                     _SMT1_Initialize:
  3415                           	callstack 27
  3416  001076                     
  3417                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x9C;
  3418  001076  0E9C               	movlw	156
  3419  001078  013F               	movlb	63	; () banked
  3420  00107A  6F1E               	movwf	30,b	;volatile
  3421                           
  3422                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0xC3;
  3423  00107C  0EC3               	movlw	195
  3424  00107E  6F1F               	movwf	31,b	;volatile
  3425                           
  3426                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
  3427  001080  0E00               	movlw	0
  3428  001082  6F20               	movwf	32,b	;volatile
  3429                           
  3430                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x00;
  3431  001084  0E00               	movlw	0
  3432  001086  6F21               	movwf	33,b	;volatile
  3433                           
  3434                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x0;
  3435  001088  0E00               	movlw	0
  3436  00108A  6F23               	movwf	35,b	;volatile
  3437                           
  3438                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
  3439  00108C  0E00               	movlw	0
  3440  00108E  6F22               	movwf	34,b	;volatile
  3441  001090                     
  3442                           ; BSR set to: 63
  3443                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0xFF;
  3444  001090  691D               	setf	29,b	;volatile
  3445  001092                     
  3446                           ; BSR set to: 63
  3447                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
  3448  001092  691C               	setf	28,b	;volatile
  3449  001094                     
  3450                           ; BSR set to: 63
  3451                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
  3452  001094  691B               	setf	27,b	;volatile
  3453  001096                     
  3454                           ; BSR set to: 63
  3455                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1PWAIE = 1;
  3456  001096  0139               	movlb	57	; () banked
  3457  001098  8F91               	bsf	145,7,b	;volatile
  3458  00109A                     
  3459                           ; BSR set to: 57
  3460                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PRAIE = 0;
  3461  00109A  9D91               	bcf	145,6,b	;volatile
  3462  00109C                     
  3463                           ; BSR set to: 57
  3464                           ;mcc_generated_files/smt1.c: 96:     SMT1CON1bits.SMT1GO = 1;
  3465  00109C  013F               	movlb	63	; () banked
  3466  00109E  8F1F               	bsf	31,7,b	;volatile
  3467  0010A0                     
  3468                           ; BSR set to: 63
  3469  0010A0  0012               	return		;funcret
  3470  0010A2                     __end_of_SMT1_Initialize:
  3471                           	callstack 0
  3472                           
  3473 ;; *************** function _PMD_Initialize *****************
  3474 ;; Defined at:
  3475 ;;		line 74 in file "mcc_generated_files/mcc.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;		None
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;		None
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  1    wreg      void 
  3482 ;; Registers used:
  3483 ;;		wreg, status,2
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3489 ;;      Params:         0       0       0       0       0       0       0       0       0
  3490 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3491 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3492 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3493 ;;Total ram usage:        0 bytes
  3494 ;; Hardware stack levels used: 1
  3495 ;; Hardware stack levels required when called: 2
  3496 ;; This function calls:
  3497 ;;		Nothing
  3498 ;; This function is called by:
  3499 ;;		_SYSTEM_Initialize
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           	psect	text18
  3504  00111A                     __ptext18:
  3505                           	callstack 0
  3506  00111A                     _PMD_Initialize:
  3507                           	callstack 27
  3508  00111A                     
  3509                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  3510  00111A  0E00               	movlw	0
  3511  00111C  0139               	movlb	57	; () banked
  3512  00111E  6FC0               	movwf	192,b	;volatile
  3513                           
  3514                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  3515  001120  0E00               	movlw	0
  3516  001122  6FC1               	movwf	193,b	;volatile
  3517                           
  3518                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  3519  001124  0E00               	movlw	0
  3520  001126  6FC2               	movwf	194,b	;volatile
  3521                           
  3522                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  3523  001128  0E00               	movlw	0
  3524  00112A  6FC3               	movwf	195,b	;volatile
  3525                           
  3526                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  3527  00112C  0E00               	movlw	0
  3528  00112E  6FC4               	movwf	196,b	;volatile
  3529                           
  3530                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  3531  001130  0E00               	movlw	0
  3532  001132  6FC5               	movwf	197,b	;volatile
  3533                           
  3534                           ;mcc_generated_files/mcc.c: 89:     PMD6 = 0x00;
  3535  001134  0E00               	movlw	0
  3536  001136  6FC6               	movwf	198,b	;volatile
  3537                           
  3538                           ;mcc_generated_files/mcc.c: 91:     PMD7 = 0x00;
  3539  001138  0E00               	movlw	0
  3540  00113A  6FC7               	movwf	199,b	;volatile
  3541  00113C                     
  3542                           ; BSR set to: 57
  3543  00113C  0012               	return		;funcret
  3544  00113E                     __end_of_PMD_Initialize:
  3545                           	callstack 0
  3546                           
  3547 ;; *************** function _PIN_MANAGER_Initialize *****************
  3548 ;; Defined at:
  3549 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;		None
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;		None
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  1    wreg      void 
  3556 ;; Registers used:
  3557 ;;		wreg, status,2, status,0, cstack
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3563 ;;      Params:         0       0       0       0       0       0       0       0       0
  3564 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3565 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3566 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3567 ;;Total ram usage:        0 bytes
  3568 ;; Hardware stack levels used: 1
  3569 ;; Hardware stack levels required when called: 3
  3570 ;; This function calls:
  3571 ;;		_IOCBF2_SetInterruptHandler
  3572 ;; This function is called by:
  3573 ;;		_SYSTEM_Initialize
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           	psect	text19
  3578  000D1C                     __ptext19:
  3579                           	callstack 0
  3580  000D1C                     _PIN_MANAGER_Initialize:
  3581                           	callstack 26
  3582  000D1C                     
  3583                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0xF0;
  3584  000D1C  0EF0               	movlw	240
  3585  000D1E  6EBA               	movwf	186,c	;volatile
  3586                           
  3587                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x27;
  3588  000D20  0E27               	movlw	39
  3589  000D22  6EBB               	movwf	187,c	;volatile
  3590  000D24                     
  3591                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0xFF;
  3592  000D24  68BC               	setf	188,c	;volatile
  3593  000D26                     
  3594                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFF;
  3595  000D26  68C2               	setf	194,c	;volatile
  3596  000D28                     
  3597                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xFF;
  3598  000D28  68C3               	setf	195,c	;volatile
  3599  000D2A                     
  3600                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xFF;
  3601  000D2A  68C4               	setf	196,c	;volatile
  3602                           
  3603                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x00;
  3604  000D2C  0E00               	movlw	0
  3605  000D2E  013A               	movlb	58	; () banked
  3606  000D30  6F60               	movwf	96,b	;volatile
  3607                           
  3608                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0x00;
  3609  000D32  0E00               	movlw	0
  3610  000D34  6F50               	movwf	80,b	;volatile
  3611                           
  3612                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x07;
  3613  000D36  0E07               	movlw	7
  3614  000D38  6F40               	movwf	64,b	;volatile
  3615                           
  3616                           ;mcc_generated_files/pin_manager.c: 83:     WPUE = 0x00;
  3617  000D3A  0E00               	movlw	0
  3618  000D3C  6F81               	movwf	129,b	;volatile
  3619                           
  3620                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x27;
  3621  000D3E  0E27               	movlw	39
  3622  000D40  6F51               	movwf	81,b	;volatile
  3623                           
  3624                           ;mcc_generated_files/pin_manager.c: 85:     WPUA = 0xF0;
  3625  000D42  0EF0               	movlw	240
  3626  000D44  6F41               	movwf	65,b	;volatile
  3627  000D46                     
  3628                           ; BSR set to: 58
  3629                           ;mcc_generated_files/pin_manager.c: 86:     WPUC = 0xFF;
  3630  000D46  6961               	setf	97,b	;volatile
  3631                           
  3632                           ;mcc_generated_files/pin_manager.c: 91:     RB1I2C = 0x00;
  3633  000D48  0E00               	movlw	0
  3634  000D4A  6F5A               	movwf	90,b	;volatile
  3635                           
  3636                           ;mcc_generated_files/pin_manager.c: 92:     RB2I2C = 0x00;
  3637  000D4C  0E00               	movlw	0
  3638  000D4E  6F5B               	movwf	91,b	;volatile
  3639                           
  3640                           ;mcc_generated_files/pin_manager.c: 93:     RC3I2C = 0x00;
  3641  000D50  0E00               	movlw	0
  3642  000D52  6F6A               	movwf	106,b	;volatile
  3643                           
  3644                           ;mcc_generated_files/pin_manager.c: 94:     RC4I2C = 0x00;
  3645  000D54  0E00               	movlw	0
  3646  000D56  6F6B               	movwf	107,b	;volatile
  3647                           
  3648                           ;mcc_generated_files/pin_manager.c: 99:     ODCONA = 0x00;
  3649  000D58  0E00               	movlw	0
  3650  000D5A  6F42               	movwf	66,b	;volatile
  3651                           
  3652                           ;mcc_generated_files/pin_manager.c: 100:     ODCONB = 0x00;
  3653  000D5C  0E00               	movlw	0
  3654  000D5E  6F52               	movwf	82,b	;volatile
  3655                           
  3656                           ;mcc_generated_files/pin_manager.c: 101:     ODCONC = 0x18;
  3657  000D60  0E18               	movlw	24
  3658  000D62  6F62               	movwf	98,b	;volatile
  3659  000D64                     
  3660                           ; BSR set to: 58
  3661                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONA = 0xFF;
  3662  000D64  6943               	setf	67,b	;volatile
  3663  000D66                     
  3664                           ; BSR set to: 58
  3665                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONB = 0xFF;
  3666  000D66  6953               	setf	83,b	;volatile
  3667  000D68                     
  3668                           ; BSR set to: 58
  3669                           ;mcc_generated_files/pin_manager.c: 108:     SLRCONC = 0xFF;
  3670  000D68  6963               	setf	99,b	;volatile
  3671  000D6A                     
  3672                           ; BSR set to: 58
  3673                           ;mcc_generated_files/pin_manager.c: 113:     INLVLA = 0xFF;
  3674  000D6A  6944               	setf	68,b	;volatile
  3675  000D6C                     
  3676                           ; BSR set to: 58
  3677                           ;mcc_generated_files/pin_manager.c: 114:     INLVLB = 0xFF;
  3678  000D6C  6954               	setf	84,b	;volatile
  3679  000D6E                     
  3680                           ; BSR set to: 58
  3681                           ;mcc_generated_files/pin_manager.c: 115:     INLVLC = 0xFF;
  3682  000D6E  6964               	setf	100,b	;volatile
  3683                           
  3684                           ;mcc_generated_files/pin_manager.c: 116:     INLVLE = 0x08;
  3685  000D70  0E08               	movlw	8
  3686  000D72  6F84               	movwf	132,b	;volatile
  3687  000D74                     
  3688                           ; BSR set to: 58
  3689                           ;mcc_generated_files/pin_manager.c: 123:     IOCBFbits.IOCBF2 = 0;
  3690  000D74  9557               	bcf	87,2,b	;volatile
  3691  000D76                     
  3692                           ; BSR set to: 58
  3693                           ;mcc_generated_files/pin_manager.c: 125:     IOCBNbits.IOCBN2 = 1;
  3694  000D76  8556               	bsf	86,2,b	;volatile
  3695  000D78                     
  3696                           ; BSR set to: 58
  3697                           ;mcc_generated_files/pin_manager.c: 127:     IOCBPbits.IOCBP2 = 0;
  3698  000D78  9555               	bcf	85,2,b	;volatile
  3699  000D7A                     
  3700                           ; BSR set to: 58
  3701                           ;mcc_generated_files/pin_manager.c: 132:     IOCBF2_SetInterruptHandler(IOCBF2_DefaultIn
      +                          terruptHandler);
  3702  000D7A  0E00               	movlw	0
  3703  000D7C  6E4F               	movwf	IOCBF2_SetInterruptHandler@InterruptHandler^0,c
  3704  000D7E  0E00               	movlw	0
  3705  000D80  6E50               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+1)^0,c
  3706  000D82  ECDB  F008         	call	_IOCBF2_SetInterruptHandler	;wreg free
  3707  000D86                     
  3708                           ;mcc_generated_files/pin_manager.c: 134:     SMT1SIGPPS = 0x0A;
  3709  000D86  0E0A               	movlw	10
  3710  000D88  013A               	movlb	58	; () banked
  3711  000D8A  6FD2               	movwf	210,b	;volatile
  3712  000D8C                     
  3713                           ; BSR set to: 58
  3714  000D8C  0012               	return		;funcret
  3715  000D8E                     __end_of_PIN_MANAGER_Initialize:
  3716                           	callstack 0
  3717                           
  3718 ;; *************** function _IOCBF2_SetInterruptHandler *****************
  3719 ;; Defined at:
  3720 ;;		line 164 in file "mcc_generated_files/pin_manager.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  3723 ;;		 -> IOCBF2_DefaultInterruptHandler(1), 
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;		None
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  1    wreg      void 
  3728 ;; Registers used:
  3729 ;;		wreg, status,2, status,0
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3735 ;;      Params:         2       0       0       0       0       0       0       0       0
  3736 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3737 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3738 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3739 ;;Total ram usage:        2 bytes
  3740 ;; Hardware stack levels used: 1
  3741 ;; Hardware stack levels required when called: 2
  3742 ;; This function calls:
  3743 ;;		Nothing
  3744 ;; This function is called by:
  3745 ;;		_PIN_MANAGER_Initialize
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           	psect	text20
  3750  0011B6                     __ptext20:
  3751                           	callstack 0
  3752  0011B6                     _IOCBF2_SetInterruptHandler:
  3753                           	callstack 26
  3754  0011B6                     
  3755                           ;mcc_generated_files/pin_manager.c: 165:     IOCBF2_InterruptHandler = InterruptHandler;
  3756  0011B6  C04F  F0FE         	movff	IOCBF2_SetInterruptHandler@InterruptHandler,_IOCBF2_InterruptHandler
  3757  0011BA  C050  F0FF         	movff	IOCBF2_SetInterruptHandler@InterruptHandler+1,_IOCBF2_InterruptHandler+1
  3758  0011BE  0012               	return		;funcret
  3759  0011C0                     __end_of_IOCBF2_SetInterruptHandler:
  3760                           	callstack 0
  3761                           
  3762 ;; *************** function _OSCILLATOR_Initialize *****************
  3763 ;; Defined at:
  3764 ;;		line 60 in file "mcc_generated_files/mcc.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;		None
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;		None
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  1    wreg      void 
  3771 ;; Registers used:
  3772 ;;		wreg, status,2
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3778 ;;      Params:         0       0       0       0       0       0       0       0       0
  3779 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3781 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3782 ;;Total ram usage:        0 bytes
  3783 ;; Hardware stack levels used: 1
  3784 ;; Hardware stack levels required when called: 2
  3785 ;; This function calls:
  3786 ;;		Nothing
  3787 ;; This function is called by:
  3788 ;;		_SYSTEM_Initialize
  3789 ;; This function uses a non-reentrant model
  3790 ;;
  3791                           
  3792                           	psect	text21
  3793  00118E                     __ptext21:
  3794                           	callstack 0
  3795  00118E                     _OSCILLATOR_Initialize:
  3796                           	callstack 27
  3797  00118E                     
  3798                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x60;
  3799  00118E  0E60               	movlw	96
  3800  001190  0139               	movlb	57	; () banked
  3801  001192  6FD9               	movwf	217,b	;volatile
  3802                           
  3803                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  3804  001194  0E00               	movlw	0
  3805  001196  6FDB               	movwf	219,b	;volatile
  3806                           
  3807                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  3808  001198  0E00               	movlw	0
  3809  00119A  6FDD               	movwf	221,b	;volatile
  3810                           
  3811                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x08;
  3812  00119C  0E08               	movlw	8
  3813  00119E  6FDF               	movwf	223,b	;volatile
  3814                           
  3815                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  3816  0011A0  0E00               	movlw	0
  3817  0011A2  6FDE               	movwf	222,b	;volatile
  3818  0011A4                     
  3819                           ; BSR set to: 57
  3820  0011A4  0012               	return		;funcret
  3821  0011A6                     __end_of_OSCILLATOR_Initialize:
  3822                           	callstack 0
  3823                           
  3824 ;; *************** function _INTERRUPT_Initialize *****************
  3825 ;; Defined at:
  3826 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;		None
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;		None
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  1    wreg      void 
  3833 ;; Registers used:
  3834 ;;		None
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3840 ;;      Params:         0       0       0       0       0       0       0       0       0
  3841 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3842 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3843 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3844 ;;Total ram usage:        0 bytes
  3845 ;; Hardware stack levels used: 1
  3846 ;; Hardware stack levels required when called: 2
  3847 ;; This function calls:
  3848 ;;		Nothing
  3849 ;; This function is called by:
  3850 ;;		_SYSTEM_Initialize
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           	psect	text22
  3855  0011C0                     __ptext22:
  3856                           	callstack 0
  3857  0011C0                     _INTERRUPT_Initialize:
  3858                           	callstack 27
  3859  0011C0                     
  3860                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCON0bits.IPEN = 1;
  3861  0011C0  8AD2               	bsf	210,5,c	;volatile
  3862                           
  3863                           ;mcc_generated_files/interrupt_manager.c: 60:     IPR1bits.SMT1PWAIP = 1;
  3864  0011C2  0139               	movlb	57	; () banked
  3865  0011C4  8F81               	bsf	129,7,b	;volatile
  3866                           
  3867                           ;mcc_generated_files/interrupt_manager.c: 63:     IPR1bits.SMT1PRAIP = 0;
  3868  0011C6  9D81               	bcf	129,6,b	;volatile
  3869  0011C8                     
  3870                           ; BSR set to: 57
  3871  0011C8  0012               	return		;funcret
  3872  0011CA                     __end_of_INTERRUPT_Initialize:
  3873                           	callstack 0
  3874                           
  3875 ;; *************** function _ADCC_Initialize *****************
  3876 ;; Defined at:
  3877 ;;		line 62 in file "mcc_generated_files/adcc.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;		None
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;		None
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  1    wreg      void 
  3884 ;; Registers used:
  3885 ;;		wreg, status,2
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3891 ;;      Params:         0       0       0       0       0       0       0       0       0
  3892 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3893 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3894 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3895 ;;Total ram usage:        0 bytes
  3896 ;; Hardware stack levels used: 1
  3897 ;; Hardware stack levels required when called: 2
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_SYSTEM_Initialize
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           	psect	text23
  3906  000DFC                     __ptext23:
  3907                           	callstack 0
  3908  000DFC                     _ADCC_Initialize:
  3909                           	callstack 27
  3910  000DFC                     
  3911                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  3912  000DFC  0E00               	movlw	0
  3913  000DFE  013E               	movlb	62	; () banked
  3914  000E00  6FDE               	movwf	222,b	;volatile
  3915                           
  3916                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  3917  000E02  0E00               	movlw	0
  3918  000E04  6FDF               	movwf	223,b	;volatile
  3919                           
  3920                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  3921  000E06  0E00               	movlw	0
  3922  000E08  6FE0               	movwf	224,b	;volatile
  3923                           
  3924                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  3925  000E0A  0E00               	movlw	0
  3926  000E0C  6FE1               	movwf	225,b	;volatile
  3927                           
  3928                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  3929  000E0E  0E00               	movlw	0
  3930  000E10  6FE4               	movwf	228,b	;volatile
  3931                           
  3932                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  3933  000E12  0E00               	movlw	0
  3934  000E14  6FE5               	movwf	229,b	;volatile
  3935                           
  3936                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
  3937  000E16  0E00               	movlw	0
  3938  000E18  6FEA               	movwf	234,b	;volatile
  3939                           
  3940                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
  3941  000E1A  0E00               	movlw	0
  3942  000E1C  6FEC               	movwf	236,b	;volatile
  3943                           
  3944                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  3945  000E1E  0E00               	movlw	0
  3946  000E20  6FF1               	movwf	241,b	;volatile
  3947                           
  3948                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x10;
  3949  000E22  0E10               	movlw	16
  3950  000E24  6FF3               	movwf	243,b	;volatile
  3951                           
  3952                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x00;
  3953  000E26  0E00               	movlw	0
  3954  000E28  6FF4               	movwf	244,b	;volatile
  3955                           
  3956                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
  3957  000E2A  0E00               	movlw	0
  3958  000E2C  6FF5               	movwf	245,b	;volatile
  3959                           
  3960                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
  3961  000E2E  0E00               	movlw	0
  3962  000E30  6FF6               	movwf	246,b	;volatile
  3963                           
  3964                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
  3965  000E32  0E00               	movlw	0
  3966  000E34  6FF7               	movwf	247,b	;volatile
  3967                           
  3968                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
  3969  000E36  0E00               	movlw	0
  3970  000E38  6FF9               	movwf	249,b	;volatile
  3971                           
  3972                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
  3973  000E3A  0E00               	movlw	0
  3974  000E3C  6FFA               	movwf	250,b	;volatile
  3975                           
  3976                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
  3977  000E3E  0E00               	movlw	0
  3978  000E40  6FFB               	movwf	251,b	;volatile
  3979                           
  3980                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
  3981  000E42  0E00               	movlw	0
  3982  000E44  6FFC               	movwf	252,b	;volatile
  3983                           
  3984                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
  3985  000E46  0E00               	movlw	0
  3986  000E48  6FFD               	movwf	253,b	;volatile
  3987                           
  3988                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
  3989  000E4A  0E00               	movlw	0
  3990  000E4C  6FFE               	movwf	254,b	;volatile
  3991                           
  3992                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x01;
  3993  000E4E  0E01               	movlw	1
  3994  000E50  6FFF               	movwf	255,b	;volatile
  3995                           
  3996                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
  3997  000E52  0E84               	movlw	132
  3998  000E54  6FF8               	movwf	248,b	;volatile
  3999  000E56                     
  4000                           ; BSR set to: 62
  4001  000E56  0012               	return		;funcret
  4002  000E58                     __end_of_ADCC_Initialize:
  4003                           	callstack 0
  4004                           
  4005 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  4006 ;; Defined at:
  4007 ;;		line 70 in file "mcc_generated_files/interrupt_manager.c"
  4008 ;; Parameters:    Size  Location     Type
  4009 ;;		None
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;		None
  4012 ;; Return value:  Size  Location     Type
  4013 ;;                  1    wreg      void 
  4014 ;; Registers used:
  4015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/0
  4018 ;;		On exit  : 0/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4021 ;;      Params:         0       0       0       0       0       0       0       0       0
  4022 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4023 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4024 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4025 ;;Total ram usage:        4 bytes
  4026 ;; Hardware stack levels used: 1
  4027 ;; Hardware stack levels required when called: 1
  4028 ;; This function calls:
  4029 ;;		_bitgrabber
  4030 ;; This function is called by:
  4031 ;;		Interrupt level 2
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           	psect	text24
  4036  000D8E                     __ptext24:
  4037                           	callstack 0
  4038  000D8E                     _INTERRUPT_InterruptManagerHigh:
  4039                           	callstack 26
  4040                           
  4041                           ; BSR set to: 62
  4042                           ;incstack = 0
  4043  000D8E  006F FFD8  F04B    	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh
  4044  000D94  006F FFDC  F04C    	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+1
  4045  000D9A  006F FFE0  F04D    	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+2
  4046  000DA0  006F FFD4  F04E    	movff	tablat,??_INTERRUPT_InterruptManagerHigh+3
  4047  000DA6                     
  4048                           ;mcc_generated_files/interrupt_manager.c: 73:     if(PIE1bits.SMT1PWAIE == 1 && PIR1bits
      +                          .SMT1PWAIF == 1)
  4049  000DA6  0139               	movlb	57	; () banked
  4050  000DA8  AF91               	btfss	145,7,b	;volatile
  4051  000DAA  EFD9  F006         	goto	i2u61_41
  4052  000DAE  EFDB  F006         	goto	i2u61_40
  4053  000DB2                     i2u61_41:
  4054  000DB2  EFF1  F006         	goto	i2l535
  4055  000DB6                     i2u61_40:
  4056  000DB6                     
  4057                           ; BSR set to: 57
  4058  000DB6  AFA1               	btfss	161,7,b	;volatile
  4059  000DB8  EFE0  F006         	goto	i2u62_41
  4060  000DBC  EFE2  F006         	goto	i2u62_40
  4061  000DC0                     i2u62_41:
  4062  000DC0  EFF1  F006         	goto	i2l535
  4063  000DC4                     i2u62_40:
  4064  000DC4                     
  4065                           ; BSR set to: 57
  4066                           ;mcc_generated_files/interrupt_manager.c: 74:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 75:         PIR1bits.SMT1PWAIF = 0;
  4067  000DC4  9FA1               	bcf	161,7,b	;volatile
  4068                           
  4069                           ;mcc_generated_files/interrupt_manager.c: 76:         gInPulseWidth = SMT1CPWL;
  4070  000DC6  006F FC60  F02B    	movff	16152,_gInPulseWidth	;volatile
  4071                           
  4072                           ;mcc_generated_files/interrupt_manager.c: 77:         if (gInStatus & (1 << 2))
  4073  000DCC  A428               	btfss	_gInStatus^0,2,c	;volatile
  4074  000DCE  EFEB  F006         	goto	i2u63_41
  4075  000DD2  EFED  F006         	goto	i2u63_40
  4076  000DD6                     i2u63_41:
  4077  000DD6  EFEF  F006         	goto	i2l2676
  4078  000DDA                     i2u63_40:
  4079  000DDA                     
  4080                           ; BSR set to: 57
  4081  000DDA  9428               	bcf	_gInStatus,2,c	;# 
  4082  000DDC  9228               	bcf	_gInStatus,1,c	;# 
  4083  000DDE                     i2l2676:
  4084                           
  4085                           ;mcc_generated_files/interrupt_manager.c: 83:         bitgrabber();
  4086  000DDE  ECC7  F007         	call	_bitgrabber	;wreg free
  4087  000DE2                     i2l535:
  4088  000DE2  0060  F13B  FFF5   	movff	??_INTERRUPT_InterruptManagerHigh+3,tablat
  4089  000DE8  0060  F137  FFF8   	movff	??_INTERRUPT_InterruptManagerHigh+2,tblptru
  4090  000DEE  0060  F133  FFF7   	movff	??_INTERRUPT_InterruptManagerHigh+1,tblptrh
  4091  000DF4  0060  F12F  FFF6   	movff	??_INTERRUPT_InterruptManagerHigh,tblptrl
  4092  000DFA  0011               	retfie		f
  4093  000DFC                     __end_of_INTERRUPT_InterruptManagerHigh:
  4094                           	callstack 0
  4095                           
  4096                           ;
  4097                           ; Interrupt Vector Table @ 0x8
  4098                           ;
  4099                           
  4100                           	psect	ivt0x8
  4101  000008                     __pivt0x8:
  4102                           	callstack 0
  4103  000008                     ivt0x8_base:
  4104                           	callstack 0
  4105                           
  4106                           ; high-priority vector
  4107  000008  EFC7  F006         	goto	_INTERRUPT_InterruptManagerHigh
  4108  000018                     	org	16
  4109                           
  4110                           ; low-priority vector
  4111  000018  00FF               	reset	
  4112  0000                     
  4113                           	psect	rparam
  4114  0000                     
  4115                           	psect	idloc
  4116                           
  4117                           ;Config register IDLOC0 @ 0x200000
  4118                           ;	unspecified, using default values
  4119  200000                     	org	2097152
  4120  200000  0FFF               	dw	4095
  4121                           
  4122                           ;Config register IDLOC1 @ 0x200002
  4123                           ;	unspecified, using default values
  4124  200002                     	org	2097154
  4125  200002  0FFF               	dw	4095
  4126                           
  4127                           ;Config register IDLOC2 @ 0x200004
  4128                           ;	unspecified, using default values
  4129  200004                     	org	2097156
  4130  200004  0FFF               	dw	4095
  4131                           
  4132                           ;Config register IDLOC3 @ 0x200006
  4133                           ;	unspecified, using default values
  4134  200006                     	org	2097158
  4135  200006  0FFF               	dw	4095
  4136                           
  4137                           ;Config register IDLOC4 @ 0x200008
  4138                           ;	unspecified, using default values
  4139  200008                     	org	2097160
  4140  200008  0FFF               	dw	4095
  4141                           
  4142                           ;Config register IDLOC5 @ 0x20000A
  4143                           ;	unspecified, using default values
  4144  20000A                     	org	2097162
  4145  20000A  0FFF               	dw	4095
  4146                           
  4147                           ;Config register IDLOC6 @ 0x20000C
  4148                           ;	unspecified, using default values
  4149  20000C                     	org	2097164
  4150  20000C  0FFF               	dw	4095
  4151                           
  4152                           ;Config register IDLOC7 @ 0x20000E
  4153                           ;	unspecified, using default values
  4154  20000E                     	org	2097166
  4155  20000E  0FFF               	dw	4095
  4156                           
  4157                           	psect	config
  4158                           
  4159                           ;Config register CONFIG1L @ 0x300000
  4160                           ;	External Oscillator Selection
  4161                           ;	FEXTOSC = OFF, Oscillator not enabled
  4162                           ;	Reset Oscillator Selection
  4163                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  4164  300000                     	org	3145728
  4165  300000  8C                 	db	140
  4166                           
  4167                           ;Config register CONFIG1H @ 0x300001
  4168                           ;	Clock out Enable bit
  4169                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  4170                           ;	PRLOCKED One-Way Set Enable bit
  4171                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  4172                           ;	Clock Switch Enable bit
  4173                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  4174                           ;	Fail-Safe Clock Monitor Enable bit
  4175                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  4176  300001                     	org	3145729
  4177  300001  FF                 	db	255
  4178                           
  4179                           ;Config register CONFIG2L @ 0x300002
  4180                           ;	MCLR Enable bit
  4181                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  4182                           ;	Power-up timer selection bits
  4183                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  4184                           ;	Multi-vector enable bit
  4185                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  4186                           ;	IVTLOCK bit One-way set enable bit
  4187                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  4188                           ;	Low Power BOR Enable bit
  4189                           ;	LPBOREN = OFF, ULPBOR disabled
  4190                           ;	Brown-out Reset Enable bits
  4191                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  4192  300002                     	org	3145730
  4193  300002  F7                 	db	247
  4194                           
  4195                           ;Config register CONFIG2H @ 0x300003
  4196                           ;	Brown-out Reset Voltage Selection bits
  4197                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  4198                           ;	ZCD Disable bit
  4199                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  4200                           ;	PPSLOCK bit One-Way Set Enable bit
  4201                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  4202                           ;	Stack Full/Underflow Reset Enable bit
  4203                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4204                           ;	Debugger Enable bit
  4205                           ;	DEBUG = ON, Background debugger enabled
  4206                           ;	Extended Instruction Set Enable bit
  4207                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  4208  300003                     	org	3145731
  4209  300003  DF                 	db	223
  4210                           
  4211                           ;Config register CONFIG3L @ 0x300004
  4212                           ;	WDT Period selection bits
  4213                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4214                           ;	WDT operating mode
  4215                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  4216  300004                     	org	3145732
  4217  300004  9F                 	db	159
  4218                           
  4219                           ;Config register CONFIG3H @ 0x300005
  4220                           ;	WDT Window Select bits
  4221                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  4222                           ;	WDT input clock selector
  4223                           ;	WDTCCS = SC, Software Control
  4224  300005                     	org	3145733
  4225  300005  FF                 	db	255
  4226                           
  4227                           ;Config register CONFIG4L @ 0x300006
  4228                           ;	Boot Block Size selection bits
  4229                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  4230                           ;	Boot Block enable bit
  4231                           ;	BBEN = OFF, Boot block disabled
  4232                           ;	Storage Area Flash enable bit
  4233                           ;	SAFEN = OFF, SAF disabled
  4234                           ;	Application Block write protection bit
  4235                           ;	WRTAPP = OFF, Application Block not write protected
  4236  300006                     	org	3145734
  4237  300006  FF                 	db	255
  4238                           
  4239                           ;Config register CONFIG4H @ 0x300007
  4240                           ;	Configuration Register Write Protection bit
  4241                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
  4242                           ;	Boot Block Write Protection bit
  4243                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
  4244                           ;	Data EEPROM Write Protection bit
  4245                           ;	WRTD = OFF, Data EEPROM not write-protected
  4246                           ;	SAF Write protection bit
  4247                           ;	WRTSAF = OFF, SAF not Write Protected
  4248                           ;	Low Voltage Programming Enable bit
  4249                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  4250  300007                     	org	3145735
  4251  300007  FF                 	db	255
  4252                           
  4253                           ;Config register CONFIG5L @ 0x300008
  4254                           ;	PFM and Data EEPROM Code Protection bit
  4255                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  4256  300008                     	org	3145736
  4257  300008  FF                 	db	255
  4258                           
  4259                           ;Config register CONFIG5H @ 0x300009
  4260                           ;	unspecified, using default values
  4261  300009                     	org	3145737
  4262  300009  FF                 	db	255
  4263                           tosu	equ	0x3FFF
  4264                           tosh	equ	0x3FFE
  4265                           tosl	equ	0x3FFD
  4266                           stkptr	equ	0x3FFC
  4267                           pclatu	equ	0x3FFB
  4268                           pclath	equ	0x3FFA
  4269                           pcl	equ	0x3FF9
  4270                           tblptru	equ	0x3FF8
  4271                           tblptrh	equ	0x3FF7
  4272                           tblptrl	equ	0x3FF6
  4273                           tablat	equ	0x3FF5
  4274                           prodh	equ	0x3FF4
  4275                           prodl	equ	0x3FF3
  4276                           indf0	equ	0x3FEF
  4277                           postinc0	equ	0x3FEE
  4278                           postdec0	equ	0x3FED
  4279                           preinc0	equ	0x3FEC
  4280                           plusw0	equ	0x3FEB
  4281                           fsr0h	equ	0x3FEA
  4282                           fsr0l	equ	0x3FE9
  4283                           wreg	equ	0x3FE8
  4284                           indf1	equ	0x3FE7
  4285                           postinc1	equ	0x3FE6
  4286                           postdec1	equ	0x3FE5
  4287                           preinc1	equ	0x3FE4
  4288                           plusw1	equ	0x3FE3
  4289                           fsr1h	equ	0x3FE2
  4290                           fsr1l	equ	0x3FE1
  4291                           bsr	equ	0x3FE0
  4292                           indf2	equ	0x3FDF
  4293                           postinc2	equ	0x3FDE
  4294                           postdec2	equ	0x3FDD
  4295                           preinc2	equ	0x3FDC
  4296                           plusw2	equ	0x3FDB
  4297                           fsr2h	equ	0x3FDA
  4298                           fsr2l	equ	0x3FD9
  4299                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        66
    BSS         226
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      90
    BANK0           160      0     160
    BANK1           256      6      66
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 45
		 -> SettingData(BANK0[45]), 

    memset@p	PTR unsigned char  size(2) Largest target is 45
		 -> SettingData(BANK0[45]), 

    savesettings@writing	PTR unsigned char  size(2) Largest target is 45
		 -> SettingData(BANK0[45]), 

    loadsettings@loading	PTR unsigned char  size(2) Largest target is 45
		 -> SettingData(BANK0[45]), 

    sp__memset	PTR void  size(2) Largest target is 45
		 -> SettingData(BANK0[45]), 

    IOCBF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCBF2_DefaultInterruptHandler(), 

    IOCBF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCBF2_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _setstickmultipliers->_getmultiplier
    _getmultiplier->___lwdiv
    _scansticks->_slinjim
    _slinjim->___wmul
    _loadsettings->_memset
    _savesettings->_DATAEE_WriteByte
    _PIN_MANAGER_Initialize->_IOCBF2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _setstickmultipliers->_getmultiplier

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3978
                  _SYSTEM_Initialize
                        _bytecleanup
                           _bytepush
                    _calibratesticks
                       _checkbuttons
                      _commandreader
                       _loadsettings
                       _savesettings
                         _scansticks
                _setstickmultipliers
                         _zerosticks
 ---------------------------------------------------------------------------------
 (1) _zerosticks                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setstickmultipliers                                  0     0      0    2205
                      _getmultiplier
 ---------------------------------------------------------------------------------
 (2) _getmultiplier                                       10     6      4    2205
                                             11 COMRAM     4     0      4
                                              0 BANK1      6     6      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     601
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _scansticks                                           4     4      0     682
                                              0 BANK1      4     4      0
                            _slinjim
 ---------------------------------------------------------------------------------
 (2) _slinjim                                              6     2      4     682
                                             10 COMRAM     6     2      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     311
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _loadsettings                                         3     3      0     737
                                             12 COMRAM     3     3      0
                    _DATAEE_ReadByte
                             _memset
                       _savesettings
                 _setdefaultsettings
 ---------------------------------------------------------------------------------
 (2) _setdefaultsettings                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _savesettings                                         3     3      0     256
                                              7 COMRAM     3     3      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     3     2      1     143
                                              4 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     324
                                              4 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _commandreader                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkbuttons                                         2     2      0       0
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _calibratesticks                                      2     2      0       0
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _bytepush                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bytecleanup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                    _ADCC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SMT1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0      98
         _IOCBF2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF2_SetInterruptHandler                           2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManagerHigh                       4     4      0       0
                                              0 COMRAM     4     4      0
                         _bitgrabber
 ---------------------------------------------------------------------------------
 (5) _bitgrabber                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF2_SetInterruptHandler
     _PMD_Initialize
     _SMT1_Initialize
   _bytecleanup
   _bytepush
   _calibratesticks
   _checkbuttons
   _commandreader
   _loadsettings
     _DATAEE_ReadByte
     _memset
     _savesettings
       _DATAEE_WriteByte
     _setdefaultsettings
   _savesettings
   _scansticks
     _slinjim
       ___wmul
   _setstickmultipliers
     _getmultiplier
       ___lwdiv
   _zerosticks

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _bitgrabber

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      20        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      17        0.0%
BANK7              100      0       0      18        0.0%
BITBANK6           100      0       0      15        0.0%
BANK6              100      0       0      16        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      6      42       6       25.8%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      A0       4      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     10      5A       1       94.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13C      19        0.0%
DATA                 0      0     13C      21        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jan 13 14:20:28 2022

              __size_of_setstickmultipliers 00E2                      __size_of_getmultiplier 0056  
                       ___wmul@multiplicand 0051                              ?_commandreader 004B  
                                       l141 113C                                         l214 0D8C  
                                       l135 118C                                         l225 11BE  
                                       l138 11A4                                         l361 10A0  
                                       l614 0E56                                         l526 11C8  
                                       WREG 003FE8                                         l832 0AAE  
                                       u300 07E2                                         u301 07DA  
                                       u400 086E                                         u320 07FC  
                                       u401 0866                                         u321 07F4  
                                       u500 08EE                                         u340 081E  
                                       u501 08E6                                         u341 0816  
                                       u430 0894                                         u318 07E4  
                                       u431 088C                                         u520 0910  
                                       u360 083C                                         u521 0908  
                                       u425 0874                                         u361 0834  
                                       u418 0870                                         u338 07FE  
                                       u290 07BE                                         u291 07BA  
                                       u540 092E                                         u460 08BA  
                                       u380 0854                                         u541 0926  
                                       u461 08B2                                         u381 084E  
                                       u518 08F0                                         u390 0856  
                                       u358 0820                                         u455 089A  
                                       u560 0946                                         u480 08D4  
                                       u448 0896                                         u561 0940  
                                       u481 08CC                                         u570 0948  
                                       u538 0912                                         u378 083E  
                                       u900 0368                                         u901 0364  
                                       u910 0430                                         u558 0930  
                                       u478 08BC                                         u830 1074  
                                       u911 042C                                         u831 1070  
                                       u920 044E                                         u840 1008  
                                       u921 044A                                         u841 1004  
                                       u930 047A                                         u498 08D6  
                                       u850 0BF0                                         u931 0476  
                                       u851 0BEC                                         u940 0498  
                                       u780 0F3C                                         u860 0C0A  
                                       u941 0494                                         u781 0F38  
                                       u861 0C06                                         u950 04C4  
                                       u870 0C28                                         u951 04C0  
                                       u871 0C24                                         u960 04E2  
                                       u880 0330                                         u961 04DE  
                                       u881 032C                                         u970 050E  
                                       u890 0358                                         u971 050A  
                                       u891 0354                                         u795 0F46  
                                       u980 052C                                         u796 0F48  
                                       u981 0528                     __size_of_PMD_Initialize 0024  
                                       wreg 003FE8                            ?_calibratesticks 004B  
                      __end_of_checkbuttons 094C                                        l1133 1118  
                                      l1152 0122                                        l1136 0F02  
                                      l1154 014E                                        l1155 017A  
                                      l1139 0046                                        l1411 0A2C  
                                      l3100 0D6E                                        l1156 01A6  
                                      l1148 0088                                        l1405 0B9E  
                                      l1149 031E                                        l3030 11B6  
                                      l3110 0D86                                        l3102 0D74  
                                      l1182 0456                                        l2150 1008  
                                      l1422 1074                                        l1414 0BC8  
                                      l1167 0348                                        l3104 0D76  
                                      l1192 0534                                        l3040 0F20  
                                      l3032 0F06                                        l3120 104C  
                                      l3112 1040                                        l3200 0C16  
                                      l1408 0F8C                                        l1177 057A  
                                      l1417 0C28                                        l2322 118E  
                                      l3106 0D78                                        l2330 1092  
                                      l1186 04A0                                        l3210 0336  
                                      l3042 0F22                                        l3034 0F0E  
                                      l3122 1062                                        l3114 1048  
                                      l3202 0C18                                        l3050 10A2  
                                      l2324 0DFC                                        l3108 0D7A  
                                      l2332 1094                                        l3220 037C  
                                      l3212 0358                                        l3044 0F24  
                                      l3036 0F14                                        l3124 1064  
                                      l3052 10C2                                        l3204 0F4A  
                                      l1189 04EA                                        l2334 1096  
                                      l2326 1076                                        l3222 0384  
                                      l3230 03CE                                        l3206 0320  
                                      l3150 0FEE                                        l3046 0F28  
                                      l3038 0F1A                                        l3142 0AE8  
                                      l3126 10F4                                        l3080 0D24  
                                      l2336 109A                                        l2328 1090  
                                      l3240 03E4                                        l3232 03D0  
                                      l3224 0390                                        l3216 036C  
                                      l3208 0330                                        l1296 094A  
                                      l2600 080C                                        l3160 116C  
                                      l3152 115C                                        l3144 0FCC  
                                      l3048 0F2C                                        l3128 1116  
                                      l1473 0F2E                                        l3090 0D64  
                                      l3082 0D26                                        l2338 109C  
                                      l3170 117C                                        l3250 0462  
                                      l3242 0418                                        l3234 03D4  
                                      l3218 0374                                        l2602 082A  
                                      l3162 116E                                        l3154 1162  
                                      l3146 0FD8                                        l1475 0F3C  
                                      l2284 11C0                                        l3092 0D66  
                                      l3084 0D28                                        l3172 1180  
                                      l3260 04C4                                        l3252 047A  
                                      l3244 0430                                        l3228 0394  
                                      l3236 03DA                                        l2604 0844  
                                      l3156 1168                                        l3148 0FEA  
                                      l1476 0F48                                        l3180 0BBC  
                                      l1485 10CA                                        l3094 0D68  
                                      l3086 0D2A                                        l3078 0D1C  
                                      l2286 111A                                        l3174 1184  
                                      l3166 1174                                        l3270 0516  
                                      l3262 04CC                                        l3254 0482  
                                      l3246 0438                                        l3238 03E2  
                                      l2606 0858                                        l3158 116A  
                                      l3190 0BDE                                        l3182 0BC4  
                                      l1479 1172                                        l3096 0D6A  
                                      l3088 0D46                                        l3176 1188  
                                      l3168 1178                                        l3272 052C  
                                      l3264 04E2                                        l3256 0498  
                                      l3248 044E                                        l3192 0BF0  
                                      l3600 00E2                                        l3098 0D6C  
                                      l3266 04F6                                        l3258 04AC  
                                      l3194 0C0A                                        l3178 0BA0  
                                      l3610 020C                                        l3602 00EA  
                                      l3268 050E                                        l3276 0540  
                                      l3196 0C0E                                        l3188 0BCA  
                                      l3620 02B2                                        l3612 022E  
                                      l3604 00EC                                        l3540 0CC2  
                                      l3622 02C8                                        l3614 0244  
                                      l3550 0CFC                                        l3542 0CCA  
                                      l2592 07B0                                        l3624 02DC  
                                      l3616 0258                                        l3608 01D2  
                                      l3552 0D04                                        l3544 0CD2  
                                      l3536 0CA8                                        l3560 0EBC  
                                      l3810 0554                                        l2594 07BE  
                                      l3626 030E                                        l3618 0284  
                                      l3570 001E                                        l3554 0D06  
                                      l3546 0CE0                                        l3538 0CB0  
                                      l3562 0EDE                                        l3650 0A44  
                                      l3642 0A2E                                        l1971 0D1A  
                                      l2596 07D0                                        l3804 00AE  
                                      l3580 006A                                        l3572 002E  
                                      l3556 0D0C                                        l3548 0CE6  
                                      l1964 0D12                                        l3564 0EFA  
                                      l3660 0A74                                        l3652 0A46  
                                      l3644 0A36                                        l2598 07EA  
                                      l3806 01E6                                        l3582 0074  
                                      l3574 0034                                        l3558 0EAE  
                                      l3670 0A96                                        l3662 0A7C  
                                      l3654 0A54                                        l3646 0A3A  
                                      l3808 03A8                                        l3584 007E  
                                      l3592 0098                                        l3576 0056  
                                      l3568 094C                                        l3680 0ACE  
                                      l3664 0A80                                        l3656 0A62  
                                      l3672 0A9E                                        l3648 0A3E  
                                      l3586 008C                                        l3594 00D4  
                                      l3682 0ADC                                        l3674 0AB0  
                                      l3666 0A8E                                        l3658 0A70  
                                      l3596 00D6                                        l3676 0ABC  
                                      l3668 0A92                                        l3598 00DA  
                                      l3678 0ACA                                        u1200 0056  
                                      u1201 0052                                        u1210 0066  
                                      u1211 0062                                        u1220 022E  
                                      u1300 0AAE                                        u1221 022A  
                                      u1301 0AAA                                        u1230 0244  
                                      u1310 0ACA                                        u1231 0240  
                                      u1311 0AC6                                        u1240 02B2  
                                      u1160 0CC2                                        u1320 0ADC  
                                      u1241 02AE                                        u1161 0CBE  
                                      u1321 0AD8                                        u1250 02C8  
                                      u1170 0CE0                                        u1251 02C4  
                                      u1171 0CDC                                        u1180 0CFC  
                                      u1260 0A54                                        u1181 0CF8  
                                      u1261 0A50                                        _LATA 003FBA  
                                      u1190 002E                                        u1270 0A62  
                                      _LATB 003FBB                                        u1191 002A  
                                      u1271 0A5E                                        _LATC 003FBC  
                                      u1280 0A70                                        u1281 0A6C  
                                      u1290 0A8E                                        u1291 0A8A  
                                      _PMD0 0039C0                                        _PMD1 0039C1  
                                      _PMD2 0039C2                                        _PMD3 0039C3  
                                      _PMD4 0039C4                                        _PMD5 0039C5  
                                      _PMD6 0039C6                                        _PMD7 0039C7  
                                      _WPUA 003A41                                        _WPUB 003A51  
                                      _WPUC 003A61                                        _WPUE 003A81  
                                      _main 0A2E                                        fsr2h 003FDA  
                                      indf2 003FDF                                        fsr1l 003FE1  
                                      fsr2l 003FD9                                        prodh 003FF4  
                                      prodl 003FF3                                        start 001A  
                              ___param_bank 000000                   __size_of_DATAEE_WriteByte 0046  
            __size_of_OSCILLATOR_Initialize 0018               __end_of_OSCILLATOR_Initialize 11A6  
                              ?_bytecleanup 004B                                       _ADCAP 003EF5  
                                     _ADACT 003EFE                                       ?_main 004B  
                                     _ADCLK 003EFF                                       _ADCNT 003EEB  
                                     _ADPCH 003EF1                                       _ADREF 003EFD  
                                     _ADRPT 003EEC                     _stickIdx@joysticks$F523 0024  
                   _stickIdx@joysticks$F741 0020                             __end_of___lwdiv 0D1C  
                                     i2l535 0DE2                                       _OSCEN 0039DD  
                                     _TRISA 003FC2                                       _TRISB 003FC3  
                                     _TRISC 003FC4                             _DATAEE_ReadByte 115A  
                             _getmultiplier 0EAE                               _gLowThreshold 0048  
                 _tmpcenter@joysticks$F1428 007C                   _tmpcenter@joysticks$F1374 0086  
                 _tmpcenter@joysticks$F1609 0005                   _tmpcenter@joysticks$F1765 0072  
                          ?_SMT1_Initialize 004B                   _tmpcenter@joysticks$F1865 0068  
                                     tablat 003FF5                             __end_of_slinjim 111A  
                                     status 003FD8                     _tmphighm@joysticks$F521 0098  
                   _tmphighm@joysticks$F739 008E                             __initialization 0C2A  
                              __end_of_main 0AE8               _initiatedRead@joysticks$F1432 0017  
             _initiatedRead@joysticks$F1613 0014               _initiatedRead@joysticks$F1378 001B  
             _initiatedRead@joysticks$F1769 0011               _initiatedRead@joysticks$F1869 000E  
                           ??_commandreader 004B                                      ??_main 005B  
                             __activetblptr 000002                              ?_getmultiplier 0056  
                   _tmphigh@joysticks$F1426 0080                     _tmphigh@joysticks$F1372 008A  
                   _tmphigh@joysticks$F1607 0009                     _tmphigh@joysticks$F1763 0076  
                   _tmphigh@joysticks$F1863 006C                                      _ADACCH 003EE9  
                                    _ADACCL 003EE8                                      _ADACCU 003EEA  
                                    _ADACQH 003EF4                                      _ADACQL 003EF3  
              ??_IOCBF2_SetInterruptHandler 0051                                      _ADCON0 003EF8  
                                    _ADCON1 003EF9                                      _ADCON2 003EFA  
                                    _ADCON3 003EFB                                      _ADERRH 003EE3  
                                    _ADERRL 003EE2                                      _ADLTHH 003EDF  
                                    _ADLTHL 003EDE                                      _ADRESH 003EF0  
                                    _ADRESL 003EEF                                      _ADPREH 003EF7  
                                    _ADPREL 003EF6                    _stickIdx@joysticks$F1431 0018  
                  _stickIdx@joysticks$F1612 0015                                      _ADSTAT 003EFC  
                  _stickIdx@joysticks$F1377 001C                    _stickIdx@joysticks$F1768 0012  
                                    _ADUTHH 003EE1                    _stickIdx@joysticks$F1868 000F  
                                    _ADUTHL 003EE0                                      _ANSELA 003A40  
                                    _ANSELB 003A50                                      _ANSELC 003A60  
                                    _RB1I2C 003A5A                                      _RB2I2C 003A5B  
                                    _RC3I2C 003A6A                                      _RC4I2C 003A6B  
                                    _ODCONA 003A42                                      _ODCONB 003A52  
                                    _ODCONC 003A62                                      i2l2670 0DB6  
                                    i2l2672 0DC4                                      i2l2674 0DDA  
                                    i2l2676 0DDE                                      i2l2668 0DA6  
                                    _INLVLA 003A44                                      _INLVLB 003A54  
                                    _INLVLC 003A64                                      _INLVLE 003A84  
                                    _TABLAT 003FF5                                      _OSCFRQ 0039DF  
                                    _NVMDAT 0039E3                                      _SMT1PR 003F1B  
                                    ___wmul 10A2                                   ??___lwdiv 0053  
                         _sx_highMultiplier 00F2                             slinjim@dividend 0055  
                                    _cx_low 0038                                      _cy_low 00F8  
                                    _memset 0FCC                               ?_loadsettings 004B  
                                _gConOutIdx 002D                                      clear_0 0C74  
                                    clear_1 0C80                                      clear_2 0C8C  
                                    isa$std 000001         __size_of_IOCBF2_SetInterruptHandler 000A  
                                    _tmplow 00A6                                      _sx_low 0044  
                                    _sy_low 003E                     __end_of_DATAEE_ReadByte 1174  
                     __size_of_checkbuttons 019C                             _ADCC_Initialize 0DFC  
                            _PMD_Initialize 111A                                __pdataCOMRAM 0030  
                                    tblptrh 003FF7                                      tblptrl 003FF6  
                                    tblptru 003FF8                                   ??_slinjim 0059  
                       _setstickmultipliers 094C  IOCBF2_SetInterruptHandler@InterruptHandler 004F  
             __size_of_INTERRUPT_Initialize 000A            ??_INTERRUPT_InterruptManagerHigh 004B  
           ?_INTERRUPT_InterruptManagerHigh 004B                           _SYSTEM_Initialize 1174  
                                __accesstop 0060                     __end_of__initialization 0C9E  
                        ?_SYSTEM_Initialize 004B                               ___rparam_used 000001  
                  _tmphighm@joysticks$F1610 0003                    _tmphighm@joysticks$F1429 007A  
                  _tmphighm@joysticks$F1375 0084                    _tmphighm@joysticks$F1766 0070  
                  _tmphighm@joysticks$F1866 0066                    _tmpcenter@joysticks$F520 009A  
                  _tmpcenter@joysticks$F738 0090                        ?_setstickmultipliers 004B  
                            __pcstackCOMRAM 004B                                _checkbuttons 07B0  
                              __pidataBANK0 10CC                         ??_SYSTEM_Initialize 0051  
                            _gConBitCounter 004A                            _sx_lowMultiplier 00F0  
                          _DATAEE_WriteByte 0F04                              ??_loadsettings 0057  
                    __end_of_PMD_Initialize 113E                             ??_getmultiplier 005A  
               __size_of_setdefaultsettings 00B8                          getmultiplier@ratio 013E  
                 __end_of_SYSTEM_Initialize 118E                          _getmultiplier$2844 0140  
                                __pbssBANK0 0060                                  __pbssBANK1 0100  
                            _gInCommandByte 002A                                     IVTBASEH 003FD6  
                                   IVTBASEL 003FD5                                     IVTBASEU 003FD7  
                     ??_setstickmultipliers 005A                               _initiatedRead 0026  
                                   ?___wmul 004F                     __end_of_ADCC_Initialize 0E58  
                                   _ADFLTRH 003EE7                                     _ADFLTRL 003EE6  
                                   ?_memset 004F                                     _ADPREVH 003EEE  
                                   _ADPREVL 003EED                                  _bitgrabber 0F8E  
                                   _ADSTPTH 003EE5                                     _ADSTPTL 003EE4  
                           ?_PMD_Initialize 004B                            _gCommandPollMask 0046  
                          ?_DATAEE_ReadByte 004B                                     _OSCCON1 0039D9  
                                   _OSCCON3 0039DB          __end_of_IOCBF2_SetInterruptHandler 11C0  
                _IOCBF2_SetInterruptHandler 11B6                                     _TBLPTRH 003FF7  
                                   _TBLPTRL 003FF6                                     _TBLPTRU 003FF8  
                                   _SMT1CLK 003F21                                     _NVMADRL 0039E0  
                                   i2u61_40 0DB6                                     i2u61_41 0DB2  
                                   i2u62_40 0DC4                                     i2u62_41 0DC0  
                                   _OSCTUNE 0039DE                                     _SMT1CPR 003F15  
                                   _SMT1CPW 003F18                                     i2u63_40 0DDA  
                                   i2u63_41 0DD6                                     _NVMCON2 0039E6  
                                   _SMT1SIG 003F22                                     _SMT1PRH 003F1C  
                                   _SMT1PRL 003F1B                                     _SMT1PRU 003F1D  
                                   _SMT1WIN 003F23                                     _SMT1TMR 003F12  
                                   _SLRCONA 003A43                                     _SLRCONB 003A53  
                                   _SLRCONC 003A63                        DATAEE_WriteByte@bAdd 0050  
                  __size_of_calibratesticks 025C                                   ?_bytepush 004B  
                             ?_savesettings 004B                                     __Hparam 0000  
                                   __Lparam 0000                       getmultiplier@distance 013C  
                           __size_of___wmul 002A                                     ___lwdiv 0CA8  
                                   __pcinit 0C2A                             __size_of_memset 003E  
                                   __ramtop 0800                           _cy_highMultiplier 00E6  
                                   __ptext0 0A2E                                     __ptext1 0F4A  
                                   __ptext2 094C                                     __ptext3 0EAE  
                                   __ptext4 0CA8                                     __ptext5 001E  
                                   __ptext6 10F4                                     __ptext7 10A2  
                                   __ptext8 0BA0                                     __ptext9 0AE8  
                            _gConPollPacket 0030                                     _cx_high 00FA  
                        _gCommandOriginMask 0047                                     _cy_high 00F4  
                     _OSCILLATOR_Initialize 118E                             _gInBitBufferIdx 002C  
                  _clearRead@joysticks$F525 0022                    _clearRead@joysticks$F743 001E  
                               _gConOutByte 002F                    ??_PIN_MANAGER_Initialize 0051  
                               _SettingData 00AA                                   _IOCBFbits 003A57  
                                 _IOCBNbits 003A56                                   _IOCBPbits 003A55  
                                   _slinjim 10F4                                     _tmphigh 00A8  
                                   _sx_high 0040                                     _sy_high 003A  
                                   _tmplowm 00A0                  __size_of_SYSTEM_Initialize 001A  
                                _scansticks 001E                   _clearRead@joysticks$F1433 0016  
                 _clearRead@joysticks$F1614 0013                   _clearRead@joysticks$F1379 001A  
                 _clearRead@joysticks$F1770 0010                   _clearRead@joysticks$F1870 000D  
                      end_of_initialization 0C9E                        __end_of_loadsettings 0C2A  
                                   memset@c 0051                                     memset@n 0053  
                                   memset@p 0055                               __Lmediumconst 0000  
                                ??_bytepush 004B                              ??_savesettings 0052  
                  __size_of_SMT1_Initialize 002C                                     postdec1 003FE5  
                                   postinc0 003FEE                            ?_ADCC_Initialize 004B  
                               ?_bitgrabber 004B                                   _PORTAbits 003FCA  
                                 _PORTBbits 003FCB                                   _PORTCbits 003FCC  
                         _gConProbeResponse 00E1                     _IOCBF2_InterruptHandler 00FE  
                       savesettings@writing 0052                    __end_of_DATAEE_WriteByte 0F4A  
                         ??_calibratesticks 004F                __end_of_INTERRUPT_Initialize 11CA  
                                _zerosticks 0F4A                              __end_of___wmul 10CC  
                          _sy_lowMultiplier 00EC                               __pidataCOMRAM 113E  
                    ?_OSCILLATOR_Initialize 004B                              __end_of_memset 100A  
                       start_initialization 0C2A             __size_of_PIN_MANAGER_Initialize 0072  
                          _stickcalibration 0019                                 ?_scansticks 004B  
                                ivt0x8_base 0008                      _tmphigh@joysticks$F518 009E  
                    _tmphigh@joysticks$F736 0094                         DATAEE_ReadByte@bAdd 004F  
                          ??_PMD_Initialize 004F                                   _gInPacket 0060  
                                  ??___wmul 0053                            _cx_lowMultiplier 00E8  
                             _gInBitCounter 0049                                 __pdataBANK0 00D7  
                                 _gInStatus 0028                                    ??_memset 0055  
                         ??_SMT1_Initialize 004F                               ??_bytecleanup 004B  
                __end_of_setdefaultsettings 0BA0                        __end_of_savesettings 1076  
                               __pbssCOMRAM 0001                               __pcstackBANK1 013C  
                     __size_of_loadsettings 008A                       __end_of_getmultiplier 0F04  
               ?_IOCBF2_SetInterruptHandler 004F                           getmultiplier@high 0056  
               __end_of_setstickmultipliers 0A2E                                   __pnvBANK0 00FE  
                                 _clearRead 0025                            ___lwdiv@dividend 004F  
                    _PIN_MANAGER_Initialize 0D1C                               _gConByteCount 002E  
                                  ?___lwdiv 004F                                 ?_zerosticks 004B  
                       __size_of_scansticks 0302                                _loadsettings 0BA0  
                                 _cx_center 00FC                                   _cy_center 00F6  
                                  ?_slinjim 0055                            ___lwdiv@quotient 0054  
                  __size_of_DATAEE_ReadByte 001A                        _INTERRUPT_Initialize 11C0  
                            ___wmul@product 0053                                    _IPR1bits 003981  
                                  _PIE1bits 003991                               savesettings@i 0054  
                                  _PIR0bits 0039A0                                    _PIR1bits 0039A1  
                                  _SMT1CON0 003F1E                                    _SMT1CON1 003F1F  
                                  _SMT1CPWL 003F18                                    _SMT1STAT 003F20  
                              ??_bitgrabber 004B                                   _testcount 0021  
                                 _testpulse 001D                           _sy_highMultiplier 00EE  
                                 _tmpcenter 00A4                                  _ADCON0bits 003EF8  
                                _ADCON1bits 003EF9                                  _ADCON2bits 003EFA  
                                 _sx_center 0042                                  _ADCON3bits 003EFB  
                         ___wmul@multiplier 004F                                   _sy_center 003C  
                     DATAEE_WriteByte@bData 004F                                _SMT1CON0bits 003F1E  
                              _SMT1CON1bits 003F1F                                 _INTCON0bits 003FD2  
                                 copy_data0 0C3E                                   copy_data1 0C60  
                     ?_INTERRUPT_Initialize 004B                _initiatedRead@joysticks$F524 0023  
              _initiatedRead@joysticks$F742 001F                           ?_DATAEE_WriteByte 004F  
                           _calibratesticks 0320                         __size_of_zerosticks 0044  
                        ??_DATAEE_WriteByte 0050                                  _ADSTATbits 003EFC  
                                  __Hrparam 0000                               _gInPulseWidth 002B  
                                  __Lrparam 0000                               ?_checkbuttons 004B  
                              _gInBitBuffer 0100                     ??_OSCILLATOR_Initialize 004F  
                              _SMT1STATbits 003F20                            __size_of___lwdiv 0074  
                     __size_of_savesettings 0036                                    _adc_read 000B  
                               _bytecleanup 100A                            getmultiplier@low 0058  
                        _gConOriginResponse 00D7                    __size_of_ADCC_Initialize 005C  
                                  __pivt0x8 0008                             ___lwdiv@divisor 0051  
                           ___lwdiv@counter 0053                                    __ptext10 1040  
                                  __ptext11 0F04                                    __ptext20 11B6  
                                  __ptext12 0FCC                                    __ptext21 118E  
                                  __ptext13 115A                                    __ptext22 11C0  
                                  __ptext14 07B0                                    __ptext23 0DFC  
                                  __ptext15 0320                                    __ptext24 0D8E  
                                  __ptext16 1174                                    __ptext17 1076  
                                  __ptext18 111A                                    __ptext19 0D1C  
                              ??_scansticks 013C                            __size_of_slinjim 0026  
                              _gInPacketIdx 0029                 DATAEE_WriteByte@GIEBitValue 0051  
                             __size_of_main 00BA                                    _bytepush 057C  
                         ??_DATAEE_ReadByte 004F                             _SMT1_Initialize 1076  
                         slinjim@conversion 0059                                _savesettings 1040  
                            ??_checkbuttons 004F                                    isa$xinst 000000  
                                  _stickIdx 0027                           _cx_highMultiplier 00EA  
                                  _tmphighm 00A2                            _cy_lowMultiplier 00E4  
                        __end_of_scansticks 0320                                 _NVMCON1bits 0039E5  
                       loadsettings@loading 0057                     __end_of_calibratesticks 057C  
                    ??_INTERRUPT_Initialize 004F                                    memset@p1 004F  
                                  intlevel2 0000                          _setdefaultsettings 0AE8  
                   ?_PIN_MANAGER_Initialize 004B                     _tmplowm@joysticks$F1430 0078  
                   _tmplowm@joysticks$F1611 0001                     _tmplowm@joysticks$F1376 0082  
                   _tmplowm@joysticks$F1767 006E                     _tmplowm@joysticks$F1867 0064  
                       ?_setdefaultsettings 004B                                ??_zerosticks 004F  
                                _SMT1SIGPPS 003AD2      __end_of_INTERRUPT_InterruptManagerHigh 0DFC  
   __size_of_INTERRUPT_InterruptManagerHigh 006E              _INTERRUPT_InterruptManagerHigh 0D8E  
                             _commandreader 0E58              _IOCBF2_DefaultInterruptHandler 000000  
                    _tmplowm@joysticks$F522 0096                      _tmplowm@joysticks$F740 008C  
                      ??_setdefaultsettings 004F                           slinjim@multiplier 0057  
                   __end_of_SMT1_Initialize 10A2              __end_of_PIN_MANAGER_Initialize 0D8E  
                         ??_ADCC_Initialize 004F                          __end_of_zerosticks 0F8E  
                             loadsettings@i 0059                      _tmplow@joysticks$F1427 007E  
                    _tmplow@joysticks$F1373 0088                      _tmplow@joysticks$F1608 0007  
                     _tmplow@joysticks$F519 009C                      _tmplow@joysticks$F1764 0074  
                    _tmplow@joysticks$F1864 006A                       _tmplow@joysticks$F737 0092  
