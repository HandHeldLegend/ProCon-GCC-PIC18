

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Tue Jan 11 16:02:32 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og9 
     1                           	processor	18F25K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37  0000                     
    38                           ; Version 2.35
    39                           ; Generated 07/12/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F25K42 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     
    74 ;; Function _IOCBF2_DefaultInterruptHandler is unused but had its address taken
    75  0000                     
    76                           	psect	idataCOMRAM
    77  0008C6                     __pidataCOMRAM:
    78                           	callstack 0
    79                           
    80                           ;initializer for _gConPollPacket
    81  0008C6  00                 	db	0
    82  0008C7  00                 	db	0
    83  0008C8  83                 	db	131
    84  0008C9  83                 	db	131
    85  0008CA  7D                 	db	125
    86  0008CB  7D                 	db	125
    87  0008CC  00                 	db	0
    88  0008CD  00                 	db	0
    89                           
    90                           ;initializer for _sy_high
    91  0008CE  018E               	dw	398
    92                           
    93                           ;initializer for _sy_center
    94  0008D0  00FC               	dw	252
    95                           
    96                           ;initializer for _sy_low
    97  0008D2  008C               	dw	140
    98                           
    99                           ;initializer for _sx_high
   100  0008D4  0181               	dw	385
   101                           
   102                           ;initializer for _sx_center
   103  0008D6  00FE               	dw	254
   104                           
   105                           ;initializer for _sx_low
   106  0008D8  0083               	dw	131
   107                           
   108                           ;initializer for _gCommandPollMask
   109  0008DA  BF                 	db	191
   110                           
   111                           ;initializer for _gCommandOriginMask
   112  0008DB  BE                 	db	190
   113                           
   114                           ;initializer for _gLowThreshold
   115  0008DC  1A                 	db	26
   116                           
   117                           ;initializer for _gInBitCounter
   118  0008DD  08                 	db	8
   119                           
   120                           ;initializer for _gConBitCounter
   121  0008DE  08                 	db	8
   122                           
   123                           	psect	idataBANK0
   124  0007BC                     __pidataBANK0:
   125                           	callstack 0
   126                           
   127                           ;initializer for _gConOriginResponse
   128  0007BC  00                 	db	0
   129  0007BD  80                 	db	128
   130  0007BE  80                 	db	128
   131  0007BF  80                 	db	128
   132  0007C0  80                 	db	128
   133  0007C1  80                 	db	128
   134  0007C2  00                 	db	0
   135  0007C3  00                 	db	0
   136  0007C4  02                 	db	2
   137  0007C5  02                 	db	2
   138                           
   139                           ;initializer for _gConProbeResponse
   140  0007C6  09                 	db	9
   141  0007C7  00                 	db	0
   142  0007C8  03                 	db	3
   143                           
   144                           ;initializer for _b_value
   145  0007C9  0017               	dw	23
   146                           
   147                           ;initializer for _a_value
   148  0007CB  015E               	dw	350
   149                           
   150                           ;initializer for _cy_lowMultiplier
   151  0007CD  00C9               	dw	201
   152                           
   153                           ;initializer for _cy_highMultiplier
   154  0007CF  00C3               	dw	195
   155                           
   156                           ;initializer for _cx_lowMultiplier
   157  0007D1  00B1               	dw	177
   158                           
   159                           ;initializer for _cx_highMultiplier
   160  0007D3  0101               	dw	257
   161                           
   162                           ;initializer for _sy_lowMultiplier
   163  0007D5  00E4               	dw	228
   164                           
   165                           ;initializer for _sy_highMultiplier
   166  0007D7  00AF               	dw	175
   167                           
   168                           ;initializer for _sx_lowMultiplier
   169  0007D9  00E8               	dw	232
   170                           
   171                           ;initializer for _sx_highMultiplier
   172  0007DB  00C8               	dw	200
   173                           
   174                           ;initializer for _cy_high
   175  0007DD  0181               	dw	385
   176                           
   177                           ;initializer for _cy_center
   178  0007DF  00FE               	dw	254
   179                           
   180                           ;initializer for _cy_low
   181  0007E1  007F               	dw	127
   182                           
   183                           ;initializer for _cx_high
   184  0007E3  0163               	dw	355
   185                           
   186                           ;initializer for _cx_center
   187  0007E5  00FC               	dw	252
   188                           
   189                           ;initializer for _cx_low
   190  0007E7  006C               	dw	108
   191                           
   192                           	psect	idataBANK1
   193  000816                     __pidataBANK1:
   194                           	callstack 0
   195                           
   196                           ;initializer for _SettingData
   197  000816  0000               	dw	0
   198  000818  0083               	dw	131
   199  00081A  00FE               	dw	254
   200  00081C  0181               	dw	385
   201  00081E  008C               	dw	140
   202  000820  00FC               	dw	252
   203  000822  018E               	dw	398
   204  000824  006C               	dw	108
   205  000826  00FC               	dw	252
   206  000828  0163               	dw	355
   207  00082A  007F               	dw	127
   208  00082C  00FE               	dw	254
   209  00082E  0181               	dw	385
   210  000830  00C8               	dw	200
   211  000832  00E8               	dw	232
   212  000834  00AF               	dw	175
   213  000836  00E4               	dw	228
   214  000838  0101               	dw	257
   215  00083A  00B1               	dw	177
   216  00083C  00C3               	dw	195
   217  00083E  00C9               	dw	201
   218  000840  00                 	db	0
   219  0000                     _ADERRL	set	16098
   220  0000                     _ADERRH	set	16099
   221  0000                     _ADPREVL	set	16109
   222  0000                     _ADPREVH	set	16110
   223  0000                     _ADFLTRL	set	16102
   224  0000                     _ADFLTRH	set	16103
   225  0000                     _ADACCL	set	16104
   226  0000                     _ADACCH	set	16105
   227  0000                     _ADCNT	set	16107
   228  0000                     _ADRESL	set	16111
   229  0000                     _ADRESH	set	16112
   230  0000                     _ADCON0	set	16120
   231  0000                     _ADCON1	set	16121
   232  0000                     _ADPREH	set	16119
   233  0000                     _ADPREL	set	16118
   234  0000                     _ADCAP	set	16117
   235  0000                     _ADACQH	set	16116
   236  0000                     _ADPCH	set	16113
   237  0000                     _ADRPT	set	16108
   238  0000                     _ADACCU	set	16106
   239  0000                     _ADSTPTH	set	16101
   240  0000                     _ADSTPTL	set	16100
   241  0000                     _ADUTHH	set	16097
   242  0000                     _ADUTHL	set	16096
   243  0000                     _ADLTHH	set	16095
   244  0000                     _SMT1SIG	set	16162
   245  0000                     _SMT1WIN	set	16163
   246  0000                     _SMT1CLK	set	16161
   247  0000                     _SMT1STAT	set	16160
   248  0000                     _SMT1CON1	set	16159
   249  0000                     _IOCBPbits	set	14933
   250  0000                     _IOCBNbits	set	14934
   251  0000                     _IOCBFbits	set	14935
   252  0000                     _INLVLB	set	14932
   253  0000                     _SLRCONB	set	14931
   254  0000                     _ODCONB	set	14930
   255  0000                     _RB1I2C	set	14938
   256  0000                     _WPUB	set	14929
   257  0000                     _OSCTUNE	set	14814
   258  0000                     _OSCFRQ	set	14815
   259                           
   260                           	psect	nvBANK0
   261  0000DD                     __pnvBANK0:
   262                           	callstack 0
   263  0000DD                     _IOCBF2_InterruptHandler:
   264                           	callstack 0
   265  0000DD                     	ds	2
   266  0000                     _ADCON0bits	set	16120
   267  0000                     _SMT1CPWL	set	16152
   268  0000                     _SMT1CON1bits	set	16159
   269  0000                     _IPR1bits	set	14721
   270  0000                     _PIE1bits	set	14737
   271  0000                     _PMD0	set	14784
   272  0000                     _OSCCON1	set	14809
   273  0000                     _OSCCON3	set	14811
   274  0000                     _OSCEN	set	14813
   275  0000                     _ANSELA	set	14912
   276  0000                     _ANSELB	set	14928
   277  0000                     _ANSELC	set	14944
   278  0000                     _LATA	set	16314
   279  0000                     _PMD7	set	14791
   280  0000                     _PMD6	set	14790
   281  0000                     _PMD5	set	14789
   282  0000                     _PMD4	set	14788
   283  0000                     _PMD3	set	14787
   284  0000                     _PMD2	set	14786
   285  0000                     _PMD1	set	14785
   286  0000                     _TRISA	set	16322
   287  0000                     _LATC	set	16316
   288  0000                     _LATB	set	16315
   289  0000                     _PORTAbits	set	16330
   290  0000                     _INTCON0bits	set	16338
   291  0000                     _TRISC	set	16324
   292  0000                     _TRISB	set	16323
   293  0000                     _INLVLC	set	14948
   294  0000                     _SLRCONC	set	14947
   295  0000                     _ODCONC	set	14946
   296  0000                     _RC3I2C	set	14954
   297  0000                     _WPUC	set	14945
   298  0000                     _WPUE	set	14977
   299  0000                     _INLVLA	set	14916
   300  0000                     _SLRCONA	set	14915
   301  0000                     _ODCONA	set	14914
   302  0000                     _WPUA	set	14913
   303  0000                     _INLVLE	set	14980
   304  0000                     _RB2I2C	set	14939
   305  0000                     _RC4I2C	set	14955
   306  0000                     _SMT1SIGPPS	set	15058
   307  0000                     _SMT1TMR	set	16146
   308  0000                     _SMT1CPR	set	16149
   309  0000                     _SMT1CPW	set	16152
   310  0000                     _ADLTHL	set	16094
   311  0000                     _SMT1PRL	set	16155
   312  0000                     _SMT1PRH	set	16156
   313  0000                     _SMT1PRU	set	16157
   314  0000                     _SMT1CON0	set	16158
   315  0000                     _PIR1bits	set	14753
   316  0000                     _ADACQL	set	16115
   317  0000                     _ADCLK	set	16127
   318  0000                     _ADACT	set	16126
   319  0000                     _ADREF	set	16125
   320  0000                     _ADSTAT	set	16124
   321  0000                     _ADCON3	set	16123
   322  0000                     _ADCON2	set	16122
   323  0000                     _PORTCbits	set	16332
   324                           
   325                           ; #config settings
   326                           
   327                           	psect	cinit
   328  000482                     __pcinit:
   329                           	callstack 0
   330  000482                     start_initialization:
   331                           	callstack 0
   332  000482                     __initialization:
   333                           	callstack 0
   334                           
   335                           ; Initialize objects allocated to BANK1 (43 bytes)
   336                           ; load TBLPTR registers with __pidataBANK1
   337  000482  0E16               	movlw	low __pidataBANK1
   338  000484  6EF6               	movwf	tblptrl,c
   339  000486  0E08               	movlw	high __pidataBANK1
   340  000488  6EF7               	movwf	tblptrh,c
   341  00048A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   342  00048C  6EF8               	movwf	tblptru,c
   343  00048E  EE00  F13C         	lfsr	0,__pdataBANK1
   344  000492  EE10 F02B          	lfsr	1,43
   345  000496                     copy_data0:
   346  000496  0009               	tblrd		*+
   347  000498  006F FFD7 FFEE     	movff	tablat,postinc0
   348  00049E  50E5               	movf	postdec1,w,c
   349  0004A0  50E1               	movf	fsr1l,w,c
   350  0004A2  E1F9               	bnz	copy_data0
   351                           
   352                           ; Initialize objects allocated to BANK0 (45 bytes)
   353                           ; load TBLPTR registers with __pidataBANK0
   354  0004A4  0EBC               	movlw	low __pidataBANK0
   355  0004A6  6EF6               	movwf	tblptrl,c
   356  0004A8  0E07               	movlw	high __pidataBANK0
   357  0004AA  6EF7               	movwf	tblptrh,c
   358  0004AC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   359  0004AE  6EF8               	movwf	tblptru,c
   360  0004B0  EE00  F0AA         	lfsr	0,__pdataBANK0
   361  0004B4  EE10 F02D          	lfsr	1,45
   362  0004B8                     copy_data1:
   363  0004B8  0009               	tblrd		*+
   364  0004BA  006F FFD7 FFEE     	movff	tablat,postinc0
   365  0004C0  50E5               	movf	postdec1,w,c
   366  0004C2  50E1               	movf	fsr1l,w,c
   367  0004C4  E1F9               	bnz	copy_data1
   368                           
   369                           ; Initialize objects allocated to COMRAM (25 bytes)
   370                           ; load TBLPTR registers with __pidataCOMRAM
   371  0004C6  0EC6               	movlw	low __pidataCOMRAM
   372  0004C8  6EF6               	movwf	tblptrl,c
   373  0004CA  0E08               	movlw	high __pidataCOMRAM
   374  0004CC  6EF7               	movwf	tblptrh,c
   375  0004CE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   376  0004D0  6EF8               	movwf	tblptru,c
   377  0004D2  EE00  F033         	lfsr	0,__pdataCOMRAM
   378  0004D6  EE10 F019          	lfsr	1,25
   379  0004DA                     copy_data2:
   380  0004DA  0009               	tblrd		*+
   381  0004DC  006F FFD7 FFEE     	movff	tablat,postinc0
   382  0004E2  50E5               	movf	postdec1,w,c
   383  0004E4  50E1               	movf	fsr1l,w,c
   384  0004E6  E1F9               	bnz	copy_data2
   385                           
   386                           ; Clear objects allocated to BANK1 (60 bytes)
   387  0004E8  EE00  F100         	lfsr	0,__pbssBANK1
   388  0004EC  0E3C               	movlw	60
   389  0004EE                     clear_0:
   390  0004EE  6AEE               	clrf	postinc0,c
   391  0004F0  06E8               	decf	wreg,f,c
   392  0004F2  E1FD               	bnz	clear_0
   393                           
   394                           ; Clear objects allocated to BANK0 (74 bytes)
   395  0004F4  EE00  F060         	lfsr	0,__pbssBANK0
   396  0004F8  0E4A               	movlw	74
   397  0004FA                     clear_1:
   398  0004FA  6AEE               	clrf	postinc0,c
   399  0004FC  06E8               	decf	wreg,f,c
   400  0004FE  E1FD               	bnz	clear_1
   401                           
   402                           ; Clear objects allocated to COMRAM (50 bytes)
   403  000500  EE00  F001         	lfsr	0,__pbssCOMRAM
   404  000504  0E32               	movlw	50
   405  000506                     clear_2:
   406  000506  6AEE               	clrf	postinc0,c
   407  000508  06E8               	decf	wreg,f,c
   408  00050A  E1FD               	bnz	clear_2
   409                           
   410                           ;
   411                           ; Setup IVTBASE
   412                           ;
   413  00050C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   414  00050E  6ED5               	movwf	213,c
   415  000510  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   416  000512  6ED6               	movwf	214,c
   417  000514  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   418  000516  6ED7               	movwf	215,c
   419  000518                     end_of_initialization:
   420                           	callstack 0
   421  000518                     __end_of__initialization:
   422                           	callstack 0
   423  000518  0E00               	movlw	low (__Lmediumconst shr (0+16))
   424  00051A  6EF8               	movwf	tblptru,c
   425  00051C  0100               	movlb	0
   426  00051E  EFC5  F003         	goto	_main	;jump to C main() function
   427                           
   428                           	psect	bssCOMRAM
   429  000001                     __pbssCOMRAM:
   430                           	callstack 0
   431  000001                     _tmplowm@joysticks$F1538:
   432                           	callstack 0
   433  000001                     	ds	2
   434  000003                     _tmphighm@joysticks$F1537:
   435                           	callstack 0
   436  000003                     	ds	2
   437  000005                     _tmpcenter@joysticks$F1536:
   438                           	callstack 0
   439  000005                     	ds	2
   440  000007                     _tmplow@joysticks$F1535:
   441                           	callstack 0
   442  000007                     	ds	2
   443  000009                     _tmphigh@joysticks$F1534:
   444                           	callstack 0
   445  000009                     	ds	2
   446  00000B                     _adc_read:
   447                           	callstack 0
   448  00000B                     	ds	2
   449  00000D                     	ds	1
   450  00000E                     	ds	1
   451  00000F                     	ds	1
   452  000010                     	ds	1
   453  000011                     	ds	1
   454  000012                     	ds	1
   455  000013                     _clearRead@joysticks$F1541:
   456                           	callstack 0
   457  000013                     	ds	1
   458  000014                     _initiatedRead@joysticks$F1540:
   459                           	callstack 0
   460  000014                     	ds	1
   461  000015                     _stickIdx@joysticks$F1539:
   462                           	callstack 0
   463  000015                     	ds	1
   464  000016                     	ds	1
   465  000017                     	ds	1
   466  000018                     	ds	1
   467  000019                     _testLow:
   468                           	callstack 0
   469  000019                     	ds	1
   470  00001A                     _testHigh:
   471                           	callstack 0
   472  00001A                     	ds	1
   473  00001B                     	ds	1
   474  00001C                     	ds	1
   475  00001D                     	ds	1
   476  00001E                     _testpulse:
   477                           	callstack 0
   478  00001E                     	ds	1
   479  00001F                     	ds	1
   480  000020                     	ds	1
   481  000021                     	ds	1
   482  000022                     _testcount:
   483                           	callstack 0
   484  000022                     	ds	1
   485  000023                     	ds	1
   486  000024                     	ds	1
   487  000025                     	ds	1
   488  000026                     _bit_counter:
   489                           	callstack 0
   490  000026                     	ds	1
   491  000027                     _controller_phase:
   492                           	callstack 0
   493  000027                     	ds	1
   494  000028                     	ds	1
   495  000029                     	ds	1
   496  00002A                     	ds	1
   497  00002B                     _gInStatus:
   498                           	callstack 0
   499  00002B                     	ds	1
   500  00002C                     _gInPacketIdx:
   501                           	callstack 0
   502  00002C                     	ds	1
   503  00002D                     _gInCommandByte:
   504                           	callstack 0
   505  00002D                     	ds	1
   506  00002E                     _gInPulseWidth:
   507                           	callstack 0
   508  00002E                     	ds	1
   509  00002F                     _gInBitBufferIdx:
   510                           	callstack 0
   511  00002F                     	ds	1
   512  000030                     _gConOutIdx:
   513                           	callstack 0
   514  000030                     	ds	1
   515  000031                     _gConByteCount:
   516                           	callstack 0
   517  000031                     	ds	1
   518  000032                     _gConOutByte:
   519                           	callstack 0
   520  000032                     	ds	1
   521                           
   522                           	psect	dataCOMRAM
   523  000033                     __pdataCOMRAM:
   524                           	callstack 0
   525  000033                     _gConPollPacket:
   526                           	callstack 0
   527  000033                     	ds	8
   528  00003B                     _sy_high:
   529                           	callstack 0
   530  00003B                     	ds	2
   531  00003D                     _sy_center:
   532                           	callstack 0
   533  00003D                     	ds	2
   534  00003F                     _sy_low:
   535                           	callstack 0
   536  00003F                     	ds	2
   537  000041                     _sx_high:
   538                           	callstack 0
   539  000041                     	ds	2
   540  000043                     _sx_center:
   541                           	callstack 0
   542  000043                     	ds	2
   543  000045                     _sx_low:
   544                           	callstack 0
   545  000045                     	ds	2
   546  000047                     _gCommandPollMask:
   547                           	callstack 0
   548  000047                     	ds	1
   549  000048                     _gCommandOriginMask:
   550                           	callstack 0
   551  000048                     	ds	1
   552  000049                     _gLowThreshold:
   553                           	callstack 0
   554  000049                     	ds	1
   555  00004A                     _gInBitCounter:
   556                           	callstack 0
   557  00004A                     	ds	1
   558  00004B                     _gConBitCounter:
   559                           	callstack 0
   560  00004B                     	ds	1
   561                           
   562                           	psect	bssBANK0
   563  000060                     __pbssBANK0:
   564                           	callstack 0
   565  000060                     _gInPacket:
   566                           	callstack 0
   567  000060                     	ds	4
   568  000064                     	ds	2
   569  000066                     	ds	2
   570  000068                     	ds	2
   571  00006A                     	ds	2
   572  00006C                     	ds	2
   573  00006E                     	ds	2
   574  000070                     	ds	2
   575  000072                     	ds	2
   576  000074                     	ds	2
   577  000076                     	ds	2
   578  000078                     	ds	2
   579  00007A                     	ds	2
   580  00007C                     	ds	2
   581  00007E                     	ds	2
   582  000080                     	ds	2
   583  000082                     	ds	2
   584  000084                     	ds	2
   585  000086                     	ds	2
   586  000088                     	ds	2
   587  00008A                     	ds	2
   588  00008C                     	ds	2
   589  00008E                     	ds	2
   590  000090                     	ds	2
   591  000092                     	ds	2
   592  000094                     	ds	2
   593  000096                     	ds	2
   594  000098                     	ds	2
   595  00009A                     	ds	2
   596  00009C                     	ds	2
   597  00009E                     	ds	2
   598  0000A0                     	ds	2
   599  0000A2                     	ds	2
   600  0000A4                     	ds	2
   601  0000A6                     	ds	2
   602  0000A8                     	ds	2
   603                           
   604                           	psect	dataBANK0
   605  0000AA                     __pdataBANK0:
   606                           	callstack 0
   607  0000AA                     _gConOriginResponse:
   608                           	callstack 0
   609  0000AA                     	ds	10
   610  0000B4                     _gConProbeResponse:
   611                           	callstack 0
   612  0000B4                     	ds	3
   613  0000B7                     _b_value:
   614                           	callstack 0
   615  0000B7                     	ds	2
   616  0000B9                     _a_value:
   617                           	callstack 0
   618  0000B9                     	ds	2
   619  0000BB                     _cy_lowMultiplier:
   620                           	callstack 0
   621  0000BB                     	ds	2
   622  0000BD                     _cy_highMultiplier:
   623                           	callstack 0
   624  0000BD                     	ds	2
   625  0000BF                     _cx_lowMultiplier:
   626                           	callstack 0
   627  0000BF                     	ds	2
   628  0000C1                     _cx_highMultiplier:
   629                           	callstack 0
   630  0000C1                     	ds	2
   631  0000C3                     _sy_lowMultiplier:
   632                           	callstack 0
   633  0000C3                     	ds	2
   634  0000C5                     _sy_highMultiplier:
   635                           	callstack 0
   636  0000C5                     	ds	2
   637  0000C7                     _sx_lowMultiplier:
   638                           	callstack 0
   639  0000C7                     	ds	2
   640  0000C9                     _sx_highMultiplier:
   641                           	callstack 0
   642  0000C9                     	ds	2
   643  0000CB                     _cy_high:
   644                           	callstack 0
   645  0000CB                     	ds	2
   646  0000CD                     _cy_center:
   647                           	callstack 0
   648  0000CD                     	ds	2
   649  0000CF                     _cy_low:
   650                           	callstack 0
   651  0000CF                     	ds	2
   652  0000D1                     _cx_high:
   653                           	callstack 0
   654  0000D1                     	ds	2
   655  0000D3                     _cx_center:
   656                           	callstack 0
   657  0000D3                     	ds	2
   658  0000D5                     _cx_low:
   659                           	callstack 0
   660  0000D5                     	ds	2
   661                           
   662                           	psect	bssBANK1
   663  000100                     __pbssBANK1:
   664                           	callstack 0
   665  000100                     _gInBitBuffer:
   666                           	callstack 0
   667  000100                     	ds	60
   668                           
   669                           	psect	dataBANK1
   670  00013C                     __pdataBANK1:
   671                           	callstack 0
   672  00013C                     _SettingData:
   673                           	callstack 0
   674  00013C                     	ds	43
   675                           
   676                           	psect	cstackBANK0
   677  0000D7                     __pcstackBANK0:
   678                           	callstack 0
   679  0000D7                     slinjim@dividend:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x0
   683  0000D7                     	ds	2
   684  0000D9                     slinjim@multiplier:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x2
   688  0000D9                     	ds	2
   689  0000DB                     ??_scansticks:
   690                           
   691                           ; 1 bytes @ 0x4
   692  0000DB                     	ds	2
   693                           
   694                           	psect	cstackCOMRAM
   695  00004C                     __pcstackCOMRAM:
   696                           	callstack 0
   697  00004C                     ??_INTERRUPT_InterruptManagerHigh:
   698  00004C                     
   699                           ; 1 bytes @ 0x0
   700  00004C                     	ds	6
   701  000052                     ??_checkbuttons:
   702  000052                     ?___wmul:
   703                           	callstack 0
   704  000052                     IOCBF2_SetInterruptHandler@InterruptHandler:
   705                           	callstack 0
   706  000052                     ___wmul@multiplier:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x6
   710  000052                     	ds	2
   711  000054                     ___wmul@multiplicand:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x8
   715  000054                     	ds	2
   716  000056                     ___wmul@product:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0xA
   720  000056                     	ds	2
   721  000058                     slinjim@conversion:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0xC
   725  000058                     	ds	2
   726  00005A                     
   727                           ; 1 bytes @ 0xE
   728 ;;
   729 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   730 ;;
   731 ;; *************** function _main *****************
   732 ;; Defined at:
   733 ;;		line 71 in file "main.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;		None
   736 ;; Auto vars:     Size  Location     Type
   737 ;;		None
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      void 
   740 ;; Registers used:
   741 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, bsr, status,2, status,0, pcl, pclath, pclatu, btemp, b
      +temp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, 
      +btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, 
      +btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, cs
      +tack
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   747 ;;      Params:         0       0       0       0       0       0       0       0       0
   748 ;;      Locals:         0       0       0       0       0       0       0       0       0
   749 ;;      Temps:          0       0       0       0       0       0       0       0       0
   750 ;;      Totals:         0       0       0       0       0       0       0       0       0
   751 ;;Total ram usage:        0 bytes
   752 ;; Hardware stack levels required when called: 5
   753 ;; This function calls:
   754 ;;		_SYSTEM_Initialize
   755 ;;		_bytecleanup
   756 ;;		_bytepush
   757 ;;		_checkbuttons
   758 ;;		_commandreader
   759 ;;		_scansticks
   760 ;; This function is called by:
   761 ;;		Startup code after reset
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           	psect	text0
   766  00078A                     __ptext0:
   767                           	callstack 0
   768  00078A                     _main:
   769                           	callstack 26
   770                           
   771                           ;incstack = 0
   772  00078A  0E60               	movlw	_gInPacket	;# 
   773  00078C  006F FFA0  F02C    	movff	wreg,_gInPacketIdx	;# 
   774                           
   775                           ;main.c: 78:     SYSTEM_Initialize();
   776  000792  EC56  F004         	call	_SYSTEM_Initialize	;wreg free
   777                           
   778                           ; BSR set to: 63
   779                           ;main.c: 80:     INTCON0bits.GIEH = 1;
   780  000796  8ED2               	bsf	210,7,c	;volatile
   781                           
   782                           ; BSR set to: 63
   783                           ;main.c: 82:     ADPCH = 0x00;
   784  000798  0E00               	movlw	0
   785  00079A  013E               	movlb	62	; () banked
   786  00079C  6FF1               	movwf	241,b	;volatile
   787                           
   788                           ; BSR set to: 62
   789                           ;main.c: 85:     ADCON0bits.ADON = 1;
   790  00079E  8FF8               	bsf	248,7,b	;volatile
   791  0007A0                     l2661:
   792                           
   793                           ;main.c: 90:     {;main.c: 92:         commandreader();
   794  0007A0  EC60  F003         	call	_commandreader	;wreg free
   795                           
   796                           ;main.c: 93:         bytepush();
   797  0007A4  EC0F  F000         	call	_bytepush	;wreg free
   798                           
   799                           ;main.c: 94:         bytecleanup();
   800  0007A8  ECAA  F003         	call	_bytecleanup	;wreg free
   801                           
   802                           ;main.c: 95:         if (gInStatus & (1 << 3))
   803  0007AC  B62B               	btfsc	_gInStatus^0,3,c	;volatile
   804                           
   805                           ;main.c: 96:         {;main.c: 97:             scansticks();
   806  0007AE  EC29  F001         	call	_scansticks	;wreg free
   807                           
   808                           ;main.c: 99:         if (gInStatus & (1 << 2))
   809  0007B2  A42B               	btfss	_gInStatus^0,2,c	;volatile
   810  0007B4  D7F5               	goto	l2661
   811                           
   812                           ;main.c: 100:         {;main.c: 101:             checkbuttons();
   813  0007B6  ECC9  F002         	call	_checkbuttons	;wreg free
   814  0007BA  D7F2               	goto	l2661
   815  0007BC                     __end_of_main:
   816                           	callstack 0
   817                           
   818 ;; *************** function _scansticks *****************
   819 ;; Defined at:
   820 ;;		line 73 in file "joysticks.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;		None
   823 ;; Auto vars:     Size  Location     Type
   824 ;;		None
   825 ;; Return value:  Size  Location     Type
   826 ;;                  1    wreg      void 
   827 ;; Registers used:
   828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   829 ;; Tracked objects:
   830 ;;		On entry : 0/3E
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   834 ;;      Params:         0       0       0       0       0       0       0       0       0
   835 ;;      Locals:         0       0       0       0       0       0       0       0       0
   836 ;;      Temps:          0       2       0       0       0       0       0       0       0
   837 ;;      Totals:         0       2       0       0       0       0       0       0       0
   838 ;;Total ram usage:        2 bytes
   839 ;; Hardware stack levels used: 1
   840 ;; Hardware stack levels required when called: 4
   841 ;; This function calls:
   842 ;;		_slinjim
   843 ;; This function is called by:
   844 ;;		_main
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           	psect	text1
   849  000252                     __ptext1:
   850                           	callstack 0
   851  000252                     _scansticks:
   852                           	callstack 26
   853                           
   854                           ;joysticks.c: 77:     if (!initiatedRead)
   855                           
   856                           ;incstack = 0
   857  000252  5014               	movf	_initiatedRead@joysticks$F1540^0,w,c
   858  000254  A4D8               	btfss	status,2,c
   859  000256  D00B               	goto	l1160
   860                           
   861                           ;joysticks.c: 78:     {;joysticks.c: 79:         ADPCH = SX_A;
   862  000258  0E02               	movlw	2
   863  00025A  013E               	movlb	62	; () banked
   864  00025C  6FF1               	movwf	241,b	;volatile
   865                           
   866                           ; BSR set to: 62
   867                           ;joysticks.c: 80:         ADCON0bits.ADGO = 1;
   868  00025E  81F8               	bsf	248,0,b	;volatile
   869                           
   870                           ;joysticks.c: 81:         stickIdx = 0;
   871  000260  0E00               	movlw	0
   872  000262  6E15               	movwf	_stickIdx@joysticks$F1539^0,c
   873                           
   874                           ;joysticks.c: 82:         clearRead = 0;
   875  000264  0E00               	movlw	0
   876  000266  6E13               	movwf	_clearRead@joysticks$F1541^0,c
   877                           
   878                           ;joysticks.c: 83:         initiatedRead = 1;
   879  000268  0E01               	movlw	1
   880  00026A  6E14               	movwf	_initiatedRead@joysticks$F1540^0,c
   881                           
   882                           ;joysticks.c: 84:     }
   883  00026C  0012               	return	
   884  00026E                     l1160:
   885                           
   886                           ;joysticks.c: 86:     {;joysticks.c: 89:         if (!ADCON0bits.ADGO)
   887  00026E  013E               	movlb	62	; () banked
   888  000270  B1F8               	btfsc	248,0,b	;volatile
   889  000272  0012               	return	
   890                           
   891                           ; BSR set to: 62
   892                           ;joysticks.c: 90:         {;joysticks.c: 91:             if (clearRead)
   893  000274  5013               	movf	_clearRead@joysticks$F1541^0,w,c
   894  000276  A4D8               	btfss	status,2,c
   895  000278  D010               	goto	l2593
   896  00027A  D02A               	goto	l2601
   897  00027C                     l2581:
   898                           
   899                           ; BSR set to: 0
   900                           ;joysticks.c: 96:                         ADPCH = SY_A;
   901  00027C  0E03               	movlw	3
   902  00027E  D003               	goto	L2
   903  000280                     l2583:
   904                           
   905                           ; BSR set to: 0
   906                           ;joysticks.c: 99:                         ADPCH = CX_A;
   907  000280  0E00               	movlw	0
   908  000282  D001               	goto	L2
   909  000284                     l2585:
   910                           
   911                           ; BSR set to: 0
   912                           ;joysticks.c: 102:                         ADPCH = CY_A;
   913  000284  0E01               	movlw	1
   914  000286                     L2:
   915  000286  013E               	movlb	62	; () banked
   916  000288  6FF1               	movwf	241,b	;volatile
   917                           
   918                           ;joysticks.c: 103:                         break;
   919  00028A  D01C               	goto	l2595
   920  00028C                     l1169:
   921                           
   922                           ; BSR set to: 0
   923  00028C  962B               	bcf	_gInStatus,3,c	;# 
   924  00028E  842B               	bsf	_gInStatus,2,c	;# 
   925                           
   926                           ;joysticks.c: 107:                         initiatedRead = 0;
   927  000290  0E00               	movlw	0
   928  000292  6E14               	movwf	_initiatedRead@joysticks$F1540^0,c
   929                           
   930                           ;joysticks.c: 108:                         clearRead = 0;
   931  000294  0E00               	movlw	0
   932  000296  6E13               	movwf	_clearRead@joysticks$F1541^0,c
   933  000298  0012               	return	
   934  00029A                     l2593:
   935                           
   936                           ; BSR set to: 62
   937  00029A  5015               	movf	_stickIdx@joysticks$F1539^0,w,c
   938  00029C  0100               	movlb	0	; () banked
   939  00029E  6FDB               	movwf	??_scansticks& (0+255),b
   940  0002A0  6BDC               	clrf	(??_scansticks+1)& (0+255),b
   941                           
   942                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   943                           ; Switch size 1, requested type "simple"
   944                           ; Number of cases is 1, Range of values is 0 to 0
   945                           ; switch strategies available:
   946                           ; Name         Instructions Cycles
   947                           ; simple_byte            4     3 (average)
   948                           ;	Chosen strategy is simple_byte
   949  0002A2  51DC               	movf	(??_scansticks+1)& (0+255),w,b
   950  0002A4  0A00               	xorlw	0	; case 0
   951  0002A6  A4D8               	btfss	status,2,c
   952  0002A8  D00D               	goto	l2595
   953                           
   954                           ; BSR set to: 0
   955                           ; Switch size 1, requested type "simple"
   956                           ; Number of cases is 4, Range of values is 0 to 3
   957                           ; switch strategies available:
   958                           ; Name         Instructions Cycles
   959                           ; simple_byte           13     7 (average)
   960                           ;	Chosen strategy is simple_byte
   961  0002AA  51DB               	movf	??_scansticks& (0+255),w,b
   962  0002AC  0A00               	xorlw	0	; case 0
   963  0002AE  B4D8               	btfsc	status,2,c
   964  0002B0  D7E5               	goto	l2581
   965  0002B2  0A01               	xorlw	1	; case 1
   966  0002B4  B4D8               	btfsc	status,2,c
   967  0002B6  D7E4               	goto	l2583
   968  0002B8  0A03               	xorlw	3	; case 2
   969  0002BA  B4D8               	btfsc	status,2,c
   970  0002BC  D7E3               	goto	l2585
   971  0002BE  0A01               	xorlw	1	; case 3
   972  0002C0  B4D8               	btfsc	status,2,c
   973  0002C2  D7E4               	goto	l1169
   974  0002C4                     l2595:
   975                           
   976                           ;joysticks.c: 120:                 stickIdx++;
   977  0002C4  2A15               	incf	_stickIdx@joysticks$F1539^0,f,c
   978                           
   979                           ;joysticks.c: 121:                 clearRead = 0;
   980  0002C6  0E00               	movlw	0
   981  0002C8  6E13               	movwf	_clearRead@joysticks$F1541^0,c
   982                           
   983                           ;joysticks.c: 122:                 ADCON0bits.ADGO = 1;
   984  0002CA  013E               	movlb	62	; () banked
   985  0002CC  81F8               	bsf	248,0,b	;volatile
   986                           
   987                           ;joysticks.c: 123:             }
   988  0002CE  0012               	return	
   989  0002D0                     l2601:
   990                           
   991                           ; BSR set to: 62
   992                           ;joysticks.c: 125:             {;joysticks.c: 126:                 clearRead = 1;
   993  0002D0  0E01               	movlw	1
   994  0002D2  6E13               	movwf	_clearRead@joysticks$F1541^0,c
   995                           
   996                           ;joysticks.c: 127:                 ADPCH = channel_VSS;
   997  0002D4  0E3B               	movlw	59
   998  0002D6  6FF1               	movwf	241,b	;volatile
   999                           
  1000                           ; BSR set to: 62
  1001                           ;joysticks.c: 128:                 ADCON0bits.ADGO = 1;
  1002  0002D8  81F8               	bsf	248,0,b	;volatile
  1003                           
  1004                           ; BSR set to: 62
  1005                           ;joysticks.c: 132:                 adc_read = ((adc_result_t)((ADRESH << 8) + ADRESL)) >
      +                          > 3;
  1006  0002DA  51EF               	movf	239,w,b	;volatile
  1007  0002DC  006F FBC0  F0DB    	movff	16112,??_scansticks	;volatile
  1008  0002E2  0100               	movlb	0	; () banked
  1009  0002E4  6BDC               	clrf	(??_scansticks+1)& (0+255),b
  1010  0002E6  C0DB  F0DC         	movff	??_scansticks,??_scansticks+1
  1011  0002EA  6BDB               	clrf	??_scansticks& (0+255),b
  1012  0002EC  27DB               	addwf	??_scansticks& (0+255),f,b
  1013  0002EE  0E00               	movlw	0
  1014  0002F0  23DC               	addwfc	(??_scansticks+1)& (0+255),f,b
  1015  0002F2  90D8               	bcf	status,0,c
  1016  0002F4  33DC               	rrcf	(??_scansticks+1)& (0+255),f,b
  1017  0002F6  33DB               	rrcf	??_scansticks& (0+255),f,b
  1018  0002F8  90D8               	bcf	status,0,c
  1019  0002FA  33DC               	rrcf	(??_scansticks+1)& (0+255),f,b
  1020  0002FC  33DB               	rrcf	??_scansticks& (0+255),f,b
  1021  0002FE  90D8               	bcf	status,0,c
  1022  000300  33DC               	rrcf	(??_scansticks+1)& (0+255),f,b
  1023  000302  33DB               	rrcf	??_scansticks& (0+255),f,b
  1024  000304  C0DB  F00B         	movff	??_scansticks,_adc_read
  1025  000308  C0DC  F00C         	movff	??_scansticks+1,_adc_read+1
  1026                           
  1027                           ;joysticks.c: 136:                 switch (stickIdx)
  1028  00030C  D051               	goto	l2617
  1029  00030E                     l2607:
  1030                           
  1031                           ; BSR set to: 0
  1032                           ;joysticks.c: 140:                         tmphigh = sx_high;
  1033  00030E  0E01               	movlw	1
  1034  000310  6E0A               	movwf	(_tmphigh@joysticks$F1534+1)^0,c
  1035  000312  0E81               	movlw	129
  1036  000314  6E09               	movwf	_tmphigh@joysticks$F1534^0,c
  1037                           
  1038                           ;joysticks.c: 141:                         tmplow = sx_low;
  1039  000316  0E00               	movlw	0
  1040  000318  6E08               	movwf	(_tmplow@joysticks$F1535+1)^0,c
  1041  00031A  0E83               	movlw	131
  1042  00031C  6E07               	movwf	_tmplow@joysticks$F1535^0,c
  1043                           
  1044                           ;joysticks.c: 142:                         tmpcenter = sx_center;
  1045  00031E  0E00               	movlw	0
  1046  000320  6E06               	movwf	(_tmpcenter@joysticks$F1536+1)^0,c
  1047  000322  0EFE               	movlw	254
  1048  000324  6E05               	movwf	_tmpcenter@joysticks$F1536^0,c
  1049                           
  1050                           ;joysticks.c: 143:                         tmphighm = sx_highMultiplier;
  1051  000326  0E00               	movlw	0
  1052  000328  6E04               	movwf	(_tmphighm@joysticks$F1537+1)^0,c
  1053  00032A  0EC8               	movlw	200
  1054  00032C  6E03               	movwf	_tmphighm@joysticks$F1537^0,c
  1055                           
  1056                           ;joysticks.c: 144:                         tmplowm = sx_lowMultiplier;
  1057  00032E  0E00               	movlw	0
  1058  000330  6E02               	movwf	(_tmplowm@joysticks$F1538+1)^0,c
  1059  000332  0EE8               	movlw	232
  1060  000334  D03B               	goto	L5
  1061  000336                     l2609:
  1062                           
  1063                           ; BSR set to: 0
  1064                           ;joysticks.c: 150:                         tmphigh = sy_high;
  1065  000336  0E01               	movlw	1
  1066  000338  6E0A               	movwf	(_tmphigh@joysticks$F1534+1)^0,c
  1067  00033A  0E8E               	movlw	142
  1068  00033C  6E09               	movwf	_tmphigh@joysticks$F1534^0,c
  1069                           
  1070                           ;joysticks.c: 151:                         tmplow = sy_low;
  1071  00033E  0E00               	movlw	0
  1072  000340  6E08               	movwf	(_tmplow@joysticks$F1535+1)^0,c
  1073  000342  0E8C               	movlw	140
  1074  000344  6E07               	movwf	_tmplow@joysticks$F1535^0,c
  1075                           
  1076                           ;joysticks.c: 152:                         tmpcenter = sy_center;
  1077  000346  0E00               	movlw	0
  1078  000348  6E06               	movwf	(_tmpcenter@joysticks$F1536+1)^0,c
  1079  00034A  0EFC               	movlw	252
  1080  00034C  6E05               	movwf	_tmpcenter@joysticks$F1536^0,c
  1081                           
  1082                           ;joysticks.c: 153:                         tmphighm = sy_highMultiplier;
  1083  00034E  0E00               	movlw	0
  1084  000350  6E04               	movwf	(_tmphighm@joysticks$F1537+1)^0,c
  1085  000352  0EAF               	movlw	175
  1086  000354  6E03               	movwf	_tmphighm@joysticks$F1537^0,c
  1087                           
  1088                           ;joysticks.c: 154:                         tmplowm = sy_lowMultiplier;
  1089  000356  0E00               	movlw	0
  1090  000358  6E02               	movwf	(_tmplowm@joysticks$F1538+1)^0,c
  1091  00035A  0EE4               	movlw	228
  1092  00035C  D027               	goto	L5
  1093  00035E                     l2611:
  1094                           
  1095                           ; BSR set to: 0
  1096                           ;joysticks.c: 160:                         tmphigh = cx_high;
  1097  00035E  0E01               	movlw	1
  1098  000360  6E0A               	movwf	(_tmphigh@joysticks$F1534+1)^0,c
  1099  000362  0E63               	movlw	99
  1100  000364  6E09               	movwf	_tmphigh@joysticks$F1534^0,c
  1101                           
  1102                           ;joysticks.c: 161:                         tmplow = cx_low;
  1103  000366  0E00               	movlw	0
  1104  000368  6E08               	movwf	(_tmplow@joysticks$F1535+1)^0,c
  1105  00036A  0E6C               	movlw	108
  1106  00036C  6E07               	movwf	_tmplow@joysticks$F1535^0,c
  1107                           
  1108                           ;joysticks.c: 162:                         tmpcenter = cx_center;
  1109  00036E  0E00               	movlw	0
  1110  000370  6E06               	movwf	(_tmpcenter@joysticks$F1536+1)^0,c
  1111  000372  0EFC               	movlw	252
  1112  000374  6E05               	movwf	_tmpcenter@joysticks$F1536^0,c
  1113                           
  1114                           ;joysticks.c: 163:                         tmphighm = cx_highMultiplier;
  1115  000376  0E01               	movlw	1
  1116  000378  6E04               	movwf	(_tmphighm@joysticks$F1537+1)^0,c
  1117  00037A  0E01               	movlw	1
  1118  00037C  6E03               	movwf	_tmphighm@joysticks$F1537^0,c
  1119                           
  1120                           ;joysticks.c: 164:                         tmplowm = cx_lowMultiplier;
  1121  00037E  0E00               	movlw	0
  1122  000380  6E02               	movwf	(_tmplowm@joysticks$F1538+1)^0,c
  1123  000382  0EB1               	movlw	177
  1124  000384  D013               	goto	L5
  1125  000386                     l2613:
  1126                           
  1127                           ; BSR set to: 0
  1128                           ;joysticks.c: 170:                         tmphigh = cy_high;
  1129  000386  0E01               	movlw	1
  1130  000388  6E0A               	movwf	(_tmphigh@joysticks$F1534+1)^0,c
  1131  00038A  0E81               	movlw	129
  1132  00038C  6E09               	movwf	_tmphigh@joysticks$F1534^0,c
  1133                           
  1134                           ;joysticks.c: 171:                         tmplow = cy_low;
  1135  00038E  0E00               	movlw	0
  1136  000390  6E08               	movwf	(_tmplow@joysticks$F1535+1)^0,c
  1137  000392  0E7F               	movlw	127
  1138  000394  6E07               	movwf	_tmplow@joysticks$F1535^0,c
  1139                           
  1140                           ;joysticks.c: 172:                         tmpcenter = cy_center;
  1141  000396  0E00               	movlw	0
  1142  000398  6E06               	movwf	(_tmpcenter@joysticks$F1536+1)^0,c
  1143  00039A  0EFE               	movlw	254
  1144  00039C  6E05               	movwf	_tmpcenter@joysticks$F1536^0,c
  1145                           
  1146                           ;joysticks.c: 173:                         tmphighm = cy_highMultiplier;
  1147  00039E  0E00               	movlw	0
  1148  0003A0  6E04               	movwf	(_tmphighm@joysticks$F1537+1)^0,c
  1149  0003A2  0EC3               	movlw	195
  1150  0003A4  6E03               	movwf	_tmphighm@joysticks$F1537^0,c
  1151                           
  1152                           ;joysticks.c: 174:                         tmplowm = cy_lowMultiplier;
  1153  0003A6  0E00               	movlw	0
  1154  0003A8  6E02               	movwf	(_tmplowm@joysticks$F1538+1)^0,c
  1155  0003AA  0EC9               	movlw	201
  1156  0003AC                     L5:
  1157  0003AC  6E01               	movwf	_tmplowm@joysticks$F1538^0,c
  1158                           
  1159                           ;joysticks.c: 176:                         break;
  1160  0003AE  D014               	goto	l2619
  1161  0003B0                     l2617:
  1162                           
  1163                           ; BSR set to: 0
  1164  0003B0  5015               	movf	_stickIdx@joysticks$F1539^0,w,c
  1165  0003B2  6FDB               	movwf	??_scansticks& (0+255),b
  1166  0003B4  6BDC               	clrf	(??_scansticks+1)& (0+255),b
  1167                           
  1168                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1169                           ; Switch size 1, requested type "simple"
  1170                           ; Number of cases is 1, Range of values is 0 to 0
  1171                           ; switch strategies available:
  1172                           ; Name         Instructions Cycles
  1173                           ; simple_byte            4     3 (average)
  1174                           ;	Chosen strategy is simple_byte
  1175  0003B6  51DC               	movf	(??_scansticks+1)& (0+255),w,b
  1176  0003B8  0A00               	xorlw	0	; case 0
  1177  0003BA  A4D8               	btfss	status,2,c
  1178  0003BC  D00D               	goto	l2619
  1179                           
  1180                           ; BSR set to: 0
  1181                           ; Switch size 1, requested type "simple"
  1182                           ; Number of cases is 4, Range of values is 0 to 3
  1183                           ; switch strategies available:
  1184                           ; Name         Instructions Cycles
  1185                           ; simple_byte           13     7 (average)
  1186                           ;	Chosen strategy is simple_byte
  1187  0003BE  51DB               	movf	??_scansticks& (0+255),w,b
  1188  0003C0  0A00               	xorlw	0	; case 0
  1189  0003C2  B4D8               	btfsc	status,2,c
  1190  0003C4  D7A4               	goto	l2607
  1191  0003C6  0A01               	xorlw	1	; case 1
  1192  0003C8  B4D8               	btfsc	status,2,c
  1193  0003CA  D7B5               	goto	l2609
  1194  0003CC  0A03               	xorlw	3	; case 2
  1195  0003CE  B4D8               	btfsc	status,2,c
  1196  0003D0  D7C6               	goto	l2611
  1197  0003D2  0A01               	xorlw	1	; case 3
  1198  0003D4  B4D8               	btfsc	status,2,c
  1199  0003D6  D7D7               	goto	l2613
  1200  0003D8                     l2619:
  1201                           
  1202                           ; BSR set to: 0
  1203                           ;joysticks.c: 184:                 if (adc_read > tmpcenter)
  1204  0003D8  500B               	movf	_adc_read^0,w,c
  1205  0003DA  5C05               	subwf	_tmpcenter@joysticks$F1536^0,w,c
  1206  0003DC  500C               	movf	(_adc_read+1)^0,w,c
  1207  0003DE  5806               	subwfb	(_tmpcenter@joysticks$F1536+1)^0,w,c
  1208  0003E0  B0D8               	btfsc	status,0,c
  1209  0003E2  D020               	goto	l2627
  1210                           
  1211                           ; BSR set to: 0
  1212                           ;joysticks.c: 185:                 {;joysticks.c: 186:                     if (adc_read 
      +                          >= tmphigh)
  1213  0003E4  5009               	movf	_tmphigh@joysticks$F1534^0,w,c
  1214  0003E6  5C0B               	subwf	_adc_read^0,w,c
  1215  0003E8  500A               	movf	(_tmphigh@joysticks$F1534+1)^0,w,c
  1216  0003EA  580C               	subwfb	(_adc_read+1)^0,w,c
  1217  0003EC  A0D8               	btfss	status,0,c
  1218  0003EE  D007               	goto	l2625
  1219                           
  1220                           ; BSR set to: 0
  1221                           ;joysticks.c: 187:                     {;joysticks.c: 188:                         gConP
      +                          ollPacket[stickIdx+2] = (unsigned char) 228;
  1222  0003F0  5015               	movf	_stickIdx@joysticks$F1539^0,w,c
  1223  0003F2  0F35               	addlw	low (_gConPollPacket+2)
  1224  0003F4  6ED9               	movwf	fsr2l,c
  1225  0003F6  6ADA               	clrf	fsr2h,c
  1226  0003F8  0EE4               	movlw	228
  1227  0003FA  6EDF               	movwf	indf2,c
  1228                           
  1229                           ;joysticks.c: 189:                     }
  1230  0003FC  0012               	return	
  1231  0003FE                     l2625:
  1232                           
  1233                           ; BSR set to: 0
  1234                           ;joysticks.c: 191:                     {;joysticks.c: 192:                         gConP
      +                          ollPacket[stickIdx+2] = (unsigned char) 128 + slinjim(adc_read - tmpcenter, tmphighm);
  1235  0003FE  5015               	movf	_stickIdx@joysticks$F1539^0,w,c
  1236  000400  0F35               	addlw	low (_gConPollPacket+2)
  1237  000402  6ED9               	movwf	fsr2l,c
  1238  000404  6ADA               	clrf	fsr2h,c
  1239  000406  5005               	movf	_tmpcenter@joysticks$F1536^0,w,c
  1240  000408  5C0B               	subwf	_adc_read^0,w,c
  1241  00040A  6FD7               	movwf	slinjim@dividend& (0+255),b
  1242  00040C  5006               	movf	(_tmpcenter@joysticks$F1536+1)^0,w,c
  1243  00040E  580C               	subwfb	(_adc_read+1)^0,w,c
  1244  000410  6FD8               	movwf	(slinjim@dividend+1)& (0+255),b
  1245  000412  C003  F0D9         	movff	_tmphighm@joysticks$F1537,slinjim@multiplier
  1246  000416  C004  F0DA         	movff	_tmphighm@joysticks$F1537+1,slinjim@multiplier+1
  1247  00041A  EC47  F004         	call	_slinjim	;wreg free
  1248  00041E  0F80               	addlw	128
  1249  000420  6EDF               	movwf	indf2,c
  1250  000422  0012               	return	
  1251  000424                     l2627:
  1252                           
  1253                           ; BSR set to: 0
  1254  000424  5005               	movf	_tmpcenter@joysticks$F1536^0,w,c
  1255  000426  5C0B               	subwf	_adc_read^0,w,c
  1256  000428  5006               	movf	(_tmpcenter@joysticks$F1536+1)^0,w,c
  1257  00042A  580C               	subwfb	(_adc_read+1)^0,w,c
  1258  00042C  B0D8               	btfsc	status,0,c
  1259  00042E  D022               	goto	l2635
  1260                           
  1261                           ; BSR set to: 0
  1262                           ;joysticks.c: 196:                 {;joysticks.c: 197:                     if (adc_read 
      +                          <= tmplow)
  1263  000430  500B               	movf	_adc_read^0,w,c
  1264  000432  5C07               	subwf	_tmplow@joysticks$F1535^0,w,c
  1265  000434  500C               	movf	(_adc_read+1)^0,w,c
  1266  000436  5808               	subwfb	(_tmplow@joysticks$F1535+1)^0,w,c
  1267  000438  A0D8               	btfss	status,0,c
  1268  00043A  D007               	goto	l2633
  1269                           
  1270                           ; BSR set to: 0
  1271                           ;joysticks.c: 198:                     {;joysticks.c: 199:                         gConP
      +                          ollPacket[stickIdx+2] = (unsigned char) 27;
  1272  00043C  5015               	movf	_stickIdx@joysticks$F1539^0,w,c
  1273  00043E  0F35               	addlw	low (_gConPollPacket+2)
  1274  000440  6ED9               	movwf	fsr2l,c
  1275  000442  6ADA               	clrf	fsr2h,c
  1276  000444  0E1B               	movlw	27
  1277  000446  6EDF               	movwf	indf2,c
  1278                           
  1279                           ;joysticks.c: 200:                     }
  1280  000448  0012               	return	
  1281  00044A                     l2633:
  1282                           
  1283                           ; BSR set to: 0
  1284                           ;joysticks.c: 202:                     {;joysticks.c: 203:                         gConP
      +                          ollPacket[stickIdx+2] = (unsigned char) 128 - slinjim(tmpcenter - adc_read, tmplowm);
  1285  00044A  5015               	movf	_stickIdx@joysticks$F1539^0,w,c
  1286  00044C  0F35               	addlw	low (_gConPollPacket+2)
  1287  00044E  6ED9               	movwf	fsr2l,c
  1288  000450  6ADA               	clrf	fsr2h,c
  1289  000452  500B               	movf	_adc_read^0,w,c
  1290  000454  5C05               	subwf	_tmpcenter@joysticks$F1536^0,w,c
  1291  000456  6FD7               	movwf	slinjim@dividend& (0+255),b
  1292  000458  500C               	movf	(_adc_read+1)^0,w,c
  1293  00045A  5806               	subwfb	(_tmpcenter@joysticks$F1536+1)^0,w,c
  1294  00045C  6FD8               	movwf	(slinjim@dividend+1)& (0+255),b
  1295  00045E  C001  F0D9         	movff	_tmplowm@joysticks$F1538,slinjim@multiplier
  1296  000462  C002  F0DA         	movff	_tmplowm@joysticks$F1538+1,slinjim@multiplier+1
  1297  000466  EC47  F004         	call	_slinjim	;wreg free
  1298  00046A  6FDB               	movwf	??_scansticks& (0+255),b
  1299  00046C  51DB               	movf	??_scansticks& (0+255),w,b
  1300  00046E  0880               	sublw	128
  1301  000470  6EDF               	movwf	indf2,c
  1302  000472  0012               	return	
  1303  000474                     l2635:
  1304                           
  1305                           ; BSR set to: 0
  1306                           ;joysticks.c: 207:                 {;joysticks.c: 208:                     gConPollPacke
      +                          t[stickIdx+2] = (unsigned char) 128;
  1307  000474  5015               	movf	_stickIdx@joysticks$F1539^0,w,c
  1308  000476  0F35               	addlw	low (_gConPollPacket+2)
  1309  000478  6ED9               	movwf	fsr2l,c
  1310  00047A  6ADA               	clrf	fsr2h,c
  1311  00047C  0E80               	movlw	128
  1312  00047E  6EDF               	movwf	indf2,c
  1313  000480  0012               	return		;funcret
  1314  000482                     __end_of_scansticks:
  1315                           	callstack 0
  1316                           
  1317 ;; *************** function _slinjim *****************
  1318 ;; Defined at:
  1319 ;;		line 54 in file "joysticks.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;  dividend        2    0[BANK0 ] unsigned short 
  1322 ;;  multiplier      2    2[BANK0 ] unsigned short 
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;  conversion      2   12[COMRAM] unsigned short 
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      unsigned char 
  1327 ;; Registers used:
  1328 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 3F/0
  1331 ;;		On exit  : 3F/0
  1332 ;;		Unchanged: 3F/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1334 ;;      Params:         0       4       0       0       0       0       0       0       0
  1335 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1336 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1337 ;;      Totals:         2       4       0       0       0       0       0       0       0
  1338 ;;Total ram usage:        6 bytes
  1339 ;; Hardware stack levels used: 1
  1340 ;; Hardware stack levels required when called: 3
  1341 ;; This function calls:
  1342 ;;		___wmul
  1343 ;; This function is called by:
  1344 ;;		_scansticks
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           	psect	text2
  1349  00088E                     __ptext2:
  1350                           	callstack 0
  1351  00088E                     _slinjim:
  1352                           	callstack 26
  1353                           
  1354                           ; BSR set to: 0
  1355                           ;joysticks.c: 54: unsigned char slinjim(uint16_t dividend, uint16_t multiplier);joystick
      +                          s.c: 55: {;joysticks.c: 56:     uint16_t conversion = (dividend * multiplier) >> 8;
  1356                           
  1357                           ;incstack = 0
  1358  00088E  C0D7  F052         	movff	slinjim@dividend,___wmul@multiplier
  1359  000892  C0D8  F053         	movff	slinjim@dividend+1,___wmul@multiplier+1
  1360  000896  C0D9  F054         	movff	slinjim@multiplier,___wmul@multiplicand
  1361  00089A  C0DA  F055         	movff	slinjim@multiplier+1,___wmul@multiplicand+1
  1362  00089E  EC21  F004         	call	___wmul	;wreg free
  1363  0008A2  5053               	movf	(?___wmul+1)^0,w,c
  1364  0008A4  6E58               	movwf	slinjim@conversion^0,c
  1365  0008A6  6A59               	clrf	(slinjim@conversion+1)^0,c
  1366                           
  1367                           ; BSR set to: 0
  1368                           ;joysticks.c: 57:     return (unsigned char) conversion;
  1369  0008A8  5058               	movf	slinjim@conversion^0,w,c
  1370                           
  1371                           ; BSR set to: 0
  1372  0008AA  0012               	return		;funcret
  1373  0008AC                     __end_of_slinjim:
  1374                           	callstack 0
  1375                           
  1376 ;; *************** function ___wmul *****************
  1377 ;; Defined at:
  1378 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;  multiplier      2    6[COMRAM] unsigned int 
  1381 ;;  multiplicand    2    8[COMRAM] unsigned int 
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;  product         2   10[COMRAM] unsigned int 
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  2    6[COMRAM] unsigned int 
  1386 ;; Registers used:
  1387 ;;		wreg, status,2, status,0, prodl, prodh
  1388 ;; Tracked objects:
  1389 ;;		On entry : 3F/0
  1390 ;;		On exit  : 3F/0
  1391 ;;		Unchanged: 3F/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1393 ;;      Params:         4       0       0       0       0       0       0       0       0
  1394 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1395 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1396 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1397 ;;Total ram usage:        6 bytes
  1398 ;; Hardware stack levels used: 1
  1399 ;; Hardware stack levels required when called: 2
  1400 ;; This function calls:
  1401 ;;		Nothing
  1402 ;; This function is called by:
  1403 ;;		_slinjim
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text3
  1408  000842                     __ptext3:
  1409                           	callstack 0
  1410  000842                     ___wmul:
  1411                           	callstack 26
  1412                           
  1413                           ; BSR set to: 0
  1414                           
  1415                           ; BSR set to: 0
  1416                           ;incstack = 0
  1417  000842  5052               	movf	___wmul@multiplier^0,w,c
  1418  000844  0254               	mulwf	___wmul@multiplicand^0,c
  1419  000846  006F FFCC  F056    	movff	prodl,___wmul@product
  1420  00084C  006F FFD0  F057    	movff	prodh,___wmul@product+1
  1421  000852  5052               	movf	___wmul@multiplier^0,w,c
  1422  000854  0255               	mulwf	(___wmul@multiplicand+1)^0,c
  1423  000856  50F3               	movf	243,w,c
  1424  000858  2657               	addwf	(___wmul@product+1)^0,f,c
  1425  00085A  5053               	movf	(___wmul@multiplier+1)^0,w,c
  1426  00085C  0254               	mulwf	___wmul@multiplicand^0,c
  1427  00085E  50F3               	movf	243,w,c
  1428  000860  2657               	addwf	(___wmul@product+1)^0,f,c
  1429                           
  1430                           ; BSR set to: 0
  1431  000862  C056  F052         	movff	___wmul@product,?___wmul
  1432  000866  C057  F053         	movff	___wmul@product+1,?___wmul+1
  1433                           
  1434                           ; BSR set to: 0
  1435  00086A  0012               	return		;funcret
  1436  00086C                     __end_of___wmul:
  1437                           	callstack 0
  1438                           
  1439 ;; *************** function _checkbuttons *****************
  1440 ;; Defined at:
  1441 ;;		line 12 in file "button.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;		None
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;		None
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  1    wreg      void 
  1448 ;; Registers used:
  1449 ;;		wreg, status,2, status,0
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/3E
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1455 ;;      Params:         0       0       0       0       0       0       0       0       0
  1456 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1457 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1458 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1459 ;;Total ram usage:        1 bytes
  1460 ;; Hardware stack levels used: 1
  1461 ;; Hardware stack levels required when called: 2
  1462 ;; This function calls:
  1463 ;;		Nothing
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	text4
  1470  000592                     __ptext4:
  1471                           	callstack 0
  1472  000592                     _checkbuttons:
  1473                           	callstack 28
  1474                           
  1475                           ;button.c: 18:     if (!(gInStatus & (1 << 1)))
  1476                           
  1477                           ; BSR set to: 0
  1478                           ;incstack = 0
  1479  000592  B22B               	btfsc	_gInStatus^0,1,c	;volatile
  1480  000594  D009               	goto	l2237
  1481                           
  1482                           ;button.c: 19:     {;button.c: 20:         gConPollPacket[0] = 0x0;
  1483  000596  0E00               	movlw	0
  1484  000598  6E33               	movwf	_gConPollPacket^0,c	;volatile
  1485                           
  1486                           ;button.c: 21:         gConPollPacket[1] = 0x0;
  1487  00059A  0E00               	movlw	0
  1488  00059C  6E34               	movwf	(_gConPollPacket+1)^0,c	;volatile
  1489                           
  1490                           ;button.c: 22:         gConPollPacket[6] = 0x0;
  1491  00059E  0E00               	movlw	0
  1492  0005A0  6E39               	movwf	(_gConPollPacket+6)^0,c	;volatile
  1493                           
  1494                           ;button.c: 23:         gConPollPacket[7] = 0x0;
  1495  0005A2  0E00               	movlw	0
  1496  0005A4  6E3A               	movwf	(_gConPollPacket+7)^0,c	;volatile
  1497  0005A6  822B               	bsf	_gInStatus,1,c	;# 
  1498  0005A8                     l2237:
  1499                           
  1500                           ;button.c: 27:     gConPollPacket[0] ^= PORTAbits.RA4 << 1;
  1501  0005A8  A8CA               	btfss	202,4,c	;volatile
  1502  0005AA  D003               	goto	u90
  1503  0005AC  6A52               	clrf	??_checkbuttons^0,c
  1504  0005AE  2A52               	incf	??_checkbuttons^0,f,c
  1505  0005B0  D001               	goto	u98
  1506  0005B2                     u90:
  1507  0005B2  6A52               	clrf	??_checkbuttons^0,c
  1508  0005B4                     u98:
  1509  0005B4  90D8               	bcf	status,0,c
  1510  0005B6  3452               	rlcf	??_checkbuttons^0,w,c
  1511  0005B8  1A33               	xorwf	_gConPollPacket^0,f,c	;volatile
  1512                           
  1513                           ;button.c: 28:     gConPollPacket[0] ^= PORTAbits.RA5 << 1;
  1514  0005BA  AACA               	btfss	202,5,c	;volatile
  1515  0005BC  D003               	goto	u100
  1516  0005BE  6A52               	clrf	??_checkbuttons^0,c
  1517  0005C0  2A52               	incf	??_checkbuttons^0,f,c
  1518  0005C2  D001               	goto	u108
  1519  0005C4                     u100:
  1520  0005C4  6A52               	clrf	??_checkbuttons^0,c
  1521  0005C6                     u108:
  1522  0005C6  90D8               	bcf	status,0,c
  1523  0005C8  3452               	rlcf	??_checkbuttons^0,w,c
  1524  0005CA  1A33               	xorwf	_gConPollPacket^0,f,c	;volatile
  1525                           
  1526                           ;button.c: 29:     gConPollPacket[0] ^= PORTAbits.RA7 << 1;
  1527  0005CC  AECA               	btfss	202,7,c	;volatile
  1528  0005CE  D003               	goto	u110
  1529  0005D0  6A52               	clrf	??_checkbuttons^0,c
  1530  0005D2  2A52               	incf	??_checkbuttons^0,f,c
  1531  0005D4  D001               	goto	u118
  1532  0005D6                     u110:
  1533  0005D6  6A52               	clrf	??_checkbuttons^0,c
  1534  0005D8                     u118:
  1535  0005D8  90D8               	bcf	status,0,c
  1536  0005DA  3452               	rlcf	??_checkbuttons^0,w,c
  1537  0005DC  1A33               	xorwf	_gConPollPacket^0,f,c	;volatile
  1538                           
  1539                           ;button.c: 30:     gConPollPacket[0] ^= PORTAbits.RA6 << 1;
  1540  0005DE  ACCA               	btfss	202,6,c	;volatile
  1541  0005E0  D003               	goto	u120
  1542  0005E2  6A52               	clrf	??_checkbuttons^0,c
  1543  0005E4  2A52               	incf	??_checkbuttons^0,f,c
  1544  0005E6  D001               	goto	u128
  1545  0005E8                     u120:
  1546  0005E8  6A52               	clrf	??_checkbuttons^0,c
  1547  0005EA                     u128:
  1548  0005EA  90D8               	bcf	status,0,c
  1549  0005EC  3452               	rlcf	??_checkbuttons^0,w,c
  1550  0005EE  1A33               	xorwf	_gConPollPacket^0,f,c	;volatile
  1551                           
  1552                           ;button.c: 31:     gConPollPacket[0] ^= PORTCbits.RC1;
  1553  0005F0  A2CC               	btfss	204,1,c	;volatile
  1554  0005F2  D002               	goto	u130
  1555  0005F4  0E01               	movlw	1
  1556  0005F6  D001               	goto	u136
  1557  0005F8                     u130:
  1558  0005F8  0E00               	movlw	0
  1559  0005FA                     u136:
  1560  0005FA  1A33               	xorwf	_gConPollPacket^0,f,c	;volatile
  1561  0005FC  0012               	return		;funcret
  1562  0005FE                     __end_of_checkbuttons:
  1563                           	callstack 0
  1564                           
  1565 ;; *************** function _SYSTEM_Initialize *****************
  1566 ;; Defined at:
  1567 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;		None
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;		None
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      void 
  1574 ;; Registers used:
  1575 ;;		wreg, status,2, status,0, cstack
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 3F/3F
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1581 ;;      Params:         0       0       0       0       0       0       0       0       0
  1582 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1583 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1584 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1585 ;;Total ram usage:        0 bytes
  1586 ;; Hardware stack levels used: 1
  1587 ;; Hardware stack levels required when called: 4
  1588 ;; This function calls:
  1589 ;;		_ADCC_Initialize
  1590 ;;		_INTERRUPT_Initialize
  1591 ;;		_OSCILLATOR_Initialize
  1592 ;;		_PIN_MANAGER_Initialize
  1593 ;;		_PMD_Initialize
  1594 ;;		_SMT1_Initialize
  1595 ;; This function is called by:
  1596 ;;		_main
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           	psect	text5
  1601  0008AC                     __ptext5:
  1602                           	callstack 0
  1603  0008AC                     _SYSTEM_Initialize:
  1604                           	callstack 26
  1605                           
  1606                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  1607                           
  1608                           ;incstack = 0
  1609  0008AC  EC89  F004         	call	_INTERRUPT_Initialize	;wreg free
  1610                           
  1611                           ; BSR set to: 57
  1612                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  1613  0008B0  EC36  F004         	call	_PMD_Initialize	;wreg free
  1614                           
  1615                           ; BSR set to: 57
  1616                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1617  0008B4  EC91  F002         	call	_PIN_MANAGER_Initialize	;wreg free
  1618                           
  1619                           ; BSR set to: 58
  1620                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1621  0008B8  EC70  F004         	call	_OSCILLATOR_Initialize	;wreg free
  1622                           
  1623                           ; BSR set to: 57
  1624                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  1625  0008BC  EC32  F003         	call	_ADCC_Initialize	;wreg free
  1626                           
  1627                           ; BSR set to: 62
  1628                           ;mcc_generated_files/mcc.c: 57:     SMT1_Initialize();
  1629  0008C0  ECF5  F003         	call	_SMT1_Initialize	;wreg free
  1630                           
  1631                           ; BSR set to: 63
  1632  0008C4  0012               	return		;funcret
  1633  0008C6                     __end_of_SYSTEM_Initialize:
  1634                           	callstack 0
  1635                           
  1636 ;; *************** function _SMT1_Initialize *****************
  1637 ;; Defined at:
  1638 ;;		line 60 in file "mcc_generated_files/smt1.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;		None
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;		None
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      void 
  1645 ;; Registers used:
  1646 ;;		wreg, status,2
  1647 ;; Tracked objects:
  1648 ;;		On entry : 3F/3E
  1649 ;;		On exit  : 3F/3F
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1652 ;;      Params:         0       0       0       0       0       0       0       0       0
  1653 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1654 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1655 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1656 ;;Total ram usage:        0 bytes
  1657 ;; Hardware stack levels used: 1
  1658 ;; Hardware stack levels required when called: 2
  1659 ;; This function calls:
  1660 ;;		Nothing
  1661 ;; This function is called by:
  1662 ;;		_SYSTEM_Initialize
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           	psect	text6
  1667  0007EA                     __ptext6:
  1668                           	callstack 0
  1669  0007EA                     _SMT1_Initialize:
  1670                           	callstack 27
  1671                           
  1672                           ; BSR set to: 62
  1673                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x9C;
  1674                           
  1675                           ; BSR set to: 63
  1676                           ;incstack = 0
  1677  0007EA  0E9C               	movlw	156
  1678  0007EC  013F               	movlb	63	; () banked
  1679  0007EE  6F1E               	movwf	30,b	;volatile
  1680                           
  1681                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0xC3;
  1682  0007F0  0EC3               	movlw	195
  1683  0007F2  6F1F               	movwf	31,b	;volatile
  1684                           
  1685                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
  1686  0007F4  0E00               	movlw	0
  1687  0007F6  6F20               	movwf	32,b	;volatile
  1688                           
  1689                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x00;
  1690  0007F8  0E00               	movlw	0
  1691  0007FA  6F21               	movwf	33,b	;volatile
  1692                           
  1693                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x0;
  1694  0007FC  0E00               	movlw	0
  1695  0007FE  6F23               	movwf	35,b	;volatile
  1696                           
  1697                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
  1698  000800  0E00               	movlw	0
  1699  000802  6F22               	movwf	34,b	;volatile
  1700                           
  1701                           ; BSR set to: 63
  1702                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0xFF;
  1703  000804  691D               	setf	29,b	;volatile
  1704                           
  1705                           ; BSR set to: 63
  1706                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
  1707  000806  691C               	setf	28,b	;volatile
  1708                           
  1709                           ; BSR set to: 63
  1710                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
  1711  000808  691B               	setf	27,b	;volatile
  1712                           
  1713                           ; BSR set to: 63
  1714                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1PWAIE = 1;
  1715  00080A  0139               	movlb	57	; () banked
  1716  00080C  8F91               	bsf	145,7,b	;volatile
  1717                           
  1718                           ; BSR set to: 57
  1719                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PRAIE = 0;
  1720  00080E  9D91               	bcf	145,6,b	;volatile
  1721                           
  1722                           ; BSR set to: 57
  1723                           ;mcc_generated_files/smt1.c: 96:     SMT1CON1bits.SMT1GO = 1;
  1724  000810  013F               	movlb	63	; () banked
  1725  000812  8F1F               	bsf	31,7,b	;volatile
  1726                           
  1727                           ; BSR set to: 63
  1728  000814  0012               	return		;funcret
  1729  000816                     __end_of_SMT1_Initialize:
  1730                           	callstack 0
  1731                           
  1732 ;; *************** function _PMD_Initialize *****************
  1733 ;; Defined at:
  1734 ;;		line 74 in file "mcc_generated_files/mcc.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;		None
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;		None
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  1    wreg      void 
  1741 ;; Registers used:
  1742 ;;		wreg, status,2
  1743 ;; Tracked objects:
  1744 ;;		On entry : 3F/39
  1745 ;;		On exit  : 3F/39
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1748 ;;      Params:         0       0       0       0       0       0       0       0       0
  1749 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1750 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1751 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1752 ;;Total ram usage:        0 bytes
  1753 ;; Hardware stack levels used: 1
  1754 ;; Hardware stack levels required when called: 2
  1755 ;; This function calls:
  1756 ;;		Nothing
  1757 ;; This function is called by:
  1758 ;;		_SYSTEM_Initialize
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           	psect	text7
  1763  00086C                     __ptext7:
  1764                           	callstack 0
  1765  00086C                     _PMD_Initialize:
  1766                           	callstack 27
  1767                           
  1768                           ; BSR set to: 57
  1769                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  1770                           
  1771                           ; BSR set to: 63
  1772                           ;incstack = 0
  1773  00086C  0E00               	movlw	0
  1774  00086E  6FC0               	movwf	192,b	;volatile
  1775                           
  1776                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  1777  000870  0E00               	movlw	0
  1778  000872  6FC1               	movwf	193,b	;volatile
  1779                           
  1780                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  1781  000874  0E00               	movlw	0
  1782  000876  6FC2               	movwf	194,b	;volatile
  1783                           
  1784                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  1785  000878  0E00               	movlw	0
  1786  00087A  6FC3               	movwf	195,b	;volatile
  1787                           
  1788                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  1789  00087C  0E00               	movlw	0
  1790  00087E  6FC4               	movwf	196,b	;volatile
  1791                           
  1792                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  1793  000880  0E00               	movlw	0
  1794  000882  6FC5               	movwf	197,b	;volatile
  1795                           
  1796                           ;mcc_generated_files/mcc.c: 89:     PMD6 = 0x00;
  1797  000884  0E00               	movlw	0
  1798  000886  6FC6               	movwf	198,b	;volatile
  1799                           
  1800                           ;mcc_generated_files/mcc.c: 91:     PMD7 = 0x00;
  1801  000888  0E00               	movlw	0
  1802  00088A  6FC7               	movwf	199,b	;volatile
  1803                           
  1804                           ; BSR set to: 57
  1805  00088C  0012               	return		;funcret
  1806  00088E                     __end_of_PMD_Initialize:
  1807                           	callstack 0
  1808                           
  1809 ;; *************** function _PIN_MANAGER_Initialize *****************
  1810 ;; Defined at:
  1811 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;		None
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;		None
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      void 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2, status,0, cstack
  1820 ;; Tracked objects:
  1821 ;;		On entry : 3F/39
  1822 ;;		On exit  : 3F/3A
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1825 ;;      Params:         0       0       0       0       0       0       0       0       0
  1826 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1827 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1828 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1829 ;;Total ram usage:        0 bytes
  1830 ;; Hardware stack levels used: 1
  1831 ;; Hardware stack levels required when called: 3
  1832 ;; This function calls:
  1833 ;;		_IOCBF2_SetInterruptHandler
  1834 ;; This function is called by:
  1835 ;;		_SYSTEM_Initialize
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           	psect	text8
  1840  000522                     __ptext8:
  1841                           	callstack 0
  1842  000522                     _PIN_MANAGER_Initialize:
  1843                           	callstack 26
  1844                           
  1845                           ; BSR set to: 57
  1846                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0xF0;
  1847                           
  1848                           ; BSR set to: 57
  1849                           ;incstack = 0
  1850  000522  0EF0               	movlw	240
  1851  000524  6EBA               	movwf	186,c	;volatile
  1852                           
  1853                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x27;
  1854  000526  0E27               	movlw	39
  1855  000528  6EBB               	movwf	187,c	;volatile
  1856                           
  1857                           ; BSR set to: 57
  1858                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0xFF;
  1859  00052A  68BC               	setf	188,c	;volatile
  1860                           
  1861                           ; BSR set to: 57
  1862                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFF;
  1863  00052C  68C2               	setf	194,c	;volatile
  1864                           
  1865                           ; BSR set to: 57
  1866                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xFF;
  1867  00052E  68C3               	setf	195,c	;volatile
  1868                           
  1869                           ; BSR set to: 57
  1870                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xFF;
  1871  000530  68C4               	setf	196,c	;volatile
  1872                           
  1873                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x00;
  1874  000532  0E00               	movlw	0
  1875  000534  013A               	movlb	58	; () banked
  1876  000536  6F60               	movwf	96,b	;volatile
  1877                           
  1878                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0x00;
  1879  000538  0E00               	movlw	0
  1880  00053A  6F50               	movwf	80,b	;volatile
  1881                           
  1882                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x07;
  1883  00053C  0E07               	movlw	7
  1884  00053E  6F40               	movwf	64,b	;volatile
  1885                           
  1886                           ;mcc_generated_files/pin_manager.c: 83:     WPUE = 0x00;
  1887  000540  0E00               	movlw	0
  1888  000542  6F81               	movwf	129,b	;volatile
  1889                           
  1890                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x27;
  1891  000544  0E27               	movlw	39
  1892  000546  6F51               	movwf	81,b	;volatile
  1893                           
  1894                           ;mcc_generated_files/pin_manager.c: 85:     WPUA = 0xF0;
  1895  000548  0EF0               	movlw	240
  1896  00054A  6F41               	movwf	65,b	;volatile
  1897                           
  1898                           ; BSR set to: 58
  1899                           ;mcc_generated_files/pin_manager.c: 86:     WPUC = 0xFF;
  1900  00054C  6961               	setf	97,b	;volatile
  1901                           
  1902                           ;mcc_generated_files/pin_manager.c: 91:     RB1I2C = 0x00;
  1903  00054E  0E00               	movlw	0
  1904  000550  6F5A               	movwf	90,b	;volatile
  1905                           
  1906                           ;mcc_generated_files/pin_manager.c: 92:     RB2I2C = 0x00;
  1907  000552  0E00               	movlw	0
  1908  000554  6F5B               	movwf	91,b	;volatile
  1909                           
  1910                           ;mcc_generated_files/pin_manager.c: 93:     RC3I2C = 0x00;
  1911  000556  0E00               	movlw	0
  1912  000558  6F6A               	movwf	106,b	;volatile
  1913                           
  1914                           ;mcc_generated_files/pin_manager.c: 94:     RC4I2C = 0x00;
  1915  00055A  0E00               	movlw	0
  1916  00055C  6F6B               	movwf	107,b	;volatile
  1917                           
  1918                           ;mcc_generated_files/pin_manager.c: 99:     ODCONA = 0x00;
  1919  00055E  0E00               	movlw	0
  1920  000560  6F42               	movwf	66,b	;volatile
  1921                           
  1922                           ;mcc_generated_files/pin_manager.c: 100:     ODCONB = 0x00;
  1923  000562  0E00               	movlw	0
  1924  000564  6F52               	movwf	82,b	;volatile
  1925                           
  1926                           ;mcc_generated_files/pin_manager.c: 101:     ODCONC = 0x18;
  1927  000566  0E18               	movlw	24
  1928  000568  6F62               	movwf	98,b	;volatile
  1929                           
  1930                           ; BSR set to: 58
  1931                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONA = 0xFF;
  1932  00056A  6943               	setf	67,b	;volatile
  1933                           
  1934                           ; BSR set to: 58
  1935                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONB = 0xFF;
  1936  00056C  6953               	setf	83,b	;volatile
  1937                           
  1938                           ; BSR set to: 58
  1939                           ;mcc_generated_files/pin_manager.c: 108:     SLRCONC = 0xFF;
  1940  00056E  6963               	setf	99,b	;volatile
  1941                           
  1942                           ; BSR set to: 58
  1943                           ;mcc_generated_files/pin_manager.c: 113:     INLVLA = 0xFF;
  1944  000570  6944               	setf	68,b	;volatile
  1945                           
  1946                           ; BSR set to: 58
  1947                           ;mcc_generated_files/pin_manager.c: 114:     INLVLB = 0xFF;
  1948  000572  6954               	setf	84,b	;volatile
  1949                           
  1950                           ; BSR set to: 58
  1951                           ;mcc_generated_files/pin_manager.c: 115:     INLVLC = 0xFF;
  1952  000574  6964               	setf	100,b	;volatile
  1953                           
  1954                           ;mcc_generated_files/pin_manager.c: 116:     INLVLE = 0x08;
  1955  000576  0E08               	movlw	8
  1956  000578  6F84               	movwf	132,b	;volatile
  1957                           
  1958                           ; BSR set to: 58
  1959                           ;mcc_generated_files/pin_manager.c: 123:     IOCBFbits.IOCBF2 = 0;
  1960  00057A  9557               	bcf	87,2,b	;volatile
  1961                           
  1962                           ; BSR set to: 58
  1963                           ;mcc_generated_files/pin_manager.c: 125:     IOCBNbits.IOCBN2 = 1;
  1964  00057C  8556               	bsf	86,2,b	;volatile
  1965                           
  1966                           ; BSR set to: 58
  1967                           ;mcc_generated_files/pin_manager.c: 127:     IOCBPbits.IOCBP2 = 0;
  1968  00057E  9555               	bcf	85,2,b	;volatile
  1969                           
  1970                           ; BSR set to: 58
  1971                           ;mcc_generated_files/pin_manager.c: 132:     IOCBF2_SetInterruptHandler(IOCBF2_DefaultIn
      +                          terruptHandler);
  1972  000580  0E00               	movlw	0
  1973  000582  6E52               	movwf	IOCBF2_SetInterruptHandler@InterruptHandler^0,c
  1974  000584  0E00               	movlw	0
  1975  000586  6E53               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+1)^0,c
  1976  000588  EC84  F004         	call	_IOCBF2_SetInterruptHandler	;wreg free
  1977                           
  1978                           ; BSR set to: 58
  1979                           ;mcc_generated_files/pin_manager.c: 134:     SMT1SIGPPS = 0x0A;
  1980  00058C  0E0A               	movlw	10
  1981  00058E  6FD2               	movwf	210,b	;volatile
  1982                           
  1983                           ; BSR set to: 58
  1984  000590  0012               	return		;funcret
  1985  000592                     __end_of_PIN_MANAGER_Initialize:
  1986                           	callstack 0
  1987                           
  1988 ;; *************** function _IOCBF2_SetInterruptHandler *****************
  1989 ;; Defined at:
  1990 ;;		line 164 in file "mcc_generated_files/pin_manager.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;  InterruptHan    2    6[COMRAM] PTR FTN()void 
  1993 ;;		 -> IOCBF2_DefaultInterruptHandler(1), 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;		None
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  1    wreg      void 
  1998 ;; Registers used:
  1999 ;;		wreg, status,2, status,0
  2000 ;; Tracked objects:
  2001 ;;		On entry : 3F/3A
  2002 ;;		On exit  : 3F/3A
  2003 ;;		Unchanged: 3F/0
  2004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2005 ;;      Params:         2       0       0       0       0       0       0       0       0
  2006 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2007 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2008 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2009 ;;Total ram usage:        2 bytes
  2010 ;; Hardware stack levels used: 1
  2011 ;; Hardware stack levels required when called: 2
  2012 ;; This function calls:
  2013 ;;		Nothing
  2014 ;; This function is called by:
  2015 ;;		_PIN_MANAGER_Initialize
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           	psect	text9
  2020  000908                     __ptext9:
  2021                           	callstack 0
  2022  000908                     _IOCBF2_SetInterruptHandler:
  2023                           	callstack 26
  2024                           
  2025                           ; BSR set to: 58
  2026                           ;mcc_generated_files/pin_manager.c: 165:     IOCBF2_InterruptHandler = InterruptHandler;
  2027                           
  2028                           ; BSR set to: 58
  2029                           ;incstack = 0
  2030  000908  C052  F0DD         	movff	IOCBF2_SetInterruptHandler@InterruptHandler,_IOCBF2_InterruptHandler
  2031  00090C  C053  F0DE         	movff	IOCBF2_SetInterruptHandler@InterruptHandler+1,_IOCBF2_InterruptHandler+1
  2032                           
  2033                           ; BSR set to: 58
  2034  000910  0012               	return		;funcret
  2035  000912                     __end_of_IOCBF2_SetInterruptHandler:
  2036                           	callstack 0
  2037                           
  2038 ;; *************** function _OSCILLATOR_Initialize *****************
  2039 ;; Defined at:
  2040 ;;		line 60 in file "mcc_generated_files/mcc.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;		None
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;		None
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      void 
  2047 ;; Registers used:
  2048 ;;		wreg, status,2
  2049 ;; Tracked objects:
  2050 ;;		On entry : 3F/3A
  2051 ;;		On exit  : 3F/39
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2054 ;;      Params:         0       0       0       0       0       0       0       0       0
  2055 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2056 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2057 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2058 ;;Total ram usage:        0 bytes
  2059 ;; Hardware stack levels used: 1
  2060 ;; Hardware stack levels required when called: 2
  2061 ;; This function calls:
  2062 ;;		Nothing
  2063 ;; This function is called by:
  2064 ;;		_SYSTEM_Initialize
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	text10
  2069  0008E0                     __ptext10:
  2070                           	callstack 0
  2071  0008E0                     _OSCILLATOR_Initialize:
  2072                           	callstack 27
  2073                           
  2074                           ; BSR set to: 58
  2075                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x60;
  2076                           
  2077                           ; BSR set to: 58
  2078                           ;incstack = 0
  2079  0008E0  0E60               	movlw	96
  2080  0008E2  0139               	movlb	57	; () banked
  2081  0008E4  6FD9               	movwf	217,b	;volatile
  2082                           
  2083                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  2084  0008E6  0E00               	movlw	0
  2085  0008E8  6FDB               	movwf	219,b	;volatile
  2086                           
  2087                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  2088  0008EA  0E00               	movlw	0
  2089  0008EC  6FDD               	movwf	221,b	;volatile
  2090                           
  2091                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x08;
  2092  0008EE  0E08               	movlw	8
  2093  0008F0  6FDF               	movwf	223,b	;volatile
  2094                           
  2095                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  2096  0008F2  0E00               	movlw	0
  2097  0008F4  6FDE               	movwf	222,b	;volatile
  2098                           
  2099                           ; BSR set to: 57
  2100  0008F6  0012               	return		;funcret
  2101  0008F8                     __end_of_OSCILLATOR_Initialize:
  2102                           	callstack 0
  2103                           
  2104 ;; *************** function _INTERRUPT_Initialize *****************
  2105 ;; Defined at:
  2106 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;		None
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;		None
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      void 
  2113 ;; Registers used:
  2114 ;;		None
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 3F/39
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2120 ;;      Params:         0       0       0       0       0       0       0       0       0
  2121 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2122 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2123 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2124 ;;Total ram usage:        0 bytes
  2125 ;; Hardware stack levels used: 1
  2126 ;; Hardware stack levels required when called: 2
  2127 ;; This function calls:
  2128 ;;		Nothing
  2129 ;; This function is called by:
  2130 ;;		_SYSTEM_Initialize
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text11
  2135  000912                     __ptext11:
  2136                           	callstack 0
  2137  000912                     _INTERRUPT_Initialize:
  2138                           	callstack 27
  2139                           
  2140                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCON0bits.IPEN = 1;
  2141                           
  2142                           ; BSR set to: 57
  2143                           ;incstack = 0
  2144  000912  8AD2               	bsf	210,5,c	;volatile
  2145                           
  2146                           ;mcc_generated_files/interrupt_manager.c: 60:     IPR1bits.SMT1PWAIP = 1;
  2147  000914  0139               	movlb	57	; () banked
  2148  000916  8F81               	bsf	129,7,b	;volatile
  2149                           
  2150                           ;mcc_generated_files/interrupt_manager.c: 63:     IPR1bits.SMT1PRAIP = 0;
  2151  000918  9D81               	bcf	129,6,b	;volatile
  2152                           
  2153                           ; BSR set to: 57
  2154  00091A  0012               	return		;funcret
  2155  00091C                     __end_of_INTERRUPT_Initialize:
  2156                           	callstack 0
  2157                           
  2158 ;; *************** function _ADCC_Initialize *****************
  2159 ;; Defined at:
  2160 ;;		line 62 in file "mcc_generated_files/adcc.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;		None
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;		None
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  1    wreg      void 
  2167 ;; Registers used:
  2168 ;;		wreg, status,2
  2169 ;; Tracked objects:
  2170 ;;		On entry : 3F/39
  2171 ;;		On exit  : 3F/3E
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2174 ;;      Params:         0       0       0       0       0       0       0       0       0
  2175 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2176 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2177 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2178 ;;Total ram usage:        0 bytes
  2179 ;; Hardware stack levels used: 1
  2180 ;; Hardware stack levels required when called: 2
  2181 ;; This function calls:
  2182 ;;		Nothing
  2183 ;; This function is called by:
  2184 ;;		_SYSTEM_Initialize
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           	psect	text12
  2189  000664                     __ptext12:
  2190                           	callstack 0
  2191  000664                     _ADCC_Initialize:
  2192                           	callstack 27
  2193                           
  2194                           ; BSR set to: 57
  2195                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  2196                           
  2197                           ; BSR set to: 57
  2198                           ;incstack = 0
  2199  000664  0E00               	movlw	0
  2200  000666  013E               	movlb	62	; () banked
  2201  000668  6FDE               	movwf	222,b	;volatile
  2202                           
  2203                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  2204  00066A  0E00               	movlw	0
  2205  00066C  6FDF               	movwf	223,b	;volatile
  2206                           
  2207                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  2208  00066E  0E00               	movlw	0
  2209  000670  6FE0               	movwf	224,b	;volatile
  2210                           
  2211                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  2212  000672  0E00               	movlw	0
  2213  000674  6FE1               	movwf	225,b	;volatile
  2214                           
  2215                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  2216  000676  0E00               	movlw	0
  2217  000678  6FE4               	movwf	228,b	;volatile
  2218                           
  2219                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  2220  00067A  0E00               	movlw	0
  2221  00067C  6FE5               	movwf	229,b	;volatile
  2222                           
  2223                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
  2224  00067E  0E00               	movlw	0
  2225  000680  6FEA               	movwf	234,b	;volatile
  2226                           
  2227                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
  2228  000682  0E00               	movlw	0
  2229  000684  6FEC               	movwf	236,b	;volatile
  2230                           
  2231                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  2232  000686  0E00               	movlw	0
  2233  000688  6FF1               	movwf	241,b	;volatile
  2234                           
  2235                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x10;
  2236  00068A  0E10               	movlw	16
  2237  00068C  6FF3               	movwf	243,b	;volatile
  2238                           
  2239                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x00;
  2240  00068E  0E00               	movlw	0
  2241  000690  6FF4               	movwf	244,b	;volatile
  2242                           
  2243                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
  2244  000692  0E00               	movlw	0
  2245  000694  6FF5               	movwf	245,b	;volatile
  2246                           
  2247                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
  2248  000696  0E00               	movlw	0
  2249  000698  6FF6               	movwf	246,b	;volatile
  2250                           
  2251                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
  2252  00069A  0E00               	movlw	0
  2253  00069C  6FF7               	movwf	247,b	;volatile
  2254                           
  2255                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
  2256  00069E  0E00               	movlw	0
  2257  0006A0  6FF9               	movwf	249,b	;volatile
  2258                           
  2259                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
  2260  0006A2  0E00               	movlw	0
  2261  0006A4  6FFA               	movwf	250,b	;volatile
  2262                           
  2263                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
  2264  0006A6  0E00               	movlw	0
  2265  0006A8  6FFB               	movwf	251,b	;volatile
  2266                           
  2267                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
  2268  0006AA  0E00               	movlw	0
  2269  0006AC  6FFC               	movwf	252,b	;volatile
  2270                           
  2271                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
  2272  0006AE  0E00               	movlw	0
  2273  0006B0  6FFD               	movwf	253,b	;volatile
  2274                           
  2275                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
  2276  0006B2  0E00               	movlw	0
  2277  0006B4  6FFE               	movwf	254,b	;volatile
  2278                           
  2279                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x01;
  2280  0006B6  0E01               	movlw	1
  2281  0006B8  6FFF               	movwf	255,b	;volatile
  2282                           
  2283                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
  2284  0006BA  0E84               	movlw	132
  2285  0006BC  6FF8               	movwf	248,b	;volatile
  2286                           
  2287                           ; BSR set to: 62
  2288  0006BE  0012               	return		;funcret
  2289  0006C0                     __end_of_ADCC_Initialize:
  2290                           	callstack 0
  2291                           
  2292 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  2293 ;; Defined at:
  2294 ;;		line 70 in file "mcc_generated_files/interrupt_manager.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;		None
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;		None
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  1    wreg      void 
  2301 ;; Registers used:
  2302 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, bsr, status,2, status,0, pcl, pclath, pclatu, btemp, b
      +temp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, 
      +btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, 
      +btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, cs
      +tack
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2308 ;;      Params:         0       0       0       0       0       0       0       0       0
  2309 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2310 ;;      Temps:          6       0       0       0       0       0       0       0       0
  2311 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2312 ;;Total ram usage:        6 bytes
  2313 ;; Hardware stack levels used: 1
  2314 ;; Hardware stack levels required when called: 1
  2315 ;; This function calls:
  2316 ;;		_bitgrabber
  2317 ;; This function is called by:
  2318 ;;		Interrupt level 2
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           	psect	text13
  2323  0005FE                     __ptext13:
  2324                           	callstack 0
  2325  0005FE                     _INTERRUPT_InterruptManagerHigh:
  2326                           	callstack 26
  2327                           
  2328                           ; BSR set to: 62
  2329                           ;incstack = 0
  2330  0005FE  006F FFE8  F04C    	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  2331  000604  006F FFEC  F04D    	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  2332  00060A  006F FFD8  F04E    	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+2
  2333  000610  006F FFDC  F04F    	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+3
  2334  000616  006F FFE0  F050    	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+4
  2335  00061C  006F FFD4  F051    	movff	tablat,??_INTERRUPT_InterruptManagerHigh+5
  2336                           
  2337                           ;mcc_generated_files/interrupt_manager.c: 73:     if(PIE1bits.SMT1PWAIE == 1 && PIR1bits
      +                          .SMT1PWAIF == 1)
  2338  000622  0139               	movlb	57	; () banked
  2339  000624  BF91               	btfsc	145,7,b	;volatile
  2340                           
  2341                           ; BSR set to: 57
  2342  000626  AFA1               	btfss	161,7,b	;volatile
  2343  000628  D00A               	goto	i2l553
  2344                           
  2345                           ; BSR set to: 57
  2346                           ;mcc_generated_files/interrupt_manager.c: 74:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 75:         PIR1bits.SMT1PWAIF = 0;
  2347  00062A  9FA1               	bcf	161,7,b	;volatile
  2348                           
  2349                           ;mcc_generated_files/interrupt_manager.c: 76:         gInPulseWidth = SMT1CPWL;
  2350  00062C  006F FC60  F02E    	movff	16152,_gInPulseWidth	;volatile
  2351                           
  2352                           ;mcc_generated_files/interrupt_manager.c: 77:         if (gInStatus & (1 << 2))
  2353  000632  A42B               	btfss	_gInStatus^0,2,c	;volatile
  2354  000634  D002               	goto	i2l2255
  2355                           
  2356                           ; BSR set to: 57
  2357  000636  942B               	bcf	_gInStatus,2,c	;# 
  2358  000638  922B               	bcf	_gInStatus,1,c	;# 
  2359  00063A                     i2l2255:
  2360                           
  2361                           ;mcc_generated_files/interrupt_manager.c: 83:         bitgrabber();
  2362  00063A  EC8B  F003         	call	_bitgrabber	;wreg free
  2363  00063E                     i2l553:
  2364  00063E  0060  F147  FFF5   	movff	??_INTERRUPT_InterruptManagerHigh+5,tablat
  2365  000644  0060  F143  FFF8   	movff	??_INTERRUPT_InterruptManagerHigh+4,tblptru
  2366  00064A  0060  F13F  FFF7   	movff	??_INTERRUPT_InterruptManagerHigh+3,tblptrh
  2367  000650  0060  F13B  FFF6   	movff	??_INTERRUPT_InterruptManagerHigh+2,tblptrl
  2368  000656  0060  F137  FFFB   	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  2369  00065C  0060  F133  FFFA   	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  2370  000662  0011               	retfie		f
  2371  000664                     __end_of_INTERRUPT_InterruptManagerHigh:
  2372                           	callstack 0
  2373                           
  2374                           ;
  2375                           ; Interrupt Vector Table @ 0x8
  2376                           ;
  2377                           
  2378                           	psect	ivt0x8
  2379  000008                     __pivt0x8:
  2380                           	callstack 0
  2381  000008                     ivt0x8_base:
  2382                           	callstack 0
  2383                           
  2384                           ; high-priority vector
  2385  000008  EFFF  F002         	goto	_INTERRUPT_InterruptManagerHigh
  2386  000018                     	org	16
  2387                           
  2388                           ; low-priority vector
  2389  000018  00FF               	reset	
  2390  0000                     
  2391                           	psect	rparam
  2392  0000                     
  2393                           	psect	idloc
  2394                           
  2395                           ;Config register IDLOC0 @ 0x200000
  2396                           ;	unspecified, using default values
  2397  200000                     	org	2097152
  2398  200000  0FFF               	dw	4095
  2399                           
  2400                           ;Config register IDLOC1 @ 0x200002
  2401                           ;	unspecified, using default values
  2402  200002                     	org	2097154
  2403  200002  0FFF               	dw	4095
  2404                           
  2405                           ;Config register IDLOC2 @ 0x200004
  2406                           ;	unspecified, using default values
  2407  200004                     	org	2097156
  2408  200004  0FFF               	dw	4095
  2409                           
  2410                           ;Config register IDLOC3 @ 0x200006
  2411                           ;	unspecified, using default values
  2412  200006                     	org	2097158
  2413  200006  0FFF               	dw	4095
  2414                           
  2415                           ;Config register IDLOC4 @ 0x200008
  2416                           ;	unspecified, using default values
  2417  200008                     	org	2097160
  2418  200008  0FFF               	dw	4095
  2419                           
  2420                           ;Config register IDLOC5 @ 0x20000A
  2421                           ;	unspecified, using default values
  2422  20000A                     	org	2097162
  2423  20000A  0FFF               	dw	4095
  2424                           
  2425                           ;Config register IDLOC6 @ 0x20000C
  2426                           ;	unspecified, using default values
  2427  20000C                     	org	2097164
  2428  20000C  0FFF               	dw	4095
  2429                           
  2430                           ;Config register IDLOC7 @ 0x20000E
  2431                           ;	unspecified, using default values
  2432  20000E                     	org	2097166
  2433  20000E  0FFF               	dw	4095
  2434                           
  2435                           	psect	config
  2436                           
  2437                           ;Config register CONFIG1L @ 0x300000
  2438                           ;	External Oscillator Selection
  2439                           ;	FEXTOSC = OFF, Oscillator not enabled
  2440                           ;	Reset Oscillator Selection
  2441                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  2442  300000                     	org	3145728
  2443  300000  8C                 	db	140
  2444                           
  2445                           ;Config register CONFIG1H @ 0x300001
  2446                           ;	Clock out Enable bit
  2447                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2448                           ;	PRLOCKED One-Way Set Enable bit
  2449                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  2450                           ;	Clock Switch Enable bit
  2451                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2452                           ;	Fail-Safe Clock Monitor Enable bit
  2453                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2454  300001                     	org	3145729
  2455  300001  FF                 	db	255
  2456                           
  2457                           ;Config register CONFIG2L @ 0x300002
  2458                           ;	MCLR Enable bit
  2459                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2460                           ;	Power-up timer selection bits
  2461                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  2462                           ;	Multi-vector enable bit
  2463                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  2464                           ;	IVTLOCK bit One-way set enable bit
  2465                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  2466                           ;	Low Power BOR Enable bit
  2467                           ;	LPBOREN = OFF, ULPBOR disabled
  2468                           ;	Brown-out Reset Enable bits
  2469                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  2470  300002                     	org	3145730
  2471  300002  F7                 	db	247
  2472                           
  2473                           ;Config register CONFIG2H @ 0x300003
  2474                           ;	Brown-out Reset Voltage Selection bits
  2475                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  2476                           ;	ZCD Disable bit
  2477                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  2478                           ;	PPSLOCK bit One-Way Set Enable bit
  2479                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  2480                           ;	Stack Full/Underflow Reset Enable bit
  2481                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2482                           ;	Debugger Enable bit
  2483                           ;	DEBUG = ON, Background debugger enabled
  2484                           ;	Extended Instruction Set Enable bit
  2485                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2486  300003                     	org	3145731
  2487  300003  DF                 	db	223
  2488                           
  2489                           ;Config register CONFIG3L @ 0x300004
  2490                           ;	WDT Period selection bits
  2491                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2492                           ;	WDT operating mode
  2493                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2494  300004                     	org	3145732
  2495  300004  9F                 	db	159
  2496                           
  2497                           ;Config register CONFIG3H @ 0x300005
  2498                           ;	WDT Window Select bits
  2499                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2500                           ;	WDT input clock selector
  2501                           ;	WDTCCS = SC, Software Control
  2502  300005                     	org	3145733
  2503  300005  FF                 	db	255
  2504                           
  2505                           ;Config register CONFIG4L @ 0x300006
  2506                           ;	Boot Block Size selection bits
  2507                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2508                           ;	Boot Block enable bit
  2509                           ;	BBEN = OFF, Boot block disabled
  2510                           ;	Storage Area Flash enable bit
  2511                           ;	SAFEN = OFF, SAF disabled
  2512                           ;	Application Block write protection bit
  2513                           ;	WRTAPP = OFF, Application Block not write protected
  2514  300006                     	org	3145734
  2515  300006  FF                 	db	255
  2516                           
  2517                           ;Config register CONFIG4H @ 0x300007
  2518                           ;	Boot Block Write Protection bit
  2519                           ;	WRTB = OFF, Boot Block not write-protected
  2520                           ;	Configuration Register Write Protection bit
  2521                           ;	WRTC = OFF, Configuration registers not write-protected
  2522                           ;	Data EEPROM Write Protection bit
  2523                           ;	WRTD = OFF, Data EEPROM not write-protected
  2524                           ;	SAF Write protection bit
  2525                           ;	WRTSAF = OFF, SAF not Write Protected
  2526                           ;	Low Voltage Programming Enable bit
  2527                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  2528  300007                     	org	3145735
  2529  300007  FF                 	db	255
  2530                           
  2531                           ;Config register CONFIG5L @ 0x300008
  2532                           ;	PFM and Data EEPROM Code Protection bit
  2533                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2534  300008                     	org	3145736
  2535  300008  FF                 	db	255
  2536                           
  2537                           ;Config register CONFIG5H @ 0x300009
  2538                           ;	unspecified, using default values
  2539  300009                     	org	3145737
  2540  300009  FF                 	db	255
  2541                           tosu	equ	0x3FFF
  2542                           tosh	equ	0x3FFE
  2543                           tosl	equ	0x3FFD
  2544                           stkptr	equ	0x3FFC
  2545                           pclatu	equ	0x3FFB
  2546                           pclath	equ	0x3FFA
  2547                           pcl	equ	0x3FF9
  2548                           tblptru	equ	0x3FF8
  2549                           tblptrh	equ	0x3FF7
  2550                           tblptrl	equ	0x3FF6
  2551                           tablat	equ	0x3FF5
  2552                           prodh	equ	0x3FF4
  2553                           prodl	equ	0x3FF3
  2554                           indf0	equ	0x3FEF
  2555                           postinc0	equ	0x3FEE
  2556                           postdec0	equ	0x3FED
  2557                           preinc0	equ	0x3FEC
  2558                           plusw0	equ	0x3FEB
  2559                           fsr0h	equ	0x3FEA
  2560                           fsr0l	equ	0x3FE9
  2561                           wreg	equ	0x3FE8
  2562                           indf1	equ	0x3FE7
  2563                           postinc1	equ	0x3FE6
  2564                           postdec1	equ	0x3FE5
  2565                           preinc1	equ	0x3FE4
  2566                           plusw1	equ	0x3FE3
  2567                           fsr1h	equ	0x3FE2
  2568                           fsr1l	equ	0x3FE1
  2569                           bsr	equ	0x3FE0
  2570                           indf2	equ	0x3FDF
  2571                           postinc2	equ	0x3FDE
  2572                           postdec2	equ	0x3FDD
  2573                           preinc2	equ	0x3FDC
  2574                           plusw2	equ	0x3FDB
  2575                           fsr2h	equ	0x3FDA
  2576                           fsr2l	equ	0x3FD9
  2577                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        113
    BSS         184
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      89
    BANK0           160      6     127
    BANK1           256      0     103
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    IOCBF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCBF2_DefaultInterruptHandler(), 

    IOCBF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCBF2_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _scansticks->_slinjim
    _slinjim->___wmul
    _PIN_MANAGER_Initialize->_IOCBF2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_scansticks
    _scansticks->_slinjim

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     865
                  _SYSTEM_Initialize
                        _bytecleanup
                           _bytepush
                       _checkbuttons
                      _commandreader
                         _scansticks
 ---------------------------------------------------------------------------------
 (1) _scansticks                                           2     2      0     767
                                              4 BANK0      2     2      0
                            _slinjim
 ---------------------------------------------------------------------------------
 (2) _slinjim                                              6     2      4     767
                                             12 COMRAM     2     2      0
                                              0 BANK0      4     0      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     311
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _commandreader                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkbuttons                                         1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _bytepush                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bytecleanup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                    _ADCC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SMT1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0      98
         _IOCBF2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF2_SetInterruptHandler                           2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManagerHigh                       6     6      0       0
                                              0 COMRAM     6     6      0
                         _bitgrabber
 ---------------------------------------------------------------------------------
 (5) _bitgrabber                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF2_SetInterruptHandler
     _PMD_Initialize
     _SMT1_Initialize
   _bytecleanup
   _bytepush
   _checkbuttons
   _commandreader
   _scansticks
     _slinjim
       ___wmul

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _bitgrabber

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      45        0.0%
BITBIGSFRhhhhlh    40B      0       0      28        0.0%
BITBIGSFRllll      181      0       0      43        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      67       7       40.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      6      7F       5       79.4%
BITBIGSFRhhhhlh     96      0       0      25        0.0%
BITBIGSFRhhhhll     60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      E      59       1       93.7%
BITBIGSFRhhhhlh     4D      0       0      29        0.0%
BITBIGSFRhhhhhh     2D      0       0      20        0.0%
BITBIGSFRllhh       1E      0       0      40        0.0%
BITBIGSFRhhhhlh     15      0       0      31        0.0%
BITBIGSFRhhhhlh     12      0       0      26        0.0%
BITBIGSFRlh         11      0       0      39        0.0%
BITBIGSFRlllh        F      0       0      42        0.0%
BITBIGSFRllhl        F      0       0      41        0.0%
BITBIGSFRhhhhll      B      0       0      35        0.0%
BITBIGSFRhhhhhh      5      0       0      21        0.0%
BITBIGSFRhhhhlh      5      0       0      32        0.0%
BITBIGSFRhhhhhh      5      0       0      23        0.0%
BITBIGSFRhhhhhl      5      0       0      24        0.0%
BITBIGSFRhhhhll      4      0       0      33        0.0%
BITBIGSFRhhhhll      2      0       0      34        0.0%
BITBIGSFRhhhhlh      2      0       0      30        0.0%
BITBIGSFRhhhhhh      1      0       0      22        0.0%
BITBIGSFRhhhhlh      1      0       0      27        0.0%
BITBIGSFRhhl         1      0       0      37        0.0%
BITBIGSFRhl          1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13F      44        0.0%
DATA                 0      0     13F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Tue Jan 11 16:02:32 2022

                                        u90 05B2                                          u98 05B4  
                       ___wmul@multiplicand 0054                              ?_commandreader 004C  
                                       WREG 003FE8                                         u100 05C4  
                                       u110 05D6                                         u120 05E8  
                                       u130 05F8                                         u108 05C6  
                                       u118 05D8                                         u136 05FA  
                                       u128 05EA                                         wreg 003FE8  
                      __end_of_checkbuttons 05FE                                        l1160 026E  
                                      l1169 028C                                        l2237 05A8  
                                      l2601 02D0                                        l2611 035E  
                                      l2613 0386                                        l2607 030E  
                                      l2633 044A                                        l2625 03FE  
                                      l2609 0336                                        l2617 03B0  
                                      l2635 0474                                        l2627 0424  
                                      l2619 03D8                                        l2581 027C  
                                      l2661 07A0                                        l2583 0280  
                                      l2585 0284                                        l2593 029A  
                                      l2595 02C4                                        _LATA 003FBA  
                                      _LATB 003FBB                                        _LATC 003FBC  
                                      _PMD0 0039C0                                        _PMD1 0039C1  
                                      _PMD2 0039C2                                        _PMD3 0039C3  
                                      _PMD4 0039C4                                        _PMD5 0039C5  
                                      _PMD6 0039C6                                        _PMD7 0039C7  
                                      _WPUA 003A41                                        _WPUB 003A51  
                                      _WPUC 003A61                                        _WPUE 003A81  
                                      _main 078A                                        fsr2h 003FDA  
                                      indf2 003FDF                                        fsr1l 003FE1  
                                      fsr2l 003FD9                                        prodh 003FF4  
                                      prodl 003FF3                                        start 001A  
                              ___param_bank 000000               __end_of_OSCILLATOR_Initialize 08F8  
                              ?_bytecleanup 004C                                       _ADACT 003EFE  
                                     _ADCAP 003EF5                                       ?_main 004C  
                                     _ADCLK 003EFF                                       _ADCNT 003EEB  
                                     _ADPCH 003EF1                                       _ADREF 003EFD  
                                     _ADRPT 003EEC                     _stickIdx@joysticks$F555 0025  
                   _stickIdx@joysticks$F764 0021                                       i2l553 063E  
                                     _OSCEN 0039DD                                       _TRISA 003FC2  
                                     _TRISB 003FC3                                       _TRISC 003FC4  
                             _gLowThreshold 0049                   _tmpcenter@joysticks$F1314 0086  
                 _tmpcenter@joysticks$F1381 007C                   _tmpcenter@joysticks$F1536 0005  
                 _tmpcenter@joysticks$F1691 0072                   _tmpcenter@joysticks$F1781 0068  
                          ?_SMT1_Initialize 004C                                       pclath 003FFA  
                                     pclatu 003FFB                                       tablat 003FF5  
                           __end_of_slinjim 08AC                                       status 003FD8  
                   _tmphighm@joysticks$F553 0098                     _tmphighm@joysticks$F762 008E  
                           __initialization 0482                                __end_of_main 07BC  
             _initiatedRead@joysticks$F1318 001C               _initiatedRead@joysticks$F1540 0014  
             _initiatedRead@joysticks$F1385 0017               _initiatedRead@joysticks$F1695 0011  
             _initiatedRead@joysticks$F1785 000E                             ??_commandreader 004C  
                                    ??_main 005A                               __activetblptr 000002  
                   _tmphigh@joysticks$F1312 008A                     _tmphigh@joysticks$F1534 0009  
                   _tmphigh@joysticks$F1379 0080                     _tmphigh@joysticks$F1689 0076  
                   _tmphigh@joysticks$F1779 006C                                      _ADACCH 003EE9  
                                    _ADACCL 003EE8                                      _ADACCU 003EEA  
                                    _ADACQH 003EF4                                      _ADACQL 003EF3  
              ??_IOCBF2_SetInterruptHandler 0054                                      _ADCON0 003EF8  
                                    _ADCON1 003EF9                                      _ADCON2 003EFA  
                                    _ADCON3 003EFB                                      _ADERRH 003EE3  
                                    _ADERRL 003EE2                                      _ADLTHH 003EDF  
                                    _ADLTHL 003EDE                                      _ADRESH 003EF0  
                                    _ADRESL 003EEF                                      _ADPREH 003EF7  
                                    _ADPREL 003EF6                    _stickIdx@joysticks$F1317 001D  
                  _stickIdx@joysticks$F1384 0018                                      _ADSTAT 003EFC  
                  _stickIdx@joysticks$F1539 0015                    _stickIdx@joysticks$F1694 0012  
                  _stickIdx@joysticks$F1784 000F                                      _ADUTHH 003EE1  
                                    _ADUTHL 003EE0                                      _ANSELA 003A40  
                                    _ANSELB 003A50                                      _ANSELC 003A60  
                                    _RB1I2C 003A5A                                      _RB2I2C 003A5B  
                                    _RC3I2C 003A6A                                      _RC4I2C 003A6B  
                                    _ODCONA 003A42                                      _ODCONB 003A52  
                                    _ODCONC 003A62                                      i2l2255 063A  
                                    _INLVLA 003A44                                      _INLVLB 003A54  
                                    _INLVLC 003A64                                      _INLVLE 003A84  
                                    _OSCFRQ 0039DF                                      ___wmul 0842  
                         _sx_highMultiplier 00C9                             slinjim@dividend 00D7  
                                    _cx_low 00D5                                      _cy_low 00CF  
                                _gConOutIdx 0030                                      clear_0 04EE  
                                    clear_1 04FA                                      clear_2 0506  
                                    isa$std 000001                                      _tmplow 00A6  
                                    _sx_low 0045                                      _sy_low 003F  
                           _ADCC_Initialize 0664                              _PMD_Initialize 086C  
                              __pdataCOMRAM 0033                                      tblptrh 003FF7  
                                    tblptrl 003FF6                                      tblptru 003FF8  
                                 ??_slinjim 0058  IOCBF2_SetInterruptHandler@InterruptHandler 0052  
          ??_INTERRUPT_InterruptManagerHigh 004C             ?_INTERRUPT_InterruptManagerHigh 004C  
                         _SYSTEM_Initialize 08AC                                  __accesstop 0060  
                   __end_of__initialization 0518                          ?_SYSTEM_Initialize 004C  
                             ___rparam_used 000001                    _tmphighm@joysticks$F1315 0084  
                  _tmphighm@joysticks$F1382 007A                    _tmphighm@joysticks$F1537 0003  
                  _tmphighm@joysticks$F1692 0070                    _tmphighm@joysticks$F1782 0066  
                  _tmpcenter@joysticks$F552 009A                    _tmpcenter@joysticks$F761 0090  
                            __pcstackCOMRAM 004C                                _checkbuttons 0592  
                              __pidataBANK0 07BC                                __pidataBANK1 0816  
                       ??_SYSTEM_Initialize 0054                              _gConBitCounter 004B  
                          _sx_lowMultiplier 00C7                      __end_of_PMD_Initialize 088E  
                 __end_of_SYSTEM_Initialize 08C6                                  __pbssBANK0 0060  
                                __pbssBANK1 0100                              _gInCommandByte 002D  
                                   IVTBASEH 003FD6                                     IVTBASEL 003FD5  
                                   IVTBASEU 003FD7                               _initiatedRead 0029  
                                   ?___wmul 0052                     __end_of_ADCC_Initialize 06C0  
                                   _ADFLTRH 003EE7                                     _ADFLTRL 003EE6  
                                   _ADPREVH 003EEE                                     _ADPREVL 003EED  
                                _bitgrabber 0716                                     _ADSTPTH 003EE5  
                                   _ADSTPTL 003EE4                             ?_PMD_Initialize 004C  
                          _gCommandPollMask 0047                                     _OSCCON1 0039D9  
                                   _OSCCON3 0039DB          __end_of_IOCBF2_SetInterruptHandler 0912  
                _IOCBF2_SetInterruptHandler 0908                                     _SMT1CLK 003F21  
                                   _OSCTUNE 0039DE                                     _SMT1CPR 003F15  
                                   _SMT1CPW 003F18                                     _SMT1SIG 003F22  
                                   _SMT1PRH 003F1C                                     _SMT1PRL 003F1B  
                                   _SMT1PRU 003F1D                                     _SMT1TMR 003F12  
                                   _SMT1WIN 003F23                                     _SLRCONA 003A43  
                                   _SLRCONB 003A53                                     _SLRCONC 003A63  
                                 ?_bytepush 004C                                     __Hparam 0000  
                                   __Lparam 0000                                     _a_value 00B9  
                                   _b_value 00B7                                     __pcinit 0482  
                                   __ramtop 0800                           _cy_highMultiplier 00BD  
                                   __ptext0 078A                                     __ptext1 0252  
                                   __ptext2 088E                                     __ptext3 0842  
                                   __ptext4 0592                                     __ptext5 08AC  
                                   __ptext6 07EA                                     __ptext7 086C  
                                   __ptext8 0522                                     __ptext9 0908  
                            _gConPollPacket 0033                                     _cx_high 00D1  
                        _gCommandOriginMask 0048                                     _cy_high 00CB  
                     _OSCILLATOR_Initialize 08E0                             _gInBitBufferIdx 002F  
                  _clearRead@joysticks$F557 0023                    _clearRead@joysticks$F766 001F  
                               _gConOutByte 0032                    ??_PIN_MANAGER_Initialize 0054  
                               _SettingData 013C                                   _IOCBFbits 003A57  
                                 _IOCBNbits 003A56                                   _IOCBPbits 003A55  
                                   _testLow 0019                                     _slinjim 088E  
                                   _tmphigh 00A8                                     _sx_high 0041  
                                   _sy_high 003B                                     _tmplowm 00A0  
                                _scansticks 0252                   _clearRead@joysticks$F1319 001B  
                 _clearRead@joysticks$F1541 0013                   _clearRead@joysticks$F1386 0016  
                 _clearRead@joysticks$F1696 0010                   _clearRead@joysticks$F1786 000D  
                      end_of_initialization 0518                               __Lmediumconst 0000  
                                ??_bytepush 004C                                     postdec1 003FE5  
                                   postinc0 003FEE                            ?_ADCC_Initialize 004C  
                               ?_bitgrabber 004C                                   _PORTAbits 003FCA  
                                 _PORTCbits 003FCC                           _gConProbeResponse 00B4  
                   _IOCBF2_InterruptHandler 00DD                __end_of_INTERRUPT_Initialize 091C  
                            __end_of___wmul 086C                            _sy_lowMultiplier 00C3  
                             __pidataCOMRAM 08C6                      ?_OSCILLATOR_Initialize 004C  
                       start_initialization 0482                                 ?_scansticks 004C  
                                ivt0x8_base 0008                      _tmphigh@joysticks$F550 009E  
                    _tmphigh@joysticks$F759 0094                            ??_PMD_Initialize 0052  
                                 _gInPacket 0060                                    ??___wmul 0056  
                          _cx_lowMultiplier 00BF                               _gInBitCounter 004A  
                               __pdataBANK0 00AA                                 __pdataBANK1 013C  
                                 _gInStatus 002B                           ??_SMT1_Initialize 0052  
                             ??_bytecleanup 004C                                 __pbssCOMRAM 0001  
                             __pcstackBANK0 00D7                 ?_IOCBF2_SetInterruptHandler 0052  
                                 __pnvBANK0 00DD                                   _clearRead 0028  
                    _PIN_MANAGER_Initialize 0522                               _gConByteCount 0031  
                               _bit_counter 0026                                   _cx_center 00D3  
                                 _cy_center 00CD                                    ?_slinjim 00D7  
                      _INTERRUPT_Initialize 0912                              ___wmul@product 0056  
                                  _IPR1bits 003981                                    _PIE1bits 003991  
                                  _PIR1bits 0039A1                                    _SMT1CON0 003F1E  
                                  _SMT1CON1 003F1F                                    _SMT1CPWL 003F18  
                                  _SMT1STAT 003F20                                ??_bitgrabber 004C  
                                 _testcount 0022                                   _testpulse 001E  
                         _sy_highMultiplier 00C5                                   _tmpcenter 00A4  
                                _ADCON0bits 003EF8                                   _sx_center 0043  
                         ___wmul@multiplier 0052                                   _sy_center 003D  
                              _SMT1CON1bits 003F1F                                 _INTCON0bits 003FD2  
                                 copy_data0 0496                                   copy_data1 04B8  
                                 copy_data2 04DA                       ?_INTERRUPT_Initialize 004C  
              _initiatedRead@joysticks$F556 0024                _initiatedRead@joysticks$F765 0020  
                                  __Hrparam 0000                               _gInPulseWidth 002E  
                                  __Lrparam 0000                               ?_checkbuttons 004C  
                              _gInBitBuffer 0100                     ??_OSCILLATOR_Initialize 0052  
                                  _adc_read 000B                                 _bytecleanup 0754  
                        _gConOriginResponse 00AA                                    __pivt0x8 0008  
                                  __ptext10 08E0                                    __ptext11 0912  
                                  __ptext12 0664                                    __ptext13 05FE  
                              ??_scansticks 00DB                                _gInPacketIdx 002C  
                                  _bytepush 001E                             _SMT1_Initialize 07EA  
                         slinjim@conversion 0058                              ??_checkbuttons 0052  
                                  _testHigh 001A                                    isa$xinst 000000  
                                  _stickIdx 002A                           _cx_highMultiplier 00C1  
                                  _tmphighm 00A2                            _cy_lowMultiplier 00BB  
                        __end_of_scansticks 0482                      ??_INTERRUPT_Initialize 0052  
                          _controller_phase 0027                                    intlevel2 0000  
                   ?_PIN_MANAGER_Initialize 004C                     _tmplowm@joysticks$F1316 0082  
                   _tmplowm@joysticks$F1383 0078                     _tmplowm@joysticks$F1538 0001  
                   _tmplowm@joysticks$F1693 006E                     _tmplowm@joysticks$F1783 0064  
                                _SMT1SIGPPS 003AD2      __end_of_INTERRUPT_InterruptManagerHigh 0664  
            _INTERRUPT_InterruptManagerHigh 05FE                               _commandreader 06C0  
            _IOCBF2_DefaultInterruptHandler 000000                      _tmplowm@joysticks$F554 0096  
                    _tmplowm@joysticks$F763 008C                           slinjim@multiplier 00D9  
                   __end_of_SMT1_Initialize 0816              __end_of_PIN_MANAGER_Initialize 0592  
                         ??_ADCC_Initialize 0052                      _tmplow@joysticks$F1313 0088  
                    _tmplow@joysticks$F1380 007E                      _tmplow@joysticks$F1535 0007  
                     _tmplow@joysticks$F551 009C                      _tmplow@joysticks$F1690 0074  
                    _tmplow@joysticks$F1780 006A                       _tmplow@joysticks$F760 0092  
