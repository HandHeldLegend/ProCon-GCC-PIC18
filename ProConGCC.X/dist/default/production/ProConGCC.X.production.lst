

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed Jan 12 14:48:34 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og9 
     1                           	processor	18F25K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 05/05/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F25K42 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73 ;; Function _IOCBF2_DefaultInterruptHandler is unused but had its address taken
    74  0000                     
    75                           	psect	idataCOMRAM
    76  00094E                     __pidataCOMRAM:
    77                           	callstack 0
    78                           
    79                           ;initializer for _gConPollPacket
    80  00094E  00                 	db	0
    81  00094F  00                 	db	0
    82  000950  83                 	db	131
    83  000951  83                 	db	131
    84  000952  7D                 	db	125
    85  000953  7D                 	db	125
    86  000954  00                 	db	0
    87  000955  00                 	db	0
    88                           
    89                           ;initializer for _sy_high
    90  000956  018E               	dw	398
    91                           
    92                           ;initializer for _sy_center
    93  000958  00FC               	dw	252
    94                           
    95                           ;initializer for _sy_low
    96  00095A  008C               	dw	140
    97                           
    98                           ;initializer for _sx_high
    99  00095C  0181               	dw	385
   100                           
   101                           ;initializer for _sx_center
   102  00095E  00FE               	dw	254
   103                           
   104                           ;initializer for _sx_low
   105  000960  0083               	dw	131
   106                           
   107                           ;initializer for _gCommandPollMask
   108  000962  BF                 	db	191
   109                           
   110                           ;initializer for _gCommandOriginMask
   111  000963  BE                 	db	190
   112                           
   113                           ;initializer for _gLowThreshold
   114  000964  1A                 	db	26
   115                           
   116                           ;initializer for _gInBitCounter
   117  000965  08                 	db	8
   118                           
   119                           ;initializer for _gConBitCounter
   120  000966  08                 	db	8
   121                           
   122                           	psect	idataBANK0
   123  000844                     __pidataBANK0:
   124                           	callstack 0
   125                           
   126                           ;initializer for _gConOriginResponse
   127  000844  00                 	db	0
   128  000845  80                 	db	128
   129  000846  80                 	db	128
   130  000847  80                 	db	128
   131  000848  80                 	db	128
   132  000849  80                 	db	128
   133  00084A  00                 	db	0
   134  00084B  00                 	db	0
   135  00084C  02                 	db	2
   136  00084D  02                 	db	2
   137                           
   138                           ;initializer for _gConProbeResponse
   139  00084E  09                 	db	9
   140  00084F  00                 	db	0
   141  000850  03                 	db	3
   142                           
   143                           ;initializer for _b_value
   144  000851  0017               	dw	23
   145                           
   146                           ;initializer for _a_value
   147  000853  015E               	dw	350
   148                           
   149                           ;initializer for _cy_lowMultiplier
   150  000855  00C9               	dw	201
   151                           
   152                           ;initializer for _cy_highMultiplier
   153  000857  00C3               	dw	195
   154                           
   155                           ;initializer for _cx_lowMultiplier
   156  000859  00B1               	dw	177
   157                           
   158                           ;initializer for _cx_highMultiplier
   159  00085B  0101               	dw	257
   160                           
   161                           ;initializer for _sy_lowMultiplier
   162  00085D  00E4               	dw	228
   163                           
   164                           ;initializer for _sy_highMultiplier
   165  00085F  00AF               	dw	175
   166                           
   167                           ;initializer for _sx_lowMultiplier
   168  000861  00E8               	dw	232
   169                           
   170                           ;initializer for _sx_highMultiplier
   171  000863  00C8               	dw	200
   172                           
   173                           ;initializer for _cy_high
   174  000865  0181               	dw	385
   175                           
   176                           ;initializer for _cy_center
   177  000867  00FE               	dw	254
   178                           
   179                           ;initializer for _cy_low
   180  000869  007F               	dw	127
   181                           
   182                           ;initializer for _cx_high
   183  00086B  0163               	dw	355
   184                           
   185                           ;initializer for _cx_center
   186  00086D  00FC               	dw	252
   187                           
   188                           ;initializer for _cx_low
   189  00086F  006C               	dw	108
   190                           
   191                           	psect	idataBANK1
   192  00089E                     __pidataBANK1:
   193                           	callstack 0
   194                           
   195                           ;initializer for _SettingData
   196  00089E  0000               	dw	0
   197  0008A0  0083               	dw	131
   198  0008A2  00FE               	dw	254
   199  0008A4  0181               	dw	385
   200  0008A6  008C               	dw	140
   201  0008A8  00FC               	dw	252
   202  0008AA  018E               	dw	398
   203  0008AC  006C               	dw	108
   204  0008AE  00FC               	dw	252
   205  0008B0  0163               	dw	355
   206  0008B2  007F               	dw	127
   207  0008B4  00FE               	dw	254
   208  0008B6  0181               	dw	385
   209  0008B8  00C8               	dw	200
   210  0008BA  00E8               	dw	232
   211  0008BC  00AF               	dw	175
   212  0008BE  00E4               	dw	228
   213  0008C0  0101               	dw	257
   214  0008C2  00B1               	dw	177
   215  0008C4  00C3               	dw	195
   216  0008C6  00C9               	dw	201
   217  0008C8  00                 	db	0
   218  0000                     _PORTBbits	set	16331
   219  0000                     _ADERRL	set	16098
   220  0000                     _ADERRH	set	16099
   221  0000                     _ADPREVL	set	16109
   222  0000                     _ADPREVH	set	16110
   223  0000                     _ADFLTRL	set	16102
   224  0000                     _ADFLTRH	set	16103
   225  0000                     _ADACCL	set	16104
   226  0000                     _ADACCH	set	16105
   227  0000                     _ADCNT	set	16107
   228  0000                     _ADRESL	set	16111
   229  0000                     _ADRESH	set	16112
   230  0000                     _ADCON0	set	16120
   231  0000                     _ADCON1	set	16121
   232  0000                     _ADPREH	set	16119
   233  0000                     _ADPREL	set	16118
   234  0000                     _ADCAP	set	16117
   235  0000                     _ADACQH	set	16116
   236  0000                     _ADPCH	set	16113
   237  0000                     _ADRPT	set	16108
   238  0000                     _ADACCU	set	16106
   239  0000                     _ADSTPTH	set	16101
   240  0000                     _ADSTPTL	set	16100
   241  0000                     _ADUTHH	set	16097
   242  0000                     _ADUTHL	set	16096
   243  0000                     _ADLTHH	set	16095
   244  0000                     _SMT1SIG	set	16162
   245  0000                     _SMT1WIN	set	16163
   246  0000                     _SMT1CLK	set	16161
   247  0000                     _SMT1STAT	set	16160
   248  0000                     _SMT1CON1	set	16159
   249  0000                     _IOCBPbits	set	14933
   250  0000                     _IOCBNbits	set	14934
   251  0000                     _IOCBFbits	set	14935
   252  0000                     _INLVLB	set	14932
   253  0000                     _SLRCONB	set	14931
   254  0000                     _ODCONB	set	14930
   255  0000                     _RB1I2C	set	14938
   256  0000                     _WPUB	set	14929
   257  0000                     _OSCTUNE	set	14814
   258  0000                     _OSCFRQ	set	14815
   259                           
   260                           	psect	nvBANK0
   261  0000DD                     __pnvBANK0:
   262                           	callstack 0
   263  0000DD                     _IOCBF2_InterruptHandler:
   264                           	callstack 0
   265  0000DD                     	ds	2
   266  0000                     _ADCON0bits	set	16120
   267  0000                     _SMT1CPWL	set	16152
   268  0000                     _SMT1CON1bits	set	16159
   269  0000                     _IPR1bits	set	14721
   270  0000                     _PIE1bits	set	14737
   271  0000                     _PMD0	set	14784
   272  0000                     _OSCCON1	set	14809
   273  0000                     _OSCCON3	set	14811
   274  0000                     _OSCEN	set	14813
   275  0000                     _ANSELA	set	14912
   276  0000                     _ANSELB	set	14928
   277  0000                     _ANSELC	set	14944
   278  0000                     _LATA	set	16314
   279  0000                     _PMD7	set	14791
   280  0000                     _PMD6	set	14790
   281  0000                     _PMD5	set	14789
   282  0000                     _PMD4	set	14788
   283  0000                     _PMD3	set	14787
   284  0000                     _PMD2	set	14786
   285  0000                     _PMD1	set	14785
   286  0000                     _TRISA	set	16322
   287  0000                     _LATC	set	16316
   288  0000                     _LATB	set	16315
   289  0000                     _PORTAbits	set	16330
   290  0000                     _PORTCbits	set	16332
   291  0000                     _INTCON0bits	set	16338
   292  0000                     _TRISC	set	16324
   293  0000                     _TRISB	set	16323
   294  0000                     _INLVLC	set	14948
   295  0000                     _SLRCONC	set	14947
   296  0000                     _ODCONC	set	14946
   297  0000                     _RC3I2C	set	14954
   298  0000                     _WPUC	set	14945
   299  0000                     _WPUE	set	14977
   300  0000                     _INLVLA	set	14916
   301  0000                     _SLRCONA	set	14915
   302  0000                     _ODCONA	set	14914
   303  0000                     _WPUA	set	14913
   304  0000                     _INLVLE	set	14980
   305  0000                     _RB2I2C	set	14939
   306  0000                     _RC4I2C	set	14955
   307  0000                     _SMT1SIGPPS	set	15058
   308  0000                     _SMT1TMR	set	16146
   309  0000                     _SMT1CPR	set	16149
   310  0000                     _SMT1CPW	set	16152
   311  0000                     _ADLTHL	set	16094
   312  0000                     _SMT1PRL	set	16155
   313  0000                     _SMT1PRH	set	16156
   314  0000                     _SMT1PRU	set	16157
   315  0000                     _SMT1CON0	set	16158
   316  0000                     _PIR1bits	set	14753
   317  0000                     _ADACQL	set	16115
   318  0000                     _ADCLK	set	16127
   319  0000                     _ADACT	set	16126
   320  0000                     _ADREF	set	16125
   321  0000                     _ADSTAT	set	16124
   322  0000                     _ADCON3	set	16123
   323  0000                     _ADCON2	set	16122
   324                           
   325                           ; #config settings
   326                           
   327                           	psect	cinit
   328  000576                     __pcinit:
   329                           	callstack 0
   330  000576                     start_initialization:
   331                           	callstack 0
   332  000576                     __initialization:
   333                           	callstack 0
   334                           
   335                           ; Initialize objects allocated to BANK1 (43 bytes)
   336                           ; load TBLPTR registers with __pidataBANK1
   337  000576  0E9E               	movlw	low __pidataBANK1
   338  000578  6EF6               	movwf	tblptrl,c
   339  00057A  0E08               	movlw	high __pidataBANK1
   340  00057C  6EF7               	movwf	tblptrh,c
   341  00057E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   342  000580  6EF8               	movwf	tblptru,c
   343  000582  EE00  F13C         	lfsr	0,__pdataBANK1
   344  000586  EE10 F02B          	lfsr	1,43
   345  00058A                     copy_data0:
   346  00058A  0009               	tblrd		*+
   347  00058C  006F FFD7 FFEE     	movff	tablat,postinc0
   348  000592  50E5               	movf	postdec1,w,c
   349  000594  50E1               	movf	fsr1l,w,c
   350  000596  E1F9               	bnz	copy_data0
   351                           
   352                           ; Initialize objects allocated to BANK0 (45 bytes)
   353                           ; load TBLPTR registers with __pidataBANK0
   354  000598  0E44               	movlw	low __pidataBANK0
   355  00059A  6EF6               	movwf	tblptrl,c
   356  00059C  0E08               	movlw	high __pidataBANK0
   357  00059E  6EF7               	movwf	tblptrh,c
   358  0005A0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   359  0005A2  6EF8               	movwf	tblptru,c
   360  0005A4  EE00  F0AA         	lfsr	0,__pdataBANK0
   361  0005A8  EE10 F02D          	lfsr	1,45
   362  0005AC                     copy_data1:
   363  0005AC  0009               	tblrd		*+
   364  0005AE  006F FFD7 FFEE     	movff	tablat,postinc0
   365  0005B4  50E5               	movf	postdec1,w,c
   366  0005B6  50E1               	movf	fsr1l,w,c
   367  0005B8  E1F9               	bnz	copy_data1
   368                           
   369                           ; Initialize objects allocated to COMRAM (25 bytes)
   370                           ; load TBLPTR registers with __pidataCOMRAM
   371  0005BA  0E4E               	movlw	low __pidataCOMRAM
   372  0005BC  6EF6               	movwf	tblptrl,c
   373  0005BE  0E09               	movlw	high __pidataCOMRAM
   374  0005C0  6EF7               	movwf	tblptrh,c
   375  0005C2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   376  0005C4  6EF8               	movwf	tblptru,c
   377  0005C6  EE00  F033         	lfsr	0,__pdataCOMRAM
   378  0005CA  EE10 F019          	lfsr	1,25
   379  0005CE                     copy_data2:
   380  0005CE  0009               	tblrd		*+
   381  0005D0  006F FFD7 FFEE     	movff	tablat,postinc0
   382  0005D6  50E5               	movf	postdec1,w,c
   383  0005D8  50E1               	movf	fsr1l,w,c
   384  0005DA  E1F9               	bnz	copy_data2
   385                           
   386                           ; Clear objects allocated to BANK1 (60 bytes)
   387  0005DC  EE00  F100         	lfsr	0,__pbssBANK1
   388  0005E0  0E3C               	movlw	60
   389  0005E2                     clear_0:
   390  0005E2  6AEE               	clrf	postinc0,c
   391  0005E4  06E8               	decf	wreg,f,c
   392  0005E6  E1FD               	bnz	clear_0
   393                           
   394                           ; Clear objects allocated to BANK0 (74 bytes)
   395  0005E8  EE00  F060         	lfsr	0,__pbssBANK0
   396  0005EC  0E4A               	movlw	74
   397  0005EE                     clear_1:
   398  0005EE  6AEE               	clrf	postinc0,c
   399  0005F0  06E8               	decf	wreg,f,c
   400  0005F2  E1FD               	bnz	clear_1
   401                           
   402                           ; Clear objects allocated to COMRAM (50 bytes)
   403  0005F4  EE00  F001         	lfsr	0,__pbssCOMRAM
   404  0005F8  0E32               	movlw	50
   405  0005FA                     clear_2:
   406  0005FA  6AEE               	clrf	postinc0,c
   407  0005FC  06E8               	decf	wreg,f,c
   408  0005FE  E1FD               	bnz	clear_2
   409                           
   410                           ;
   411                           ; Setup IVTBASE
   412                           ;
   413  000600  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   414  000602  6ED5               	movwf	213,c
   415  000604  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   416  000606  6ED6               	movwf	214,c
   417  000608  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   418  00060A  6ED7               	movwf	215,c
   419  00060C                     end_of_initialization:
   420                           	callstack 0
   421  00060C                     __end_of__initialization:
   422                           	callstack 0
   423  00060C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   424  00060E  6EF8               	movwf	tblptru,c
   425  000610  0100               	movlb	0
   426  000612  EF09  F004         	goto	_main	;jump to C main() function
   427                           
   428                           	psect	bssCOMRAM
   429  000001                     __pbssCOMRAM:
   430                           	callstack 0
   431  000001                     _tmplowm@joysticks$F1635:
   432                           	callstack 0
   433  000001                     	ds	2
   434  000003                     _tmphighm@joysticks$F1634:
   435                           	callstack 0
   436  000003                     	ds	2
   437  000005                     _tmpcenter@joysticks$F1633:
   438                           	callstack 0
   439  000005                     	ds	2
   440  000007                     _tmplow@joysticks$F1632:
   441                           	callstack 0
   442  000007                     	ds	2
   443  000009                     _tmphigh@joysticks$F1631:
   444                           	callstack 0
   445  000009                     	ds	2
   446  00000B                     _adc_read:
   447                           	callstack 0
   448  00000B                     	ds	2
   449  00000D                     	ds	1
   450  00000E                     	ds	1
   451  00000F                     	ds	1
   452  000010                     	ds	1
   453  000011                     	ds	1
   454  000012                     	ds	1
   455  000013                     _clearRead@joysticks$F1638:
   456                           	callstack 0
   457  000013                     	ds	1
   458  000014                     _initiatedRead@joysticks$F1637:
   459                           	callstack 0
   460  000014                     	ds	1
   461  000015                     _stickIdx@joysticks$F1636:
   462                           	callstack 0
   463  000015                     	ds	1
   464  000016                     	ds	1
   465  000017                     	ds	1
   466  000018                     	ds	1
   467  000019                     _testLow:
   468                           	callstack 0
   469  000019                     	ds	1
   470  00001A                     _testHigh:
   471                           	callstack 0
   472  00001A                     	ds	1
   473  00001B                     	ds	1
   474  00001C                     	ds	1
   475  00001D                     	ds	1
   476  00001E                     _testpulse:
   477                           	callstack 0
   478  00001E                     	ds	1
   479  00001F                     	ds	1
   480  000020                     	ds	1
   481  000021                     	ds	1
   482  000022                     _testcount:
   483                           	callstack 0
   484  000022                     	ds	1
   485  000023                     	ds	1
   486  000024                     	ds	1
   487  000025                     	ds	1
   488  000026                     _bit_counter:
   489                           	callstack 0
   490  000026                     	ds	1
   491  000027                     _controller_phase:
   492                           	callstack 0
   493  000027                     	ds	1
   494  000028                     	ds	1
   495  000029                     	ds	1
   496  00002A                     	ds	1
   497  00002B                     _gInStatus:
   498                           	callstack 0
   499  00002B                     	ds	1
   500  00002C                     _gInPacketIdx:
   501                           	callstack 0
   502  00002C                     	ds	1
   503  00002D                     _gInCommandByte:
   504                           	callstack 0
   505  00002D                     	ds	1
   506  00002E                     _gInPulseWidth:
   507                           	callstack 0
   508  00002E                     	ds	1
   509  00002F                     _gInBitBufferIdx:
   510                           	callstack 0
   511  00002F                     	ds	1
   512  000030                     _gConOutIdx:
   513                           	callstack 0
   514  000030                     	ds	1
   515  000031                     _gConByteCount:
   516                           	callstack 0
   517  000031                     	ds	1
   518  000032                     _gConOutByte:
   519                           	callstack 0
   520  000032                     	ds	1
   521                           
   522                           	psect	dataCOMRAM
   523  000033                     __pdataCOMRAM:
   524                           	callstack 0
   525  000033                     _gConPollPacket:
   526                           	callstack 0
   527  000033                     	ds	8
   528  00003B                     _sy_high:
   529                           	callstack 0
   530  00003B                     	ds	2
   531  00003D                     _sy_center:
   532                           	callstack 0
   533  00003D                     	ds	2
   534  00003F                     _sy_low:
   535                           	callstack 0
   536  00003F                     	ds	2
   537  000041                     _sx_high:
   538                           	callstack 0
   539  000041                     	ds	2
   540  000043                     _sx_center:
   541                           	callstack 0
   542  000043                     	ds	2
   543  000045                     _sx_low:
   544                           	callstack 0
   545  000045                     	ds	2
   546  000047                     _gCommandPollMask:
   547                           	callstack 0
   548  000047                     	ds	1
   549  000048                     _gCommandOriginMask:
   550                           	callstack 0
   551  000048                     	ds	1
   552  000049                     _gLowThreshold:
   553                           	callstack 0
   554  000049                     	ds	1
   555  00004A                     _gInBitCounter:
   556                           	callstack 0
   557  00004A                     	ds	1
   558  00004B                     _gConBitCounter:
   559                           	callstack 0
   560  00004B                     	ds	1
   561                           
   562                           	psect	bssBANK0
   563  000060                     __pbssBANK0:
   564                           	callstack 0
   565  000060                     _gInPacket:
   566                           	callstack 0
   567  000060                     	ds	4
   568  000064                     	ds	2
   569  000066                     	ds	2
   570  000068                     	ds	2
   571  00006A                     	ds	2
   572  00006C                     	ds	2
   573  00006E                     	ds	2
   574  000070                     	ds	2
   575  000072                     	ds	2
   576  000074                     	ds	2
   577  000076                     	ds	2
   578  000078                     	ds	2
   579  00007A                     	ds	2
   580  00007C                     	ds	2
   581  00007E                     	ds	2
   582  000080                     	ds	2
   583  000082                     	ds	2
   584  000084                     	ds	2
   585  000086                     	ds	2
   586  000088                     	ds	2
   587  00008A                     	ds	2
   588  00008C                     	ds	2
   589  00008E                     	ds	2
   590  000090                     	ds	2
   591  000092                     	ds	2
   592  000094                     	ds	2
   593  000096                     	ds	2
   594  000098                     	ds	2
   595  00009A                     	ds	2
   596  00009C                     	ds	2
   597  00009E                     	ds	2
   598  0000A0                     	ds	2
   599  0000A2                     	ds	2
   600  0000A4                     	ds	2
   601  0000A6                     	ds	2
   602  0000A8                     	ds	2
   603                           
   604                           	psect	dataBANK0
   605  0000AA                     __pdataBANK0:
   606                           	callstack 0
   607  0000AA                     _gConOriginResponse:
   608                           	callstack 0
   609  0000AA                     	ds	10
   610  0000B4                     _gConProbeResponse:
   611                           	callstack 0
   612  0000B4                     	ds	3
   613  0000B7                     _b_value:
   614                           	callstack 0
   615  0000B7                     	ds	2
   616  0000B9                     _a_value:
   617                           	callstack 0
   618  0000B9                     	ds	2
   619  0000BB                     _cy_lowMultiplier:
   620                           	callstack 0
   621  0000BB                     	ds	2
   622  0000BD                     _cy_highMultiplier:
   623                           	callstack 0
   624  0000BD                     	ds	2
   625  0000BF                     _cx_lowMultiplier:
   626                           	callstack 0
   627  0000BF                     	ds	2
   628  0000C1                     _cx_highMultiplier:
   629                           	callstack 0
   630  0000C1                     	ds	2
   631  0000C3                     _sy_lowMultiplier:
   632                           	callstack 0
   633  0000C3                     	ds	2
   634  0000C5                     _sy_highMultiplier:
   635                           	callstack 0
   636  0000C5                     	ds	2
   637  0000C7                     _sx_lowMultiplier:
   638                           	callstack 0
   639  0000C7                     	ds	2
   640  0000C9                     _sx_highMultiplier:
   641                           	callstack 0
   642  0000C9                     	ds	2
   643  0000CB                     _cy_high:
   644                           	callstack 0
   645  0000CB                     	ds	2
   646  0000CD                     _cy_center:
   647                           	callstack 0
   648  0000CD                     	ds	2
   649  0000CF                     _cy_low:
   650                           	callstack 0
   651  0000CF                     	ds	2
   652  0000D1                     _cx_high:
   653                           	callstack 0
   654  0000D1                     	ds	2
   655  0000D3                     _cx_center:
   656                           	callstack 0
   657  0000D3                     	ds	2
   658  0000D5                     _cx_low:
   659                           	callstack 0
   660  0000D5                     	ds	2
   661                           
   662                           	psect	bssBANK1
   663  000100                     __pbssBANK1:
   664                           	callstack 0
   665  000100                     _gInBitBuffer:
   666                           	callstack 0
   667  000100                     	ds	60
   668                           
   669                           	psect	dataBANK1
   670  00013C                     __pdataBANK1:
   671                           	callstack 0
   672  00013C                     _SettingData:
   673                           	callstack 0
   674  00013C                     	ds	43
   675                           
   676                           	psect	cstackBANK0
   677  0000D7                     __pcstackBANK0:
   678                           	callstack 0
   679  0000D7                     slinjim@dividend:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x0
   683  0000D7                     	ds	2
   684  0000D9                     slinjim@multiplier:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x2
   688  0000D9                     	ds	2
   689  0000DB                     ??_scansticks:
   690                           
   691                           ; 1 bytes @ 0x4
   692  0000DB                     	ds	2
   693                           
   694                           	psect	cstackCOMRAM
   695  00004C                     __pcstackCOMRAM:
   696                           	callstack 0
   697  00004C                     ??_INTERRUPT_InterruptManagerHigh:
   698  00004C                     
   699                           ; 1 bytes @ 0x0
   700  00004C                     	ds	6
   701  000052                     ??_checkbuttons:
   702  000052                     ?___wmul:
   703                           	callstack 0
   704  000052                     IOCBF2_SetInterruptHandler@InterruptHandler:
   705                           	callstack 0
   706  000052                     ___wmul@multiplier:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x6
   710  000052                     	ds	2
   711  000054                     ___wmul@multiplicand:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x8
   715  000054                     	ds	2
   716  000056                     ___wmul@product:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0xA
   720  000056                     	ds	2
   721  000058                     slinjim@conversion:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0xC
   725  000058                     	ds	2
   726  00005A                     
   727                           ; 1 bytes @ 0xE
   728 ;;
   729 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   730 ;;
   731 ;; *************** function _main *****************
   732 ;; Defined at:
   733 ;;		line 70 in file "main.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;		None
   736 ;; Auto vars:     Size  Location     Type
   737 ;;		None
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      void 
   740 ;; Registers used:
   741 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, bsr, status,2, status,0, pcl, pclath, pclatu, btemp, b
      +temp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, 
      +btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, 
      +btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, cs
      +tack
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   747 ;;      Params:         0       0       0       0       0       0       0       0       0
   748 ;;      Locals:         0       0       0       0       0       0       0       0       0
   749 ;;      Temps:          0       0       0       0       0       0       0       0       0
   750 ;;      Totals:         0       0       0       0       0       0       0       0       0
   751 ;;Total ram usage:        0 bytes
   752 ;; Hardware stack levels required when called: 5
   753 ;; This function calls:
   754 ;;		_SYSTEM_Initialize
   755 ;;		_bytecleanup
   756 ;;		_bytepush
   757 ;;		_checkbuttons
   758 ;;		_commandreader
   759 ;;		_scansticks
   760 ;; This function is called by:
   761 ;;		Startup code after reset
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           	psect	text0
   766  000812                     __ptext0:
   767                           	callstack 0
   768  000812                     _main:
   769                           	callstack 26
   770                           
   771                           ;incstack = 0
   772  000812  0E60               	movlw	_gInPacket	;# 
   773  000814  006F FFA0  F02C    	movff	wreg,_gInPacketIdx	;# 
   774                           
   775                           ;main.c: 78:     SYSTEM_Initialize();
   776  00081A  EC9A  F004         	call	_SYSTEM_Initialize	;wreg free
   777                           
   778                           ; BSR set to: 63
   779                           ;main.c: 80:     INTCON0bits.GIEH = 1;
   780  00081E  8ED2               	bsf	210,7,c	;volatile
   781                           
   782                           ; BSR set to: 63
   783                           ;main.c: 82:     ADPCH = 0x00;
   784  000820  0E00               	movlw	0
   785  000822  013E               	movlb	62	; () banked
   786  000824  6FF1               	movwf	241,b	;volatile
   787                           
   788                           ; BSR set to: 62
   789                           ;main.c: 85:     ADCON0bits.ADON = 1;
   790  000826  8FF8               	bsf	248,7,b	;volatile
   791  000828                     l2665:
   792                           
   793                           ;main.c: 90:     {;main.c: 92:         commandreader();
   794  000828  ECA4  F003         	call	_commandreader	;wreg free
   795                           
   796                           ;main.c: 93:         bytepush();
   797  00082C  EC0F  F000         	call	_bytepush	;wreg free
   798                           
   799                           ;main.c: 94:         bytecleanup();
   800  000830  ECEE  F003         	call	_bytecleanup	;wreg free
   801                           
   802                           ;main.c: 95:         if (gInStatus & (1 << 3))
   803  000834  B62B               	btfsc	_gInStatus^0,3,c	;volatile
   804                           
   805                           ;main.c: 96:         {;main.c: 97:             scansticks();
   806  000836  EC29  F001         	call	_scansticks	;wreg free
   807                           
   808                           ;main.c: 99:         if (gInStatus & (1 << 2))
   809  00083A  A42B               	btfss	_gInStatus^0,2,c	;volatile
   810  00083C  D7F5               	goto	l2665
   811                           
   812                           ;main.c: 100:         {;main.c: 101:             checkbuttons();
   813  00083E  EC41  F002         	call	_checkbuttons	;wreg free
   814  000842  D7F2               	goto	l2665
   815  000844                     __end_of_main:
   816                           	callstack 0
   817                           
   818 ;; *************** function _scansticks *****************
   819 ;; Defined at:
   820 ;;		line 73 in file "joysticks.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;		None
   823 ;; Auto vars:     Size  Location     Type
   824 ;;		None
   825 ;; Return value:  Size  Location     Type
   826 ;;                  1    wreg      void 
   827 ;; Registers used:
   828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   829 ;; Tracked objects:
   830 ;;		On entry : 0/3E
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   834 ;;      Params:         0       0       0       0       0       0       0       0       0
   835 ;;      Locals:         0       0       0       0       0       0       0       0       0
   836 ;;      Temps:          0       2       0       0       0       0       0       0       0
   837 ;;      Totals:         0       2       0       0       0       0       0       0       0
   838 ;;Total ram usage:        2 bytes
   839 ;; Hardware stack levels used: 1
   840 ;; Hardware stack levels required when called: 4
   841 ;; This function calls:
   842 ;;		_slinjim
   843 ;; This function is called by:
   844 ;;		_main
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           	psect	text1
   849  000252                     __ptext1:
   850                           	callstack 0
   851  000252                     _scansticks:
   852                           	callstack 26
   853                           
   854                           ;joysticks.c: 77:     if (!initiatedRead)
   855                           
   856                           ;incstack = 0
   857  000252  5014               	movf	_initiatedRead@joysticks$F1637^0,w,c
   858  000254  A4D8               	btfss	status,2,c
   859  000256  D00B               	goto	l1160
   860                           
   861                           ;joysticks.c: 78:     {;joysticks.c: 79:         ADPCH = SX_A;
   862  000258  0E02               	movlw	2
   863  00025A  013E               	movlb	62	; () banked
   864  00025C  6FF1               	movwf	241,b	;volatile
   865                           
   866                           ; BSR set to: 62
   867                           ;joysticks.c: 80:         ADCON0bits.ADGO = 1;
   868  00025E  81F8               	bsf	248,0,b	;volatile
   869                           
   870                           ;joysticks.c: 81:         stickIdx = 0;
   871  000260  0E00               	movlw	0
   872  000262  6E15               	movwf	_stickIdx@joysticks$F1636^0,c
   873                           
   874                           ;joysticks.c: 82:         clearRead = 0;
   875  000264  0E00               	movlw	0
   876  000266  6E13               	movwf	_clearRead@joysticks$F1638^0,c
   877                           
   878                           ;joysticks.c: 83:         initiatedRead = 1;
   879  000268  0E01               	movlw	1
   880  00026A  6E14               	movwf	_initiatedRead@joysticks$F1637^0,c
   881                           
   882                           ;joysticks.c: 84:     }
   883  00026C  0012               	return	
   884  00026E                     l1160:
   885                           
   886                           ;joysticks.c: 86:     {;joysticks.c: 89:         if (!ADCON0bits.ADGO)
   887  00026E  013E               	movlb	62	; () banked
   888  000270  B1F8               	btfsc	248,0,b	;volatile
   889  000272  0012               	return	
   890                           
   891                           ; BSR set to: 62
   892                           ;joysticks.c: 90:         {;joysticks.c: 91:             if (clearRead)
   893  000274  5013               	movf	_clearRead@joysticks$F1638^0,w,c
   894  000276  A4D8               	btfss	status,2,c
   895  000278  D010               	goto	l2597
   896  00027A  D02A               	goto	l2605
   897  00027C                     l2585:
   898                           
   899                           ; BSR set to: 0
   900                           ;joysticks.c: 96:                         ADPCH = SY_A;
   901  00027C  0E03               	movlw	3
   902  00027E  D003               	goto	L2
   903  000280                     l2587:
   904                           
   905                           ; BSR set to: 0
   906                           ;joysticks.c: 99:                         ADPCH = CX_A;
   907  000280  0E00               	movlw	0
   908  000282  D001               	goto	L2
   909  000284                     l2589:
   910                           
   911                           ; BSR set to: 0
   912                           ;joysticks.c: 102:                         ADPCH = CY_A;
   913  000284  0E01               	movlw	1
   914  000286                     L2:
   915  000286  013E               	movlb	62	; () banked
   916  000288  6FF1               	movwf	241,b	;volatile
   917                           
   918                           ;joysticks.c: 103:                         break;
   919  00028A  D01C               	goto	l2599
   920  00028C                     l1169:
   921                           
   922                           ; BSR set to: 0
   923  00028C  962B               	bcf	_gInStatus,3,c	;# 
   924  00028E  842B               	bsf	_gInStatus,2,c	;# 
   925                           
   926                           ;joysticks.c: 107:                         initiatedRead = 0;
   927  000290  0E00               	movlw	0
   928  000292  6E14               	movwf	_initiatedRead@joysticks$F1637^0,c
   929                           
   930                           ;joysticks.c: 108:                         clearRead = 0;
   931  000294  0E00               	movlw	0
   932  000296  6E13               	movwf	_clearRead@joysticks$F1638^0,c
   933  000298  0012               	return	
   934  00029A                     l2597:
   935                           
   936                           ; BSR set to: 62
   937  00029A  5015               	movf	_stickIdx@joysticks$F1636^0,w,c
   938  00029C  0100               	movlb	0	; () banked
   939  00029E  6FDB               	movwf	??_scansticks& (0+255),b
   940  0002A0  6BDC               	clrf	(??_scansticks+1)& (0+255),b
   941                           
   942                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   943                           ; Switch size 1, requested type "simple"
   944                           ; Number of cases is 1, Range of values is 0 to 0
   945                           ; switch strategies available:
   946                           ; Name         Instructions Cycles
   947                           ; simple_byte            4     3 (average)
   948                           ;	Chosen strategy is simple_byte
   949  0002A2  51DC               	movf	(??_scansticks+1)& (0+255),w,b
   950  0002A4  0A00               	xorlw	0	; case 0
   951  0002A6  A4D8               	btfss	status,2,c
   952  0002A8  D00D               	goto	l2599
   953                           
   954                           ; BSR set to: 0
   955                           ; Switch size 1, requested type "simple"
   956                           ; Number of cases is 4, Range of values is 0 to 3
   957                           ; switch strategies available:
   958                           ; Name         Instructions Cycles
   959                           ; simple_byte           13     7 (average)
   960                           ;	Chosen strategy is simple_byte
   961  0002AA  51DB               	movf	??_scansticks& (0+255),w,b
   962  0002AC  0A00               	xorlw	0	; case 0
   963  0002AE  B4D8               	btfsc	status,2,c
   964  0002B0  D7E5               	goto	l2585
   965  0002B2  0A01               	xorlw	1	; case 1
   966  0002B4  B4D8               	btfsc	status,2,c
   967  0002B6  D7E4               	goto	l2587
   968  0002B8  0A03               	xorlw	3	; case 2
   969  0002BA  B4D8               	btfsc	status,2,c
   970  0002BC  D7E3               	goto	l2589
   971  0002BE  0A01               	xorlw	1	; case 3
   972  0002C0  B4D8               	btfsc	status,2,c
   973  0002C2  D7E4               	goto	l1169
   974  0002C4                     l2599:
   975                           
   976                           ;joysticks.c: 120:                 stickIdx++;
   977  0002C4  2A15               	incf	_stickIdx@joysticks$F1636^0,f,c
   978                           
   979                           ;joysticks.c: 121:                 clearRead = 0;
   980  0002C6  0E00               	movlw	0
   981  0002C8  6E13               	movwf	_clearRead@joysticks$F1638^0,c
   982                           
   983                           ;joysticks.c: 122:                 ADCON0bits.ADGO = 1;
   984  0002CA  013E               	movlb	62	; () banked
   985  0002CC  81F8               	bsf	248,0,b	;volatile
   986                           
   987                           ;joysticks.c: 123:             }
   988  0002CE  0012               	return	
   989  0002D0                     l2605:
   990                           
   991                           ; BSR set to: 62
   992                           ;joysticks.c: 125:             {;joysticks.c: 126:                 clearRead = 1;
   993  0002D0  0E01               	movlw	1
   994  0002D2  6E13               	movwf	_clearRead@joysticks$F1638^0,c
   995                           
   996                           ;joysticks.c: 127:                 ADPCH = channel_VSS;
   997  0002D4  0E3B               	movlw	59
   998  0002D6  6FF1               	movwf	241,b	;volatile
   999                           
  1000                           ; BSR set to: 62
  1001                           ;joysticks.c: 128:                 ADCON0bits.ADGO = 1;
  1002  0002D8  81F8               	bsf	248,0,b	;volatile
  1003                           
  1004                           ; BSR set to: 62
  1005                           ;joysticks.c: 132:                 adc_read = ((adc_result_t)((ADRESH << 8) + ADRESL)) >
      +                          > 3;
  1006  0002DA  51EF               	movf	239,w,b	;volatile
  1007  0002DC  006F FBC0  F0DB    	movff	16112,??_scansticks	;volatile
  1008  0002E2  0100               	movlb	0	; () banked
  1009  0002E4  6BDC               	clrf	(??_scansticks+1)& (0+255),b
  1010  0002E6  C0DB  F0DC         	movff	??_scansticks,??_scansticks+1
  1011  0002EA  6BDB               	clrf	??_scansticks& (0+255),b
  1012  0002EC  27DB               	addwf	??_scansticks& (0+255),f,b
  1013  0002EE  0E00               	movlw	0
  1014  0002F0  23DC               	addwfc	(??_scansticks+1)& (0+255),f,b
  1015  0002F2  90D8               	bcf	status,0,c
  1016  0002F4  33DC               	rrcf	(??_scansticks+1)& (0+255),f,b
  1017  0002F6  33DB               	rrcf	??_scansticks& (0+255),f,b
  1018  0002F8  90D8               	bcf	status,0,c
  1019  0002FA  33DC               	rrcf	(??_scansticks+1)& (0+255),f,b
  1020  0002FC  33DB               	rrcf	??_scansticks& (0+255),f,b
  1021  0002FE  90D8               	bcf	status,0,c
  1022  000300  33DC               	rrcf	(??_scansticks+1)& (0+255),f,b
  1023  000302  33DB               	rrcf	??_scansticks& (0+255),f,b
  1024  000304  C0DB  F00B         	movff	??_scansticks,_adc_read
  1025  000308  C0DC  F00C         	movff	??_scansticks+1,_adc_read+1
  1026                           
  1027                           ;joysticks.c: 136:                 switch (stickIdx)
  1028  00030C  D051               	goto	l2621
  1029  00030E                     l1173:
  1030                           
  1031                           ; BSR set to: 0
  1032                           ;joysticks.c: 140:                         tmphigh = SettingData.sx_high;
  1033  00030E  C142  F009         	movff	_SettingData+6,_tmphigh@joysticks$F1631
  1034  000312  C143  F00A         	movff	_SettingData+7,_tmphigh@joysticks$F1631+1
  1035                           
  1036                           ;joysticks.c: 141:                         tmplow = SettingData.sx_low;
  1037  000316  C13E  F007         	movff	_SettingData+2,_tmplow@joysticks$F1632
  1038  00031A  C13F  F008         	movff	_SettingData+3,_tmplow@joysticks$F1632+1
  1039                           
  1040                           ; BSR set to: 0
  1041                           ;joysticks.c: 142:                         tmpcenter = sx_center;
  1042  00031E  0E00               	movlw	0
  1043  000320  6E06               	movwf	(_tmpcenter@joysticks$F1633+1)^0,c
  1044  000322  0EFE               	movlw	254
  1045  000324  6E05               	movwf	_tmpcenter@joysticks$F1633^0,c
  1046                           
  1047                           ;joysticks.c: 143:                         tmphighm = sx_highMultiplier;
  1048  000326  0E00               	movlw	0
  1049  000328  6E04               	movwf	(_tmphighm@joysticks$F1634+1)^0,c
  1050  00032A  0EC8               	movlw	200
  1051  00032C  6E03               	movwf	_tmphighm@joysticks$F1634^0,c
  1052                           
  1053                           ;joysticks.c: 144:                         tmplowm = sx_lowMultiplier;
  1054  00032E  0E00               	movlw	0
  1055  000330  6E02               	movwf	(_tmplowm@joysticks$F1635+1)^0,c
  1056  000332  0EE8               	movlw	232
  1057  000334  D03B               	goto	L5
  1058  000336                     l2613:
  1059                           
  1060                           ; BSR set to: 0
  1061                           ;joysticks.c: 150:                         tmphigh = sy_high;
  1062  000336  0E01               	movlw	1
  1063  000338  6E0A               	movwf	(_tmphigh@joysticks$F1631+1)^0,c
  1064  00033A  0E8E               	movlw	142
  1065  00033C  6E09               	movwf	_tmphigh@joysticks$F1631^0,c
  1066                           
  1067                           ;joysticks.c: 151:                         tmplow = sy_low;
  1068  00033E  0E00               	movlw	0
  1069  000340  6E08               	movwf	(_tmplow@joysticks$F1632+1)^0,c
  1070  000342  0E8C               	movlw	140
  1071  000344  6E07               	movwf	_tmplow@joysticks$F1632^0,c
  1072                           
  1073                           ;joysticks.c: 152:                         tmpcenter = sy_center;
  1074  000346  0E00               	movlw	0
  1075  000348  6E06               	movwf	(_tmpcenter@joysticks$F1633+1)^0,c
  1076  00034A  0EFC               	movlw	252
  1077  00034C  6E05               	movwf	_tmpcenter@joysticks$F1633^0,c
  1078                           
  1079                           ;joysticks.c: 153:                         tmphighm = sy_highMultiplier;
  1080  00034E  0E00               	movlw	0
  1081  000350  6E04               	movwf	(_tmphighm@joysticks$F1634+1)^0,c
  1082  000352  0EAF               	movlw	175
  1083  000354  6E03               	movwf	_tmphighm@joysticks$F1634^0,c
  1084                           
  1085                           ;joysticks.c: 154:                         tmplowm = sy_lowMultiplier;
  1086  000356  0E00               	movlw	0
  1087  000358  6E02               	movwf	(_tmplowm@joysticks$F1635+1)^0,c
  1088  00035A  0EE4               	movlw	228
  1089  00035C  D027               	goto	L5
  1090  00035E                     l2615:
  1091                           
  1092                           ; BSR set to: 0
  1093                           ;joysticks.c: 160:                         tmphigh = cx_high;
  1094  00035E  0E01               	movlw	1
  1095  000360  6E0A               	movwf	(_tmphigh@joysticks$F1631+1)^0,c
  1096  000362  0E63               	movlw	99
  1097  000364  6E09               	movwf	_tmphigh@joysticks$F1631^0,c
  1098                           
  1099                           ;joysticks.c: 161:                         tmplow = cx_low;
  1100  000366  0E00               	movlw	0
  1101  000368  6E08               	movwf	(_tmplow@joysticks$F1632+1)^0,c
  1102  00036A  0E6C               	movlw	108
  1103  00036C  6E07               	movwf	_tmplow@joysticks$F1632^0,c
  1104                           
  1105                           ;joysticks.c: 162:                         tmpcenter = cx_center;
  1106  00036E  0E00               	movlw	0
  1107  000370  6E06               	movwf	(_tmpcenter@joysticks$F1633+1)^0,c
  1108  000372  0EFC               	movlw	252
  1109  000374  6E05               	movwf	_tmpcenter@joysticks$F1633^0,c
  1110                           
  1111                           ;joysticks.c: 163:                         tmphighm = cx_highMultiplier;
  1112  000376  0E01               	movlw	1
  1113  000378  6E04               	movwf	(_tmphighm@joysticks$F1634+1)^0,c
  1114  00037A  0E01               	movlw	1
  1115  00037C  6E03               	movwf	_tmphighm@joysticks$F1634^0,c
  1116                           
  1117                           ;joysticks.c: 164:                         tmplowm = cx_lowMultiplier;
  1118  00037E  0E00               	movlw	0
  1119  000380  6E02               	movwf	(_tmplowm@joysticks$F1635+1)^0,c
  1120  000382  0EB1               	movlw	177
  1121  000384  D013               	goto	L5
  1122  000386                     l2617:
  1123                           
  1124                           ; BSR set to: 0
  1125                           ;joysticks.c: 170:                         tmphigh = cy_high;
  1126  000386  0E01               	movlw	1
  1127  000388  6E0A               	movwf	(_tmphigh@joysticks$F1631+1)^0,c
  1128  00038A  0E81               	movlw	129
  1129  00038C  6E09               	movwf	_tmphigh@joysticks$F1631^0,c
  1130                           
  1131                           ;joysticks.c: 171:                         tmplow = cy_low;
  1132  00038E  0E00               	movlw	0
  1133  000390  6E08               	movwf	(_tmplow@joysticks$F1632+1)^0,c
  1134  000392  0E7F               	movlw	127
  1135  000394  6E07               	movwf	_tmplow@joysticks$F1632^0,c
  1136                           
  1137                           ;joysticks.c: 172:                         tmpcenter = cy_center;
  1138  000396  0E00               	movlw	0
  1139  000398  6E06               	movwf	(_tmpcenter@joysticks$F1633+1)^0,c
  1140  00039A  0EFE               	movlw	254
  1141  00039C  6E05               	movwf	_tmpcenter@joysticks$F1633^0,c
  1142                           
  1143                           ;joysticks.c: 173:                         tmphighm = cy_highMultiplier;
  1144  00039E  0E00               	movlw	0
  1145  0003A0  6E04               	movwf	(_tmphighm@joysticks$F1634+1)^0,c
  1146  0003A2  0EC3               	movlw	195
  1147  0003A4  6E03               	movwf	_tmphighm@joysticks$F1634^0,c
  1148                           
  1149                           ;joysticks.c: 174:                         tmplowm = cy_lowMultiplier;
  1150  0003A6  0E00               	movlw	0
  1151  0003A8  6E02               	movwf	(_tmplowm@joysticks$F1635+1)^0,c
  1152  0003AA  0EC9               	movlw	201
  1153  0003AC                     L5:
  1154  0003AC  6E01               	movwf	_tmplowm@joysticks$F1635^0,c
  1155                           
  1156                           ;joysticks.c: 176:                         break;
  1157  0003AE  D014               	goto	l2623
  1158  0003B0                     l2621:
  1159                           
  1160                           ; BSR set to: 0
  1161  0003B0  5015               	movf	_stickIdx@joysticks$F1636^0,w,c
  1162  0003B2  6FDB               	movwf	??_scansticks& (0+255),b
  1163  0003B4  6BDC               	clrf	(??_scansticks+1)& (0+255),b
  1164                           
  1165                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1166                           ; Switch size 1, requested type "simple"
  1167                           ; Number of cases is 1, Range of values is 0 to 0
  1168                           ; switch strategies available:
  1169                           ; Name         Instructions Cycles
  1170                           ; simple_byte            4     3 (average)
  1171                           ;	Chosen strategy is simple_byte
  1172  0003B6  51DC               	movf	(??_scansticks+1)& (0+255),w,b
  1173  0003B8  0A00               	xorlw	0	; case 0
  1174  0003BA  A4D8               	btfss	status,2,c
  1175  0003BC  D00D               	goto	l2623
  1176                           
  1177                           ; BSR set to: 0
  1178                           ; Switch size 1, requested type "simple"
  1179                           ; Number of cases is 4, Range of values is 0 to 3
  1180                           ; switch strategies available:
  1181                           ; Name         Instructions Cycles
  1182                           ; simple_byte           13     7 (average)
  1183                           ;	Chosen strategy is simple_byte
  1184  0003BE  51DB               	movf	??_scansticks& (0+255),w,b
  1185  0003C0  0A00               	xorlw	0	; case 0
  1186  0003C2  B4D8               	btfsc	status,2,c
  1187  0003C4  D7A4               	goto	l1173
  1188  0003C6  0A01               	xorlw	1	; case 1
  1189  0003C8  B4D8               	btfsc	status,2,c
  1190  0003CA  D7B5               	goto	l2613
  1191  0003CC  0A03               	xorlw	3	; case 2
  1192  0003CE  B4D8               	btfsc	status,2,c
  1193  0003D0  D7C6               	goto	l2615
  1194  0003D2  0A01               	xorlw	1	; case 3
  1195  0003D4  B4D8               	btfsc	status,2,c
  1196  0003D6  D7D7               	goto	l2617
  1197  0003D8                     l2623:
  1198                           
  1199                           ; BSR set to: 0
  1200                           ;joysticks.c: 184:                 if (adc_read > tmpcenter)
  1201  0003D8  500B               	movf	_adc_read^0,w,c
  1202  0003DA  5C05               	subwf	_tmpcenter@joysticks$F1633^0,w,c
  1203  0003DC  500C               	movf	(_adc_read+1)^0,w,c
  1204  0003DE  5806               	subwfb	(_tmpcenter@joysticks$F1633+1)^0,w,c
  1205  0003E0  B0D8               	btfsc	status,0,c
  1206  0003E2  D020               	goto	l2631
  1207                           
  1208                           ; BSR set to: 0
  1209                           ;joysticks.c: 185:                 {;joysticks.c: 186:                     if (adc_read 
      +                          >= tmphigh)
  1210  0003E4  5009               	movf	_tmphigh@joysticks$F1631^0,w,c
  1211  0003E6  5C0B               	subwf	_adc_read^0,w,c
  1212  0003E8  500A               	movf	(_tmphigh@joysticks$F1631+1)^0,w,c
  1213  0003EA  580C               	subwfb	(_adc_read+1)^0,w,c
  1214  0003EC  A0D8               	btfss	status,0,c
  1215  0003EE  D007               	goto	l2629
  1216                           
  1217                           ; BSR set to: 0
  1218                           ;joysticks.c: 187:                     {;joysticks.c: 188:                         gConP
      +                          ollPacket[stickIdx+2] = (unsigned char) 228;
  1219  0003F0  5015               	movf	_stickIdx@joysticks$F1636^0,w,c
  1220  0003F2  0F35               	addlw	low (_gConPollPacket+2)
  1221  0003F4  6ED9               	movwf	fsr2l,c
  1222  0003F6  6ADA               	clrf	fsr2h,c
  1223  0003F8  0EE4               	movlw	228
  1224  0003FA  6EDF               	movwf	indf2,c
  1225                           
  1226                           ;joysticks.c: 189:                     }
  1227  0003FC  0012               	return	
  1228  0003FE                     l2629:
  1229                           
  1230                           ; BSR set to: 0
  1231                           ;joysticks.c: 191:                     {;joysticks.c: 192:                         gConP
      +                          ollPacket[stickIdx+2] = (unsigned char) 128 + slinjim(adc_read - tmpcenter, tmphighm);
  1232  0003FE  5015               	movf	_stickIdx@joysticks$F1636^0,w,c
  1233  000400  0F35               	addlw	low (_gConPollPacket+2)
  1234  000402  6ED9               	movwf	fsr2l,c
  1235  000404  6ADA               	clrf	fsr2h,c
  1236  000406  5005               	movf	_tmpcenter@joysticks$F1633^0,w,c
  1237  000408  5C0B               	subwf	_adc_read^0,w,c
  1238  00040A  6FD7               	movwf	slinjim@dividend& (0+255),b
  1239  00040C  5006               	movf	(_tmpcenter@joysticks$F1633+1)^0,w,c
  1240  00040E  580C               	subwfb	(_adc_read+1)^0,w,c
  1241  000410  6FD8               	movwf	(slinjim@dividend+1)& (0+255),b
  1242  000412  C003  F0D9         	movff	_tmphighm@joysticks$F1634,slinjim@multiplier
  1243  000416  C004  F0DA         	movff	_tmphighm@joysticks$F1634+1,slinjim@multiplier+1
  1244  00041A  EC8B  F004         	call	_slinjim	;wreg free
  1245  00041E  0F80               	addlw	128
  1246  000420  6EDF               	movwf	indf2,c
  1247  000422  0012               	return	
  1248  000424                     l2631:
  1249                           
  1250                           ; BSR set to: 0
  1251  000424  5005               	movf	_tmpcenter@joysticks$F1633^0,w,c
  1252  000426  5C0B               	subwf	_adc_read^0,w,c
  1253  000428  5006               	movf	(_tmpcenter@joysticks$F1633+1)^0,w,c
  1254  00042A  580C               	subwfb	(_adc_read+1)^0,w,c
  1255  00042C  B0D8               	btfsc	status,0,c
  1256  00042E  D022               	goto	l2639
  1257                           
  1258                           ; BSR set to: 0
  1259                           ;joysticks.c: 196:                 {;joysticks.c: 197:                     if (adc_read 
      +                          <= tmplow)
  1260  000430  500B               	movf	_adc_read^0,w,c
  1261  000432  5C07               	subwf	_tmplow@joysticks$F1632^0,w,c
  1262  000434  500C               	movf	(_adc_read+1)^0,w,c
  1263  000436  5808               	subwfb	(_tmplow@joysticks$F1632+1)^0,w,c
  1264  000438  A0D8               	btfss	status,0,c
  1265  00043A  D007               	goto	l2637
  1266                           
  1267                           ; BSR set to: 0
  1268                           ;joysticks.c: 198:                     {;joysticks.c: 199:                         gConP
      +                          ollPacket[stickIdx+2] = (unsigned char) 27;
  1269  00043C  5015               	movf	_stickIdx@joysticks$F1636^0,w,c
  1270  00043E  0F35               	addlw	low (_gConPollPacket+2)
  1271  000440  6ED9               	movwf	fsr2l,c
  1272  000442  6ADA               	clrf	fsr2h,c
  1273  000444  0E1B               	movlw	27
  1274  000446  6EDF               	movwf	indf2,c
  1275                           
  1276                           ;joysticks.c: 200:                     }
  1277  000448  0012               	return	
  1278  00044A                     l2637:
  1279                           
  1280                           ; BSR set to: 0
  1281                           ;joysticks.c: 202:                     {;joysticks.c: 203:                         gConP
      +                          ollPacket[stickIdx+2] = (unsigned char) 128 - slinjim(tmpcenter - adc_read, tmplowm);
  1282  00044A  5015               	movf	_stickIdx@joysticks$F1636^0,w,c
  1283  00044C  0F35               	addlw	low (_gConPollPacket+2)
  1284  00044E  6ED9               	movwf	fsr2l,c
  1285  000450  6ADA               	clrf	fsr2h,c
  1286  000452  500B               	movf	_adc_read^0,w,c
  1287  000454  5C05               	subwf	_tmpcenter@joysticks$F1633^0,w,c
  1288  000456  6FD7               	movwf	slinjim@dividend& (0+255),b
  1289  000458  500C               	movf	(_adc_read+1)^0,w,c
  1290  00045A  5806               	subwfb	(_tmpcenter@joysticks$F1633+1)^0,w,c
  1291  00045C  6FD8               	movwf	(slinjim@dividend+1)& (0+255),b
  1292  00045E  C001  F0D9         	movff	_tmplowm@joysticks$F1635,slinjim@multiplier
  1293  000462  C002  F0DA         	movff	_tmplowm@joysticks$F1635+1,slinjim@multiplier+1
  1294  000466  EC8B  F004         	call	_slinjim	;wreg free
  1295  00046A  6FDB               	movwf	??_scansticks& (0+255),b
  1296  00046C  51DB               	movf	??_scansticks& (0+255),w,b
  1297  00046E  0880               	sublw	128
  1298  000470  6EDF               	movwf	indf2,c
  1299  000472  0012               	return	
  1300  000474                     l2639:
  1301                           
  1302                           ; BSR set to: 0
  1303                           ;joysticks.c: 207:                 {;joysticks.c: 208:                     gConPollPacke
      +                          t[stickIdx+2] = (unsigned char) 128;
  1304  000474  5015               	movf	_stickIdx@joysticks$F1636^0,w,c
  1305  000476  0F35               	addlw	low (_gConPollPacket+2)
  1306  000478  6ED9               	movwf	fsr2l,c
  1307  00047A  6ADA               	clrf	fsr2h,c
  1308  00047C  0E80               	movlw	128
  1309  00047E  6EDF               	movwf	indf2,c
  1310  000480  0012               	return		;funcret
  1311  000482                     __end_of_scansticks:
  1312                           	callstack 0
  1313                           
  1314 ;; *************** function _slinjim *****************
  1315 ;; Defined at:
  1316 ;;		line 54 in file "joysticks.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;  dividend        2    0[BANK0 ] unsigned short 
  1319 ;;  multiplier      2    2[BANK0 ] unsigned short 
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;  conversion      2   12[COMRAM] unsigned short 
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  1    wreg      unsigned char 
  1324 ;; Registers used:
  1325 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1326 ;; Tracked objects:
  1327 ;;		On entry : 3F/0
  1328 ;;		On exit  : 3F/0
  1329 ;;		Unchanged: 3F/0
  1330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1331 ;;      Params:         0       4       0       0       0       0       0       0       0
  1332 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1333 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1334 ;;      Totals:         2       4       0       0       0       0       0       0       0
  1335 ;;Total ram usage:        6 bytes
  1336 ;; Hardware stack levels used: 1
  1337 ;; Hardware stack levels required when called: 3
  1338 ;; This function calls:
  1339 ;;		___wmul
  1340 ;; This function is called by:
  1341 ;;		_scansticks
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           	psect	text2
  1346  000916                     __ptext2:
  1347                           	callstack 0
  1348  000916                     _slinjim:
  1349                           	callstack 26
  1350                           
  1351                           ; BSR set to: 0
  1352                           ;joysticks.c: 54: unsigned char slinjim(uint16_t dividend, uint16_t multiplier);joystick
      +                          s.c: 55: {;joysticks.c: 56:     uint16_t conversion = (dividend * multiplier) >> 8;
  1353                           
  1354                           ;incstack = 0
  1355  000916  C0D7  F052         	movff	slinjim@dividend,___wmul@multiplier
  1356  00091A  C0D8  F053         	movff	slinjim@dividend+1,___wmul@multiplier+1
  1357  00091E  C0D9  F054         	movff	slinjim@multiplier,___wmul@multiplicand
  1358  000922  C0DA  F055         	movff	slinjim@multiplier+1,___wmul@multiplicand+1
  1359  000926  EC65  F004         	call	___wmul	;wreg free
  1360  00092A  5053               	movf	(?___wmul+1)^0,w,c
  1361  00092C  6E58               	movwf	slinjim@conversion^0,c
  1362  00092E  6A59               	clrf	(slinjim@conversion+1)^0,c
  1363                           
  1364                           ; BSR set to: 0
  1365                           ;joysticks.c: 57:     return (unsigned char) conversion;
  1366  000930  5058               	movf	slinjim@conversion^0,w,c
  1367                           
  1368                           ; BSR set to: 0
  1369  000932  0012               	return		;funcret
  1370  000934                     __end_of_slinjim:
  1371                           	callstack 0
  1372                           
  1373 ;; *************** function ___wmul *****************
  1374 ;; Defined at:
  1375 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;  multiplier      2    6[COMRAM] unsigned int 
  1378 ;;  multiplicand    2    8[COMRAM] unsigned int 
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;  product         2   10[COMRAM] unsigned int 
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  2    6[COMRAM] unsigned int 
  1383 ;; Registers used:
  1384 ;;		wreg, status,2, status,0, prodl, prodh
  1385 ;; Tracked objects:
  1386 ;;		On entry : 3F/0
  1387 ;;		On exit  : 3F/0
  1388 ;;		Unchanged: 3F/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1390 ;;      Params:         4       0       0       0       0       0       0       0       0
  1391 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1392 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1393 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1394 ;;Total ram usage:        6 bytes
  1395 ;; Hardware stack levels used: 1
  1396 ;; Hardware stack levels required when called: 2
  1397 ;; This function calls:
  1398 ;;		Nothing
  1399 ;; This function is called by:
  1400 ;;		_slinjim
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           	psect	text3
  1405  0008CA                     __ptext3:
  1406                           	callstack 0
  1407  0008CA                     ___wmul:
  1408                           	callstack 26
  1409                           
  1410                           ; BSR set to: 0
  1411                           
  1412                           ; BSR set to: 0
  1413                           ;incstack = 0
  1414  0008CA  5052               	movf	___wmul@multiplier^0,w,c
  1415  0008CC  0254               	mulwf	___wmul@multiplicand^0,c
  1416  0008CE  006F FFCC  F056    	movff	prodl,___wmul@product
  1417  0008D4  006F FFD0  F057    	movff	prodh,___wmul@product+1
  1418  0008DA  5052               	movf	___wmul@multiplier^0,w,c
  1419  0008DC  0255               	mulwf	(___wmul@multiplicand+1)^0,c
  1420  0008DE  50F3               	movf	243,w,c
  1421  0008E0  2657               	addwf	(___wmul@product+1)^0,f,c
  1422  0008E2  5053               	movf	(___wmul@multiplier+1)^0,w,c
  1423  0008E4  0254               	mulwf	___wmul@multiplicand^0,c
  1424  0008E6  50F3               	movf	243,w,c
  1425  0008E8  2657               	addwf	(___wmul@product+1)^0,f,c
  1426                           
  1427                           ; BSR set to: 0
  1428  0008EA  C056  F052         	movff	___wmul@product,?___wmul
  1429  0008EE  C057  F053         	movff	___wmul@product+1,?___wmul+1
  1430                           
  1431                           ; BSR set to: 0
  1432  0008F2  0012               	return		;funcret
  1433  0008F4                     __end_of___wmul:
  1434                           	callstack 0
  1435                           
  1436 ;; *************** function _checkbuttons *****************
  1437 ;; Defined at:
  1438 ;;		line 12 in file "button.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;		None
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;		None
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  1    wreg      void 
  1445 ;; Registers used:
  1446 ;;		wreg, status,2, status,0
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/3E
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1452 ;;      Params:         0       0       0       0       0       0       0       0       0
  1453 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1454 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1455 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1456 ;;Total ram usage:        1 bytes
  1457 ;; Hardware stack levels used: 1
  1458 ;; Hardware stack levels required when called: 2
  1459 ;; This function calls:
  1460 ;;		Nothing
  1461 ;; This function is called by:
  1462 ;;		_main
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           	psect	text4
  1467  000482                     __ptext4:
  1468                           	callstack 0
  1469  000482                     _checkbuttons:
  1470                           	callstack 28
  1471                           
  1472                           ;button.c: 18:     if (!(gInStatus & (1 << 1)))
  1473                           
  1474                           ; BSR set to: 0
  1475                           ;incstack = 0
  1476  000482  B22B               	btfsc	_gInStatus^0,1,c	;volatile
  1477  000484  D009               	goto	l2239
  1478                           
  1479                           ;button.c: 19:     {;button.c: 20:         gConPollPacket[0] = 0x0;
  1480  000486  0E00               	movlw	0
  1481  000488  6E33               	movwf	_gConPollPacket^0,c	;volatile
  1482                           
  1483                           ;button.c: 21:         gConPollPacket[1] = 0x0;
  1484  00048A  0E00               	movlw	0
  1485  00048C  6E34               	movwf	(_gConPollPacket+1)^0,c	;volatile
  1486                           
  1487                           ;button.c: 22:         gConPollPacket[6] = 0x0;
  1488  00048E  0E00               	movlw	0
  1489  000490  6E39               	movwf	(_gConPollPacket+6)^0,c	;volatile
  1490                           
  1491                           ;button.c: 23:         gConPollPacket[7] = 0x0;
  1492  000492  0E00               	movlw	0
  1493  000494  6E3A               	movwf	(_gConPollPacket+7)^0,c	;volatile
  1494  000496  822B               	bsf	_gInStatus,1,c	;# 
  1495  000498                     l2239:
  1496                           
  1497                           ;button.c: 32:     gConPollPacket[0] |= !PORTCbits.RC1 << 1;
  1498  000498  B2CC               	btfsc	204,1,c	;volatile
  1499  00049A  D003               	goto	u90
  1500  00049C  6A52               	clrf	??_checkbuttons^0,c
  1501  00049E  2A52               	incf	??_checkbuttons^0,f,c
  1502  0004A0  D001               	goto	u108
  1503  0004A2                     u90:
  1504  0004A2  6A52               	clrf	??_checkbuttons^0,c
  1505  0004A4                     u108:
  1506  0004A4  90D8               	bcf	status,0,c
  1507  0004A6  3452               	rlcf	??_checkbuttons^0,w,c
  1508  0004A8  1233               	iorwf	_gConPollPacket^0,f,c	;volatile
  1509                           
  1510                           ;button.c: 33:     gConPollPacket[0] |= !PORTAbits.RA6 << 1;
  1511  0004AA  BCCA               	btfsc	202,6,c	;volatile
  1512  0004AC  D003               	goto	u110
  1513  0004AE  6A52               	clrf	??_checkbuttons^0,c
  1514  0004B0  2A52               	incf	??_checkbuttons^0,f,c
  1515  0004B2  D001               	goto	u128
  1516  0004B4                     u110:
  1517  0004B4  6A52               	clrf	??_checkbuttons^0,c
  1518  0004B6                     u128:
  1519  0004B6  90D8               	bcf	status,0,c
  1520  0004B8  3452               	rlcf	??_checkbuttons^0,w,c
  1521  0004BA  1233               	iorwf	_gConPollPacket^0,f,c	;volatile
  1522                           
  1523                           ;button.c: 34:     gConPollPacket[0] |= !PORTAbits.RA7 << 1;
  1524  0004BC  BECA               	btfsc	202,7,c	;volatile
  1525  0004BE  D003               	goto	u130
  1526  0004C0  6A52               	clrf	??_checkbuttons^0,c
  1527  0004C2  2A52               	incf	??_checkbuttons^0,f,c
  1528  0004C4  D001               	goto	u148
  1529  0004C6                     u130:
  1530  0004C6  6A52               	clrf	??_checkbuttons^0,c
  1531  0004C8                     u148:
  1532  0004C8  90D8               	bcf	status,0,c
  1533  0004CA  3452               	rlcf	??_checkbuttons^0,w,c
  1534  0004CC  1233               	iorwf	_gConPollPacket^0,f,c	;volatile
  1535                           
  1536                           ;button.c: 35:     gConPollPacket[0] |= !PORTAbits.RA5 << 1;
  1537  0004CE  BACA               	btfsc	202,5,c	;volatile
  1538  0004D0  D003               	goto	u150
  1539  0004D2  6A52               	clrf	??_checkbuttons^0,c
  1540  0004D4  2A52               	incf	??_checkbuttons^0,f,c
  1541  0004D6  D001               	goto	u168
  1542  0004D8                     u150:
  1543  0004D8  6A52               	clrf	??_checkbuttons^0,c
  1544  0004DA                     u168:
  1545  0004DA  90D8               	bcf	status,0,c
  1546  0004DC  3452               	rlcf	??_checkbuttons^0,w,c
  1547  0004DE  1233               	iorwf	_gConPollPacket^0,f,c	;volatile
  1548                           
  1549                           ;button.c: 36:     gConPollPacket[0] |= !PORTAbits.RA4;
  1550  0004E0  B8CA               	btfsc	202,4,c	;volatile
  1551  0004E2  D002               	goto	u170
  1552  0004E4  0E01               	movlw	1
  1553  0004E6  D001               	goto	u180
  1554  0004E8                     u170:
  1555  0004E8  0E00               	movlw	0
  1556  0004EA                     u180:
  1557  0004EA  1233               	iorwf	_gConPollPacket^0,f,c	;volatile
  1558                           
  1559                           ;button.c: 41:     gConPollPacket[1] = 1 << 1;
  1560  0004EC  0E02               	movlw	2
  1561  0004EE  6E34               	movwf	(_gConPollPacket+1)^0,c	;volatile
  1562                           
  1563                           ;button.c: 42:     gConPollPacket[1] |= !PORTCbits.RC5 << 1;
  1564  0004F0  BACC               	btfsc	204,5,c	;volatile
  1565  0004F2  D003               	goto	u190
  1566  0004F4  6A52               	clrf	??_checkbuttons^0,c
  1567  0004F6  2A52               	incf	??_checkbuttons^0,f,c
  1568  0004F8  D001               	goto	u208
  1569  0004FA                     u190:
  1570  0004FA  6A52               	clrf	??_checkbuttons^0,c
  1571  0004FC                     u208:
  1572  0004FC  90D8               	bcf	status,0,c
  1573  0004FE  3452               	rlcf	??_checkbuttons^0,w,c
  1574  000500  1234               	iorwf	(_gConPollPacket+1)^0,f,c	;volatile
  1575                           
  1576                           ;button.c: 43:     gConPollPacket[1] |= !PORTCbits.RC2 << 1;
  1577  000502  B4CC               	btfsc	204,2,c	;volatile
  1578  000504  D003               	goto	u210
  1579  000506  6A52               	clrf	??_checkbuttons^0,c
  1580  000508  2A52               	incf	??_checkbuttons^0,f,c
  1581  00050A  D001               	goto	u228
  1582  00050C                     u210:
  1583  00050C  6A52               	clrf	??_checkbuttons^0,c
  1584  00050E                     u228:
  1585  00050E  90D8               	bcf	status,0,c
  1586  000510  3452               	rlcf	??_checkbuttons^0,w,c
  1587  000512  1234               	iorwf	(_gConPollPacket+1)^0,f,c	;volatile
  1588                           
  1589                           ;button.c: 46:     gConPollPacket[1] |= !PORTBbits.RB5;
  1590  000514  BACB               	btfsc	203,5,c	;volatile
  1591  000516  D002               	goto	u230
  1592  000518  0E01               	movlw	1
  1593  00051A  D001               	goto	u240
  1594  00051C                     u230:
  1595  00051C  0E00               	movlw	0
  1596  00051E                     u240:
  1597  00051E  1234               	iorwf	(_gConPollPacket+1)^0,f,c	;volatile
  1598                           
  1599                           ;button.c: 47:     gConPollPacket[1] |= !PORTCbits.RC0 << 1;
  1600  000520  B0CC               	btfsc	204,0,c	;volatile
  1601  000522  D003               	goto	u250
  1602  000524  6A52               	clrf	??_checkbuttons^0,c
  1603  000526  2A52               	incf	??_checkbuttons^0,f,c
  1604  000528  D001               	goto	u268
  1605  00052A                     u250:
  1606  00052A  6A52               	clrf	??_checkbuttons^0,c
  1607  00052C                     u268:
  1608  00052C  90D8               	bcf	status,0,c
  1609  00052E  3452               	rlcf	??_checkbuttons^0,w,c
  1610  000530  1234               	iorwf	(_gConPollPacket+1)^0,f,c	;volatile
  1611                           
  1612                           ;button.c: 49:     gConPollPacket[1] |= !PORTCbits.RC6 << 1;
  1613  000532  BCCC               	btfsc	204,6,c	;volatile
  1614  000534  D003               	goto	u270
  1615  000536  6A52               	clrf	??_checkbuttons^0,c
  1616  000538  2A52               	incf	??_checkbuttons^0,f,c
  1617  00053A  D001               	goto	u288
  1618  00053C                     u270:
  1619  00053C  6A52               	clrf	??_checkbuttons^0,c
  1620  00053E                     u288:
  1621  00053E  90D8               	bcf	status,0,c
  1622  000540  3452               	rlcf	??_checkbuttons^0,w,c
  1623  000542  1234               	iorwf	(_gConPollPacket+1)^0,f,c	;volatile
  1624                           
  1625                           ;button.c: 50:     gConPollPacket[1] |= !PORTCbits.RC7 << 1;
  1626  000544  BECC               	btfsc	204,7,c	;volatile
  1627  000546  D003               	goto	u290
  1628  000548  6A52               	clrf	??_checkbuttons^0,c
  1629  00054A  2A52               	incf	??_checkbuttons^0,f,c
  1630  00054C  D001               	goto	u308
  1631  00054E                     u290:
  1632  00054E  6A52               	clrf	??_checkbuttons^0,c
  1633  000550                     u308:
  1634  000550  90D8               	bcf	status,0,c
  1635  000552  3452               	rlcf	??_checkbuttons^0,w,c
  1636  000554  1234               	iorwf	(_gConPollPacket+1)^0,f,c	;volatile
  1637                           
  1638                           ;button.c: 51:     gConPollPacket[1] |= !PORTBbits.RB0 << 1;
  1639  000556  B0CB               	btfsc	203,0,c	;volatile
  1640  000558  D003               	goto	u310
  1641  00055A  6A52               	clrf	??_checkbuttons^0,c
  1642  00055C  2A52               	incf	??_checkbuttons^0,f,c
  1643  00055E  D001               	goto	u328
  1644  000560                     u310:
  1645  000560  6A52               	clrf	??_checkbuttons^0,c
  1646  000562                     u328:
  1647  000562  90D8               	bcf	status,0,c
  1648  000564  3452               	rlcf	??_checkbuttons^0,w,c
  1649  000566  1234               	iorwf	(_gConPollPacket+1)^0,f,c	;volatile
  1650                           
  1651                           ;button.c: 52:     gConPollPacket[1] |= !PORTBbits.RB1;
  1652  000568  B2CB               	btfsc	203,1,c	;volatile
  1653  00056A  D002               	goto	u330
  1654  00056C  0E01               	movlw	1
  1655  00056E  D001               	goto	u340
  1656  000570                     u330:
  1657  000570  0E00               	movlw	0
  1658  000572                     u340:
  1659  000572  1234               	iorwf	(_gConPollPacket+1)^0,f,c	;volatile
  1660  000574  0012               	return		;funcret
  1661  000576                     __end_of_checkbuttons:
  1662                           	callstack 0
  1663                           
  1664 ;; *************** function _SYSTEM_Initialize *****************
  1665 ;; Defined at:
  1666 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;		None
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;		None
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  1    wreg      void 
  1673 ;; Registers used:
  1674 ;;		wreg, status,2, status,0, cstack
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 3F/3F
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1680 ;;      Params:         0       0       0       0       0       0       0       0       0
  1681 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1682 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1683 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1684 ;;Total ram usage:        0 bytes
  1685 ;; Hardware stack levels used: 1
  1686 ;; Hardware stack levels required when called: 4
  1687 ;; This function calls:
  1688 ;;		_ADCC_Initialize
  1689 ;;		_INTERRUPT_Initialize
  1690 ;;		_OSCILLATOR_Initialize
  1691 ;;		_PIN_MANAGER_Initialize
  1692 ;;		_PMD_Initialize
  1693 ;;		_SMT1_Initialize
  1694 ;; This function is called by:
  1695 ;;		_main
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           	psect	text5
  1700  000934                     __ptext5:
  1701                           	callstack 0
  1702  000934                     _SYSTEM_Initialize:
  1703                           	callstack 26
  1704                           
  1705                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  1706                           
  1707                           ;incstack = 0
  1708  000934  ECCD  F004         	call	_INTERRUPT_Initialize	;wreg free
  1709                           
  1710                           ; BSR set to: 57
  1711                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  1712  000938  EC7A  F004         	call	_PMD_Initialize	;wreg free
  1713                           
  1714                           ; BSR set to: 57
  1715                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1716  00093C  EC0B  F003         	call	_PIN_MANAGER_Initialize	;wreg free
  1717                           
  1718                           ; BSR set to: 58
  1719                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1720  000940  ECB4  F004         	call	_OSCILLATOR_Initialize	;wreg free
  1721                           
  1722                           ; BSR set to: 57
  1723                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  1724  000944  EC76  F003         	call	_ADCC_Initialize	;wreg free
  1725                           
  1726                           ; BSR set to: 62
  1727                           ;mcc_generated_files/mcc.c: 57:     SMT1_Initialize();
  1728  000948  EC39  F004         	call	_SMT1_Initialize	;wreg free
  1729                           
  1730                           ; BSR set to: 63
  1731  00094C  0012               	return		;funcret
  1732  00094E                     __end_of_SYSTEM_Initialize:
  1733                           	callstack 0
  1734                           
  1735 ;; *************** function _SMT1_Initialize *****************
  1736 ;; Defined at:
  1737 ;;		line 60 in file "mcc_generated_files/smt1.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;		None
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;		None
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		wreg, status,2
  1746 ;; Tracked objects:
  1747 ;;		On entry : 3F/3E
  1748 ;;		On exit  : 3F/3F
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1751 ;;      Params:         0       0       0       0       0       0       0       0       0
  1752 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1753 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1754 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1755 ;;Total ram usage:        0 bytes
  1756 ;; Hardware stack levels used: 1
  1757 ;; Hardware stack levels required when called: 2
  1758 ;; This function calls:
  1759 ;;		Nothing
  1760 ;; This function is called by:
  1761 ;;		_SYSTEM_Initialize
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           	psect	text6
  1766  000872                     __ptext6:
  1767                           	callstack 0
  1768  000872                     _SMT1_Initialize:
  1769                           	callstack 27
  1770                           
  1771                           ; BSR set to: 62
  1772                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x9C;
  1773                           
  1774                           ; BSR set to: 63
  1775                           ;incstack = 0
  1776  000872  0E9C               	movlw	156
  1777  000874  013F               	movlb	63	; () banked
  1778  000876  6F1E               	movwf	30,b	;volatile
  1779                           
  1780                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0xC3;
  1781  000878  0EC3               	movlw	195
  1782  00087A  6F1F               	movwf	31,b	;volatile
  1783                           
  1784                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
  1785  00087C  0E00               	movlw	0
  1786  00087E  6F20               	movwf	32,b	;volatile
  1787                           
  1788                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x00;
  1789  000880  0E00               	movlw	0
  1790  000882  6F21               	movwf	33,b	;volatile
  1791                           
  1792                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x0;
  1793  000884  0E00               	movlw	0
  1794  000886  6F23               	movwf	35,b	;volatile
  1795                           
  1796                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
  1797  000888  0E00               	movlw	0
  1798  00088A  6F22               	movwf	34,b	;volatile
  1799                           
  1800                           ; BSR set to: 63
  1801                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0xFF;
  1802  00088C  691D               	setf	29,b	;volatile
  1803                           
  1804                           ; BSR set to: 63
  1805                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
  1806  00088E  691C               	setf	28,b	;volatile
  1807                           
  1808                           ; BSR set to: 63
  1809                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
  1810  000890  691B               	setf	27,b	;volatile
  1811                           
  1812                           ; BSR set to: 63
  1813                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1PWAIE = 1;
  1814  000892  0139               	movlb	57	; () banked
  1815  000894  8F91               	bsf	145,7,b	;volatile
  1816                           
  1817                           ; BSR set to: 57
  1818                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PRAIE = 0;
  1819  000896  9D91               	bcf	145,6,b	;volatile
  1820                           
  1821                           ; BSR set to: 57
  1822                           ;mcc_generated_files/smt1.c: 96:     SMT1CON1bits.SMT1GO = 1;
  1823  000898  013F               	movlb	63	; () banked
  1824  00089A  8F1F               	bsf	31,7,b	;volatile
  1825                           
  1826                           ; BSR set to: 63
  1827  00089C  0012               	return		;funcret
  1828  00089E                     __end_of_SMT1_Initialize:
  1829                           	callstack 0
  1830                           
  1831 ;; *************** function _PMD_Initialize *****************
  1832 ;; Defined at:
  1833 ;;		line 74 in file "mcc_generated_files/mcc.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;		None
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;		None
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  1    wreg      void 
  1840 ;; Registers used:
  1841 ;;		wreg, status,2
  1842 ;; Tracked objects:
  1843 ;;		On entry : 3F/39
  1844 ;;		On exit  : 3F/39
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1847 ;;      Params:         0       0       0       0       0       0       0       0       0
  1848 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1849 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1850 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1851 ;;Total ram usage:        0 bytes
  1852 ;; Hardware stack levels used: 1
  1853 ;; Hardware stack levels required when called: 2
  1854 ;; This function calls:
  1855 ;;		Nothing
  1856 ;; This function is called by:
  1857 ;;		_SYSTEM_Initialize
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           	psect	text7
  1862  0008F4                     __ptext7:
  1863                           	callstack 0
  1864  0008F4                     _PMD_Initialize:
  1865                           	callstack 27
  1866                           
  1867                           ; BSR set to: 57
  1868                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  1869                           
  1870                           ; BSR set to: 63
  1871                           ;incstack = 0
  1872  0008F4  0E00               	movlw	0
  1873  0008F6  6FC0               	movwf	192,b	;volatile
  1874                           
  1875                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  1876  0008F8  0E00               	movlw	0
  1877  0008FA  6FC1               	movwf	193,b	;volatile
  1878                           
  1879                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  1880  0008FC  0E00               	movlw	0
  1881  0008FE  6FC2               	movwf	194,b	;volatile
  1882                           
  1883                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  1884  000900  0E00               	movlw	0
  1885  000902  6FC3               	movwf	195,b	;volatile
  1886                           
  1887                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  1888  000904  0E00               	movlw	0
  1889  000906  6FC4               	movwf	196,b	;volatile
  1890                           
  1891                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  1892  000908  0E00               	movlw	0
  1893  00090A  6FC5               	movwf	197,b	;volatile
  1894                           
  1895                           ;mcc_generated_files/mcc.c: 89:     PMD6 = 0x00;
  1896  00090C  0E00               	movlw	0
  1897  00090E  6FC6               	movwf	198,b	;volatile
  1898                           
  1899                           ;mcc_generated_files/mcc.c: 91:     PMD7 = 0x00;
  1900  000910  0E00               	movlw	0
  1901  000912  6FC7               	movwf	199,b	;volatile
  1902                           
  1903                           ; BSR set to: 57
  1904  000914  0012               	return		;funcret
  1905  000916                     __end_of_PMD_Initialize:
  1906                           	callstack 0
  1907                           
  1908 ;; *************** function _PIN_MANAGER_Initialize *****************
  1909 ;; Defined at:
  1910 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;		None
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;		None
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      void 
  1917 ;; Registers used:
  1918 ;;		wreg, status,2, status,0, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 3F/39
  1921 ;;		On exit  : 3F/3A
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1924 ;;      Params:         0       0       0       0       0       0       0       0       0
  1925 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1926 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1927 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1928 ;;Total ram usage:        0 bytes
  1929 ;; Hardware stack levels used: 1
  1930 ;; Hardware stack levels required when called: 3
  1931 ;; This function calls:
  1932 ;;		_IOCBF2_SetInterruptHandler
  1933 ;; This function is called by:
  1934 ;;		_SYSTEM_Initialize
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text8
  1939  000616                     __ptext8:
  1940                           	callstack 0
  1941  000616                     _PIN_MANAGER_Initialize:
  1942                           	callstack 26
  1943                           
  1944                           ; BSR set to: 57
  1945                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0xF0;
  1946                           
  1947                           ; BSR set to: 57
  1948                           ;incstack = 0
  1949  000616  0EF0               	movlw	240
  1950  000618  6EBA               	movwf	186,c	;volatile
  1951                           
  1952                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x27;
  1953  00061A  0E27               	movlw	39
  1954  00061C  6EBB               	movwf	187,c	;volatile
  1955                           
  1956                           ; BSR set to: 57
  1957                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0xFF;
  1958  00061E  68BC               	setf	188,c	;volatile
  1959                           
  1960                           ; BSR set to: 57
  1961                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFF;
  1962  000620  68C2               	setf	194,c	;volatile
  1963                           
  1964                           ; BSR set to: 57
  1965                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xFF;
  1966  000622  68C3               	setf	195,c	;volatile
  1967                           
  1968                           ; BSR set to: 57
  1969                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xFF;
  1970  000624  68C4               	setf	196,c	;volatile
  1971                           
  1972                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x00;
  1973  000626  0E00               	movlw	0
  1974  000628  013A               	movlb	58	; () banked
  1975  00062A  6F60               	movwf	96,b	;volatile
  1976                           
  1977                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0x00;
  1978  00062C  0E00               	movlw	0
  1979  00062E  6F50               	movwf	80,b	;volatile
  1980                           
  1981                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x07;
  1982  000630  0E07               	movlw	7
  1983  000632  6F40               	movwf	64,b	;volatile
  1984                           
  1985                           ;mcc_generated_files/pin_manager.c: 83:     WPUE = 0x00;
  1986  000634  0E00               	movlw	0
  1987  000636  6F81               	movwf	129,b	;volatile
  1988                           
  1989                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x27;
  1990  000638  0E27               	movlw	39
  1991  00063A  6F51               	movwf	81,b	;volatile
  1992                           
  1993                           ;mcc_generated_files/pin_manager.c: 85:     WPUA = 0xF0;
  1994  00063C  0EF0               	movlw	240
  1995  00063E  6F41               	movwf	65,b	;volatile
  1996                           
  1997                           ; BSR set to: 58
  1998                           ;mcc_generated_files/pin_manager.c: 86:     WPUC = 0xFF;
  1999  000640  6961               	setf	97,b	;volatile
  2000                           
  2001                           ;mcc_generated_files/pin_manager.c: 91:     RB1I2C = 0x00;
  2002  000642  0E00               	movlw	0
  2003  000644  6F5A               	movwf	90,b	;volatile
  2004                           
  2005                           ;mcc_generated_files/pin_manager.c: 92:     RB2I2C = 0x00;
  2006  000646  0E00               	movlw	0
  2007  000648  6F5B               	movwf	91,b	;volatile
  2008                           
  2009                           ;mcc_generated_files/pin_manager.c: 93:     RC3I2C = 0x00;
  2010  00064A  0E00               	movlw	0
  2011  00064C  6F6A               	movwf	106,b	;volatile
  2012                           
  2013                           ;mcc_generated_files/pin_manager.c: 94:     RC4I2C = 0x00;
  2014  00064E  0E00               	movlw	0
  2015  000650  6F6B               	movwf	107,b	;volatile
  2016                           
  2017                           ;mcc_generated_files/pin_manager.c: 99:     ODCONA = 0x00;
  2018  000652  0E00               	movlw	0
  2019  000654  6F42               	movwf	66,b	;volatile
  2020                           
  2021                           ;mcc_generated_files/pin_manager.c: 100:     ODCONB = 0x00;
  2022  000656  0E00               	movlw	0
  2023  000658  6F52               	movwf	82,b	;volatile
  2024                           
  2025                           ;mcc_generated_files/pin_manager.c: 101:     ODCONC = 0x18;
  2026  00065A  0E18               	movlw	24
  2027  00065C  6F62               	movwf	98,b	;volatile
  2028                           
  2029                           ; BSR set to: 58
  2030                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONA = 0xFF;
  2031  00065E  6943               	setf	67,b	;volatile
  2032                           
  2033                           ; BSR set to: 58
  2034                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONB = 0xFF;
  2035  000660  6953               	setf	83,b	;volatile
  2036                           
  2037                           ; BSR set to: 58
  2038                           ;mcc_generated_files/pin_manager.c: 108:     SLRCONC = 0xFF;
  2039  000662  6963               	setf	99,b	;volatile
  2040                           
  2041                           ; BSR set to: 58
  2042                           ;mcc_generated_files/pin_manager.c: 113:     INLVLA = 0xFF;
  2043  000664  6944               	setf	68,b	;volatile
  2044                           
  2045                           ; BSR set to: 58
  2046                           ;mcc_generated_files/pin_manager.c: 114:     INLVLB = 0xFF;
  2047  000666  6954               	setf	84,b	;volatile
  2048                           
  2049                           ; BSR set to: 58
  2050                           ;mcc_generated_files/pin_manager.c: 115:     INLVLC = 0xFF;
  2051  000668  6964               	setf	100,b	;volatile
  2052                           
  2053                           ;mcc_generated_files/pin_manager.c: 116:     INLVLE = 0x08;
  2054  00066A  0E08               	movlw	8
  2055  00066C  6F84               	movwf	132,b	;volatile
  2056                           
  2057                           ; BSR set to: 58
  2058                           ;mcc_generated_files/pin_manager.c: 123:     IOCBFbits.IOCBF2 = 0;
  2059  00066E  9557               	bcf	87,2,b	;volatile
  2060                           
  2061                           ; BSR set to: 58
  2062                           ;mcc_generated_files/pin_manager.c: 125:     IOCBNbits.IOCBN2 = 1;
  2063  000670  8556               	bsf	86,2,b	;volatile
  2064                           
  2065                           ; BSR set to: 58
  2066                           ;mcc_generated_files/pin_manager.c: 127:     IOCBPbits.IOCBP2 = 0;
  2067  000672  9555               	bcf	85,2,b	;volatile
  2068                           
  2069                           ; BSR set to: 58
  2070                           ;mcc_generated_files/pin_manager.c: 132:     IOCBF2_SetInterruptHandler(IOCBF2_DefaultIn
      +                          terruptHandler);
  2071  000674  0E00               	movlw	0
  2072  000676  6E52               	movwf	IOCBF2_SetInterruptHandler@InterruptHandler^0,c
  2073  000678  0E00               	movlw	0
  2074  00067A  6E53               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+1)^0,c
  2075  00067C  ECC8  F004         	call	_IOCBF2_SetInterruptHandler	;wreg free
  2076                           
  2077                           ; BSR set to: 58
  2078                           ;mcc_generated_files/pin_manager.c: 134:     SMT1SIGPPS = 0x0A;
  2079  000680  0E0A               	movlw	10
  2080  000682  6FD2               	movwf	210,b	;volatile
  2081                           
  2082                           ; BSR set to: 58
  2083  000684  0012               	return		;funcret
  2084  000686                     __end_of_PIN_MANAGER_Initialize:
  2085                           	callstack 0
  2086                           
  2087 ;; *************** function _IOCBF2_SetInterruptHandler *****************
  2088 ;; Defined at:
  2089 ;;		line 164 in file "mcc_generated_files/pin_manager.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  InterruptHan    2    6[COMRAM] PTR FTN()void 
  2092 ;;		 -> IOCBF2_DefaultInterruptHandler(1), 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;		None
  2095 ;; Return value:  Size  Location     Type
  2096 ;;                  1    wreg      void 
  2097 ;; Registers used:
  2098 ;;		wreg, status,2, status,0
  2099 ;; Tracked objects:
  2100 ;;		On entry : 3F/3A
  2101 ;;		On exit  : 3F/3A
  2102 ;;		Unchanged: 3F/0
  2103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2104 ;;      Params:         2       0       0       0       0       0       0       0       0
  2105 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2106 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2107 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2108 ;;Total ram usage:        2 bytes
  2109 ;; Hardware stack levels used: 1
  2110 ;; Hardware stack levels required when called: 2
  2111 ;; This function calls:
  2112 ;;		Nothing
  2113 ;; This function is called by:
  2114 ;;		_PIN_MANAGER_Initialize
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           	psect	text9
  2119  000990                     __ptext9:
  2120                           	callstack 0
  2121  000990                     _IOCBF2_SetInterruptHandler:
  2122                           	callstack 26
  2123                           
  2124                           ; BSR set to: 58
  2125                           ;mcc_generated_files/pin_manager.c: 165:     IOCBF2_InterruptHandler = InterruptHandler;
  2126                           
  2127                           ; BSR set to: 58
  2128                           ;incstack = 0
  2129  000990  C052  F0DD         	movff	IOCBF2_SetInterruptHandler@InterruptHandler,_IOCBF2_InterruptHandler
  2130  000994  C053  F0DE         	movff	IOCBF2_SetInterruptHandler@InterruptHandler+1,_IOCBF2_InterruptHandler+1
  2131                           
  2132                           ; BSR set to: 58
  2133  000998  0012               	return		;funcret
  2134  00099A                     __end_of_IOCBF2_SetInterruptHandler:
  2135                           	callstack 0
  2136                           
  2137 ;; *************** function _OSCILLATOR_Initialize *****************
  2138 ;; Defined at:
  2139 ;;		line 60 in file "mcc_generated_files/mcc.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;		None
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;		None
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  1    wreg      void 
  2146 ;; Registers used:
  2147 ;;		wreg, status,2
  2148 ;; Tracked objects:
  2149 ;;		On entry : 3F/3A
  2150 ;;		On exit  : 3F/39
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2153 ;;      Params:         0       0       0       0       0       0       0       0       0
  2154 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2155 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2156 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2157 ;;Total ram usage:        0 bytes
  2158 ;; Hardware stack levels used: 1
  2159 ;; Hardware stack levels required when called: 2
  2160 ;; This function calls:
  2161 ;;		Nothing
  2162 ;; This function is called by:
  2163 ;;		_SYSTEM_Initialize
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           	psect	text10
  2168  000968                     __ptext10:
  2169                           	callstack 0
  2170  000968                     _OSCILLATOR_Initialize:
  2171                           	callstack 27
  2172                           
  2173                           ; BSR set to: 58
  2174                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x60;
  2175                           
  2176                           ; BSR set to: 58
  2177                           ;incstack = 0
  2178  000968  0E60               	movlw	96
  2179  00096A  0139               	movlb	57	; () banked
  2180  00096C  6FD9               	movwf	217,b	;volatile
  2181                           
  2182                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  2183  00096E  0E00               	movlw	0
  2184  000970  6FDB               	movwf	219,b	;volatile
  2185                           
  2186                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  2187  000972  0E00               	movlw	0
  2188  000974  6FDD               	movwf	221,b	;volatile
  2189                           
  2190                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x08;
  2191  000976  0E08               	movlw	8
  2192  000978  6FDF               	movwf	223,b	;volatile
  2193                           
  2194                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  2195  00097A  0E00               	movlw	0
  2196  00097C  6FDE               	movwf	222,b	;volatile
  2197                           
  2198                           ; BSR set to: 57
  2199  00097E  0012               	return		;funcret
  2200  000980                     __end_of_OSCILLATOR_Initialize:
  2201                           	callstack 0
  2202                           
  2203 ;; *************** function _INTERRUPT_Initialize *****************
  2204 ;; Defined at:
  2205 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;		None
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;		None
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  1    wreg      void 
  2212 ;; Registers used:
  2213 ;;		None
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 3F/39
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2219 ;;      Params:         0       0       0       0       0       0       0       0       0
  2220 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2221 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2222 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2223 ;;Total ram usage:        0 bytes
  2224 ;; Hardware stack levels used: 1
  2225 ;; Hardware stack levels required when called: 2
  2226 ;; This function calls:
  2227 ;;		Nothing
  2228 ;; This function is called by:
  2229 ;;		_SYSTEM_Initialize
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           	psect	text11
  2234  00099A                     __ptext11:
  2235                           	callstack 0
  2236  00099A                     _INTERRUPT_Initialize:
  2237                           	callstack 27
  2238                           
  2239                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCON0bits.IPEN = 1;
  2240                           
  2241                           ; BSR set to: 57
  2242                           ;incstack = 0
  2243  00099A  8AD2               	bsf	210,5,c	;volatile
  2244                           
  2245                           ;mcc_generated_files/interrupt_manager.c: 60:     IPR1bits.SMT1PWAIP = 1;
  2246  00099C  0139               	movlb	57	; () banked
  2247  00099E  8F81               	bsf	129,7,b	;volatile
  2248                           
  2249                           ;mcc_generated_files/interrupt_manager.c: 63:     IPR1bits.SMT1PRAIP = 0;
  2250  0009A0  9D81               	bcf	129,6,b	;volatile
  2251                           
  2252                           ; BSR set to: 57
  2253  0009A2  0012               	return		;funcret
  2254  0009A4                     __end_of_INTERRUPT_Initialize:
  2255                           	callstack 0
  2256                           
  2257 ;; *************** function _ADCC_Initialize *****************
  2258 ;; Defined at:
  2259 ;;		line 62 in file "mcc_generated_files/adcc.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;		None
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      void 
  2266 ;; Registers used:
  2267 ;;		wreg, status,2
  2268 ;; Tracked objects:
  2269 ;;		On entry : 3F/39
  2270 ;;		On exit  : 3F/3E
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2273 ;;      Params:         0       0       0       0       0       0       0       0       0
  2274 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2275 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2276 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2277 ;;Total ram usage:        0 bytes
  2278 ;; Hardware stack levels used: 1
  2279 ;; Hardware stack levels required when called: 2
  2280 ;; This function calls:
  2281 ;;		Nothing
  2282 ;; This function is called by:
  2283 ;;		_SYSTEM_Initialize
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           	psect	text12
  2288  0006EC                     __ptext12:
  2289                           	callstack 0
  2290  0006EC                     _ADCC_Initialize:
  2291                           	callstack 27
  2292                           
  2293                           ; BSR set to: 57
  2294                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  2295                           
  2296                           ; BSR set to: 57
  2297                           ;incstack = 0
  2298  0006EC  0E00               	movlw	0
  2299  0006EE  013E               	movlb	62	; () banked
  2300  0006F0  6FDE               	movwf	222,b	;volatile
  2301                           
  2302                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  2303  0006F2  0E00               	movlw	0
  2304  0006F4  6FDF               	movwf	223,b	;volatile
  2305                           
  2306                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  2307  0006F6  0E00               	movlw	0
  2308  0006F8  6FE0               	movwf	224,b	;volatile
  2309                           
  2310                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  2311  0006FA  0E00               	movlw	0
  2312  0006FC  6FE1               	movwf	225,b	;volatile
  2313                           
  2314                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  2315  0006FE  0E00               	movlw	0
  2316  000700  6FE4               	movwf	228,b	;volatile
  2317                           
  2318                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  2319  000702  0E00               	movlw	0
  2320  000704  6FE5               	movwf	229,b	;volatile
  2321                           
  2322                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
  2323  000706  0E00               	movlw	0
  2324  000708  6FEA               	movwf	234,b	;volatile
  2325                           
  2326                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
  2327  00070A  0E00               	movlw	0
  2328  00070C  6FEC               	movwf	236,b	;volatile
  2329                           
  2330                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  2331  00070E  0E00               	movlw	0
  2332  000710  6FF1               	movwf	241,b	;volatile
  2333                           
  2334                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x10;
  2335  000712  0E10               	movlw	16
  2336  000714  6FF3               	movwf	243,b	;volatile
  2337                           
  2338                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x00;
  2339  000716  0E00               	movlw	0
  2340  000718  6FF4               	movwf	244,b	;volatile
  2341                           
  2342                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
  2343  00071A  0E00               	movlw	0
  2344  00071C  6FF5               	movwf	245,b	;volatile
  2345                           
  2346                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
  2347  00071E  0E00               	movlw	0
  2348  000720  6FF6               	movwf	246,b	;volatile
  2349                           
  2350                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
  2351  000722  0E00               	movlw	0
  2352  000724  6FF7               	movwf	247,b	;volatile
  2353                           
  2354                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
  2355  000726  0E00               	movlw	0
  2356  000728  6FF9               	movwf	249,b	;volatile
  2357                           
  2358                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
  2359  00072A  0E00               	movlw	0
  2360  00072C  6FFA               	movwf	250,b	;volatile
  2361                           
  2362                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
  2363  00072E  0E00               	movlw	0
  2364  000730  6FFB               	movwf	251,b	;volatile
  2365                           
  2366                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
  2367  000732  0E00               	movlw	0
  2368  000734  6FFC               	movwf	252,b	;volatile
  2369                           
  2370                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
  2371  000736  0E00               	movlw	0
  2372  000738  6FFD               	movwf	253,b	;volatile
  2373                           
  2374                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
  2375  00073A  0E00               	movlw	0
  2376  00073C  6FFE               	movwf	254,b	;volatile
  2377                           
  2378                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x01;
  2379  00073E  0E01               	movlw	1
  2380  000740  6FFF               	movwf	255,b	;volatile
  2381                           
  2382                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
  2383  000742  0E84               	movlw	132
  2384  000744  6FF8               	movwf	248,b	;volatile
  2385                           
  2386                           ; BSR set to: 62
  2387  000746  0012               	return		;funcret
  2388  000748                     __end_of_ADCC_Initialize:
  2389                           	callstack 0
  2390                           
  2391 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  2392 ;; Defined at:
  2393 ;;		line 70 in file "mcc_generated_files/interrupt_manager.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;		None
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;		None
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  1    wreg      void 
  2400 ;; Registers used:
  2401 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, bsr, status,2, status,0, pcl, pclath, pclatu, btemp, b
      +temp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, 
      +btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, 
      +btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, cs
      +tack
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2407 ;;      Params:         0       0       0       0       0       0       0       0       0
  2408 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2409 ;;      Temps:          6       0       0       0       0       0       0       0       0
  2410 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2411 ;;Total ram usage:        6 bytes
  2412 ;; Hardware stack levels used: 1
  2413 ;; Hardware stack levels required when called: 1
  2414 ;; This function calls:
  2415 ;;		_bitgrabber
  2416 ;; This function is called by:
  2417 ;;		Interrupt level 2
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421                           	psect	text13
  2422  000686                     __ptext13:
  2423                           	callstack 0
  2424  000686                     _INTERRUPT_InterruptManagerHigh:
  2425                           	callstack 26
  2426                           
  2427                           ; BSR set to: 62
  2428                           ;incstack = 0
  2429  000686  006F FFE8  F04C    	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  2430  00068C  006F FFEC  F04D    	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  2431  000692  006F FFD8  F04E    	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+2
  2432  000698  006F FFDC  F04F    	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+3
  2433  00069E  006F FFE0  F050    	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+4
  2434  0006A4  006F FFD4  F051    	movff	tablat,??_INTERRUPT_InterruptManagerHigh+5
  2435                           
  2436                           ;mcc_generated_files/interrupt_manager.c: 73:     if(PIE1bits.SMT1PWAIE == 1 && PIR1bits
      +                          .SMT1PWAIF == 1)
  2437  0006AA  0139               	movlb	57	; () banked
  2438  0006AC  BF91               	btfsc	145,7,b	;volatile
  2439                           
  2440                           ; BSR set to: 57
  2441  0006AE  AFA1               	btfss	161,7,b	;volatile
  2442  0006B0  D00A               	goto	i2l553
  2443                           
  2444                           ; BSR set to: 57
  2445                           ;mcc_generated_files/interrupt_manager.c: 74:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 75:         PIR1bits.SMT1PWAIF = 0;
  2446  0006B2  9FA1               	bcf	161,7,b	;volatile
  2447                           
  2448                           ;mcc_generated_files/interrupt_manager.c: 76:         gInPulseWidth = SMT1CPWL;
  2449  0006B4  006F FC60  F02E    	movff	16152,_gInPulseWidth	;volatile
  2450                           
  2451                           ;mcc_generated_files/interrupt_manager.c: 77:         if (gInStatus & (1 << 2))
  2452  0006BA  A42B               	btfss	_gInStatus^0,2,c	;volatile
  2453  0006BC  D002               	goto	i2l2259
  2454                           
  2455                           ; BSR set to: 57
  2456  0006BE  942B               	bcf	_gInStatus,2,c	;# 
  2457  0006C0  922B               	bcf	_gInStatus,1,c	;# 
  2458  0006C2                     i2l2259:
  2459                           
  2460                           ;mcc_generated_files/interrupt_manager.c: 83:         bitgrabber();
  2461  0006C2  ECCF  F003         	call	_bitgrabber	;wreg free
  2462  0006C6                     i2l553:
  2463  0006C6  0060  F147  FFF5   	movff	??_INTERRUPT_InterruptManagerHigh+5,tablat
  2464  0006CC  0060  F143  FFF8   	movff	??_INTERRUPT_InterruptManagerHigh+4,tblptru
  2465  0006D2  0060  F13F  FFF7   	movff	??_INTERRUPT_InterruptManagerHigh+3,tblptrh
  2466  0006D8  0060  F13B  FFF6   	movff	??_INTERRUPT_InterruptManagerHigh+2,tblptrl
  2467  0006DE  0060  F137  FFFB   	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  2468  0006E4  0060  F133  FFFA   	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  2469  0006EA  0011               	retfie		f
  2470  0006EC                     __end_of_INTERRUPT_InterruptManagerHigh:
  2471                           	callstack 0
  2472                           
  2473                           ;
  2474                           ; Interrupt Vector Table @ 0x8
  2475                           ;
  2476                           
  2477                           	psect	ivt0x8
  2478  000008                     __pivt0x8:
  2479                           	callstack 0
  2480  000008                     ivt0x8_base:
  2481                           	callstack 0
  2482                           
  2483                           ; high-priority vector
  2484  000008  EF43  F003         	goto	_INTERRUPT_InterruptManagerHigh
  2485  000018                     	org	16
  2486                           
  2487                           ; low-priority vector
  2488  000018  00FF               	reset	
  2489  0000                     
  2490                           	psect	rparam
  2491  0000                     
  2492                           	psect	idloc
  2493                           
  2494                           ;Config register IDLOC0 @ 0x200000
  2495                           ;	unspecified, using default values
  2496  200000                     	org	2097152
  2497  200000  0FFF               	dw	4095
  2498                           
  2499                           ;Config register IDLOC1 @ 0x200002
  2500                           ;	unspecified, using default values
  2501  200002                     	org	2097154
  2502  200002  0FFF               	dw	4095
  2503                           
  2504                           ;Config register IDLOC2 @ 0x200004
  2505                           ;	unspecified, using default values
  2506  200004                     	org	2097156
  2507  200004  0FFF               	dw	4095
  2508                           
  2509                           ;Config register IDLOC3 @ 0x200006
  2510                           ;	unspecified, using default values
  2511  200006                     	org	2097158
  2512  200006  0FFF               	dw	4095
  2513                           
  2514                           ;Config register IDLOC4 @ 0x200008
  2515                           ;	unspecified, using default values
  2516  200008                     	org	2097160
  2517  200008  0FFF               	dw	4095
  2518                           
  2519                           ;Config register IDLOC5 @ 0x20000A
  2520                           ;	unspecified, using default values
  2521  20000A                     	org	2097162
  2522  20000A  0FFF               	dw	4095
  2523                           
  2524                           ;Config register IDLOC6 @ 0x20000C
  2525                           ;	unspecified, using default values
  2526  20000C                     	org	2097164
  2527  20000C  0FFF               	dw	4095
  2528                           
  2529                           ;Config register IDLOC7 @ 0x20000E
  2530                           ;	unspecified, using default values
  2531  20000E                     	org	2097166
  2532  20000E  0FFF               	dw	4095
  2533                           
  2534                           	psect	config
  2535                           
  2536                           ;Config register CONFIG1L @ 0x300000
  2537                           ;	External Oscillator Selection
  2538                           ;	FEXTOSC = OFF, Oscillator not enabled
  2539                           ;	Reset Oscillator Selection
  2540                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  2541  300000                     	org	3145728
  2542  300000  8C                 	db	140
  2543                           
  2544                           ;Config register CONFIG1H @ 0x300001
  2545                           ;	Clock out Enable bit
  2546                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2547                           ;	PRLOCKED One-Way Set Enable bit
  2548                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  2549                           ;	Clock Switch Enable bit
  2550                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2551                           ;	Fail-Safe Clock Monitor Enable bit
  2552                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2553  300001                     	org	3145729
  2554  300001  FF                 	db	255
  2555                           
  2556                           ;Config register CONFIG2L @ 0x300002
  2557                           ;	MCLR Enable bit
  2558                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2559                           ;	Power-up timer selection bits
  2560                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  2561                           ;	Multi-vector enable bit
  2562                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  2563                           ;	IVTLOCK bit One-way set enable bit
  2564                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  2565                           ;	Low Power BOR Enable bit
  2566                           ;	LPBOREN = OFF, ULPBOR disabled
  2567                           ;	Brown-out Reset Enable bits
  2568                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  2569  300002                     	org	3145730
  2570  300002  F7                 	db	247
  2571                           
  2572                           ;Config register CONFIG2H @ 0x300003
  2573                           ;	Brown-out Reset Voltage Selection bits
  2574                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  2575                           ;	ZCD Disable bit
  2576                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  2577                           ;	PPSLOCK bit One-Way Set Enable bit
  2578                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  2579                           ;	Stack Full/Underflow Reset Enable bit
  2580                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2581                           ;	Debugger Enable bit
  2582                           ;	DEBUG = ON, Background debugger enabled
  2583                           ;	Extended Instruction Set Enable bit
  2584                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2585  300003                     	org	3145731
  2586  300003  DF                 	db	223
  2587                           
  2588                           ;Config register CONFIG3L @ 0x300004
  2589                           ;	WDT Period selection bits
  2590                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2591                           ;	WDT operating mode
  2592                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2593  300004                     	org	3145732
  2594  300004  9F                 	db	159
  2595                           
  2596                           ;Config register CONFIG3H @ 0x300005
  2597                           ;	WDT Window Select bits
  2598                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2599                           ;	WDT input clock selector
  2600                           ;	WDTCCS = SC, Software Control
  2601  300005                     	org	3145733
  2602  300005  FF                 	db	255
  2603                           
  2604                           ;Config register CONFIG4L @ 0x300006
  2605                           ;	Boot Block Size selection bits
  2606                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2607                           ;	Boot Block enable bit
  2608                           ;	BBEN = OFF, Boot block disabled
  2609                           ;	Storage Area Flash enable bit
  2610                           ;	SAFEN = OFF, SAF disabled
  2611                           ;	Application Block write protection bit
  2612                           ;	WRTAPP = OFF, Application Block not write protected
  2613  300006                     	org	3145734
  2614  300006  FF                 	db	255
  2615                           
  2616                           ;Config register CONFIG4H @ 0x300007
  2617                           ;	Configuration Register Write Protection bit
  2618                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
  2619                           ;	Boot Block Write Protection bit
  2620                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
  2621                           ;	Data EEPROM Write Protection bit
  2622                           ;	WRTD = OFF, Data EEPROM not write-protected
  2623                           ;	SAF Write protection bit
  2624                           ;	WRTSAF = OFF, SAF not Write Protected
  2625                           ;	Low Voltage Programming Enable bit
  2626                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  2627  300007                     	org	3145735
  2628  300007  FF                 	db	255
  2629                           
  2630                           ;Config register CONFIG5L @ 0x300008
  2631                           ;	PFM and Data EEPROM Code Protection bit
  2632                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2633  300008                     	org	3145736
  2634  300008  FF                 	db	255
  2635                           
  2636                           ;Config register CONFIG5H @ 0x300009
  2637                           ;	unspecified, using default values
  2638  300009                     	org	3145737
  2639  300009  FF                 	db	255
  2640                           tosu	equ	0x3FFF
  2641                           tosh	equ	0x3FFE
  2642                           tosl	equ	0x3FFD
  2643                           stkptr	equ	0x3FFC
  2644                           pclatu	equ	0x3FFB
  2645                           pclath	equ	0x3FFA
  2646                           pcl	equ	0x3FF9
  2647                           tblptru	equ	0x3FF8
  2648                           tblptrh	equ	0x3FF7
  2649                           tblptrl	equ	0x3FF6
  2650                           tablat	equ	0x3FF5
  2651                           prodh	equ	0x3FF4
  2652                           prodl	equ	0x3FF3
  2653                           indf0	equ	0x3FEF
  2654                           postinc0	equ	0x3FEE
  2655                           postdec0	equ	0x3FED
  2656                           preinc0	equ	0x3FEC
  2657                           plusw0	equ	0x3FEB
  2658                           fsr0h	equ	0x3FEA
  2659                           fsr0l	equ	0x3FE9
  2660                           wreg	equ	0x3FE8
  2661                           indf1	equ	0x3FE7
  2662                           postinc1	equ	0x3FE6
  2663                           postdec1	equ	0x3FE5
  2664                           preinc1	equ	0x3FE4
  2665                           plusw1	equ	0x3FE3
  2666                           fsr1h	equ	0x3FE2
  2667                           fsr1l	equ	0x3FE1
  2668                           bsr	equ	0x3FE0
  2669                           indf2	equ	0x3FDF
  2670                           postinc2	equ	0x3FDE
  2671                           postdec2	equ	0x3FDD
  2672                           preinc2	equ	0x3FDC
  2673                           plusw2	equ	0x3FDB
  2674                           fsr2h	equ	0x3FDA
  2675                           fsr2l	equ	0x3FD9
  2676                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        113
    BSS         184
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      89
    BANK0           160      6     127
    BANK1           256      0     103
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    IOCBF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCBF2_DefaultInterruptHandler(), 

    IOCBF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCBF2_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _scansticks->_slinjim
    _slinjim->___wmul
    _PIN_MANAGER_Initialize->_IOCBF2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_scansticks
    _scansticks->_slinjim

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     865
                  _SYSTEM_Initialize
                        _bytecleanup
                           _bytepush
                       _checkbuttons
                      _commandreader
                         _scansticks
 ---------------------------------------------------------------------------------
 (1) _scansticks                                           2     2      0     767
                                              4 BANK0      2     2      0
                            _slinjim
 ---------------------------------------------------------------------------------
 (2) _slinjim                                              6     2      4     767
                                             12 COMRAM     2     2      0
                                              0 BANK0      4     0      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     311
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _commandreader                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkbuttons                                         1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _bytepush                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bytecleanup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                    _ADCC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SMT1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0      98
         _IOCBF2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF2_SetInterruptHandler                           2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManagerHigh                       6     6      0       0
                                              0 COMRAM     6     6      0
                         _bitgrabber
 ---------------------------------------------------------------------------------
 (5) _bitgrabber                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF2_SetInterruptHandler
     _PMD_Initialize
     _SMT1_Initialize
   _bytecleanup
   _bytepush
   _checkbuttons
   _commandreader
   _scansticks
     _slinjim
       ___wmul

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _bitgrabber

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      44        0.0%
BITBIGSFRhhhhlh    40B      0       0      27        0.0%
BITBIGSFRllll      181      0       0      42        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      67       7       40.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      6      7F       5       79.4%
BITBIGSFRhhhhlh     96      0       0      24        0.0%
BITBIGSFRhhhhll     60      0       0      35        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      E      59       1       93.7%
BITBIGSFRhhhhlh     4D      0       0      28        0.0%
BITBIGSFRhhhhhh     2D      0       0      20        0.0%
BITBIGSFRllhh       1E      0       0      39        0.0%
BITBIGSFRhhhhlh     15      0       0      30        0.0%
BITBIGSFRhhhhlh     12      0       0      25        0.0%
BITBIGSFRlh         11      0       0      38        0.0%
BITBIGSFRlllh        F      0       0      41        0.0%
BITBIGSFRllhl        F      0       0      40        0.0%
BITBIGSFRhhhhll      B      0       0      34        0.0%
BITBIGSFRhhhhhh      5      0       0      21        0.0%
BITBIGSFRhhhhlh      5      0       0      31        0.0%
BITBIGSFRhhhhhh      5      0       0      22        0.0%
BITBIGSFRhhhhhl      5      0       0      23        0.0%
BITBIGSFRhhhhll      4      0       0      32        0.0%
BITBIGSFRhhhhll      2      0       0      33        0.0%
BITBIGSFRhhhhlh      2      0       0      29        0.0%
BITBIGSFRhhhhlh      1      0       0      26        0.0%
BITBIGSFRhhl         1      0       0      36        0.0%
BITBIGSFRhl          1      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13F      43        0.0%
DATA                 0      0     13F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed Jan 12 14:48:34 2022

                                        u90 04A2                         ___wmul@multiplicand 0054  
                            ?_commandreader 004C                                         WREG 003FE8  
                                       u110 04B4                                         u210 050C  
                                       u130 04C6                                         u108 04A4  
                                       u310 0560                                         u230 051C  
                                       u150 04D8                                         u240 051E  
                                       u208 04FC                                         u128 04B6  
                                       u330 0570                                         u250 052A  
                                       u170 04E8                                         u340 0572  
                                       u308 0550                                         u228 050E  
                                       u180 04EA                                         u148 04C8  
                                       u270 053C                                         u190 04FA  
                                       u328 0562                                         u168 04DA  
                                       u290 054E                                         u268 052C  
                                       u288 053E                                         wreg 003FE8  
                      __end_of_checkbuttons 0576                                        l1160 026E  
                                      l1173 030E                                        l1169 028C  
                                      l2239 0498                                        l2613 0336  
                                      l2621 03B0                                        l2605 02D0  
                                      l2631 0424                                        l2615 035E  
                                      l2623 03D8                                        l2617 0386  
                                      l2637 044A                                        l2629 03FE  
                                      l2639 0474                                        l2585 027C  
                                      l2665 0828                                        l2587 0280  
                                      l2589 0284                                        l2597 029A  
                                      l2599 02C4                                        _LATA 003FBA  
                                      _LATB 003FBB                                        _LATC 003FBC  
                                      _PMD0 0039C0                                        _PMD1 0039C1  
                                      _PMD2 0039C2                                        _PMD3 0039C3  
                                      _PMD4 0039C4                                        _PMD5 0039C5  
                                      _PMD6 0039C6                                        _PMD7 0039C7  
                                      _WPUA 003A41                                        _WPUB 003A51  
                                      _WPUC 003A61                                        _WPUE 003A81  
                                      _main 0812                                        fsr2h 003FDA  
                                      indf2 003FDF                                        fsr1l 003FE1  
                                      fsr2l 003FD9                                        prodh 003FF4  
                                      prodl 003FF3                                        start 001A  
                              ___param_bank 000000               __end_of_OSCILLATOR_Initialize 0980  
                              ?_bytecleanup 004C                                       _ADACT 003EFE  
                                     _ADCAP 003EF5                                       ?_main 004C  
                                     _ADCLK 003EFF                                       _ADCNT 003EEB  
                                     _ADPCH 003EF1                                       _ADREF 003EFD  
                                     _ADRPT 003EEC                     _stickIdx@joysticks$F595 0025  
                   _stickIdx@joysticks$F839 0021                                       i2l553 06C6  
                                     _OSCEN 0039DD                                       _TRISA 003FC2  
                                     _TRISB 003FC3                                       _TRISC 003FC4  
                             _gLowThreshold 0049                   _tmpcenter@joysticks$F1407 0086  
                 _tmpcenter@joysticks$F1633 0005                   _tmpcenter@joysticks$F1474 007C  
                 _tmpcenter@joysticks$F1845 0072                   _tmpcenter@joysticks$F1943 0068  
                          ?_SMT1_Initialize 004C                                       pclath 003FFA  
                                     pclatu 003FFB                                       tablat 003FF5  
                           __end_of_slinjim 0934                                       status 003FD8  
                   _tmphighm@joysticks$F593 0098                     _tmphighm@joysticks$F837 008E  
                           __initialization 0576                                __end_of_main 0844  
             _initiatedRead@joysticks$F1411 001C               _initiatedRead@joysticks$F1637 0014  
             _initiatedRead@joysticks$F1478 0017               _initiatedRead@joysticks$F1849 0011  
             _initiatedRead@joysticks$F1947 000E                             ??_commandreader 004C  
                                    ??_main 005A                               __activetblptr 000002  
                   _tmphigh@joysticks$F1405 008A                     _tmphigh@joysticks$F1631 0009  
                   _tmphigh@joysticks$F1472 0080                     _tmphigh@joysticks$F1843 0076  
                   _tmphigh@joysticks$F1941 006C                                      _ADACCH 003EE9  
                                    _ADACCL 003EE8                                      _ADACCU 003EEA  
                                    _ADACQH 003EF4                                      _ADACQL 003EF3  
              ??_IOCBF2_SetInterruptHandler 0054                                      _ADCON0 003EF8  
                                    _ADCON1 003EF9                                      _ADCON2 003EFA  
                                    _ADCON3 003EFB                                      _ADERRH 003EE3  
                                    _ADERRL 003EE2                                      _ADLTHH 003EDF  
                                    _ADLTHL 003EDE                                      _ADRESH 003EF0  
                                    _ADRESL 003EEF                                      _ADPREH 003EF7  
                                    _ADPREL 003EF6                    _stickIdx@joysticks$F1410 001D  
                                    _ADSTAT 003EFC                    _stickIdx@joysticks$F1636 0015  
                  _stickIdx@joysticks$F1477 0018                    _stickIdx@joysticks$F1848 0012  
                  _stickIdx@joysticks$F1946 000F                                      _ADUTHH 003EE1  
                                    _ADUTHL 003EE0                                      _ANSELA 003A40  
                                    _ANSELB 003A50                                      _ANSELC 003A60  
                                    _RB1I2C 003A5A                                      _RB2I2C 003A5B  
                                    _RC3I2C 003A6A                                      _RC4I2C 003A6B  
                                    _ODCONA 003A42                                      _ODCONB 003A52  
                                    _ODCONC 003A62                                      i2l2259 06C2  
                                    _INLVLA 003A44                                      _INLVLB 003A54  
                                    _INLVLC 003A64                                      _INLVLE 003A84  
                                    _OSCFRQ 0039DF                                      ___wmul 08CA  
                         _sx_highMultiplier 00C9                             slinjim@dividend 00D7  
                                    _cx_low 00D5                                      _cy_low 00CF  
                                _gConOutIdx 0030                                      clear_0 05E2  
                                    clear_1 05EE                                      clear_2 05FA  
                                    isa$std 000001                                      _tmplow 00A6  
                                    _sx_low 0045                                      _sy_low 003F  
                           _ADCC_Initialize 06EC                              _PMD_Initialize 08F4  
                              __pdataCOMRAM 0033                                      tblptrh 003FF7  
                                    tblptrl 003FF6                                      tblptru 003FF8  
                                 ??_slinjim 0058  IOCBF2_SetInterruptHandler@InterruptHandler 0052  
          ??_INTERRUPT_InterruptManagerHigh 004C             ?_INTERRUPT_InterruptManagerHigh 004C  
                         _SYSTEM_Initialize 0934                                  __accesstop 0060  
                   __end_of__initialization 060C                          ?_SYSTEM_Initialize 004C  
                             ___rparam_used 000001                    _tmphighm@joysticks$F1408 0084  
                  _tmphighm@joysticks$F1634 0003                    _tmphighm@joysticks$F1475 007A  
                  _tmphighm@joysticks$F1846 0070                    _tmphighm@joysticks$F1944 0066  
                  _tmpcenter@joysticks$F592 009A                    _tmpcenter@joysticks$F836 0090  
                            __pcstackCOMRAM 004C                                _checkbuttons 0482  
                              __pidataBANK0 0844                                __pidataBANK1 089E  
                       ??_SYSTEM_Initialize 0054                              _gConBitCounter 004B  
                          _sx_lowMultiplier 00C7                      __end_of_PMD_Initialize 0916  
                 __end_of_SYSTEM_Initialize 094E                                  __pbssBANK0 0060  
                                __pbssBANK1 0100                              _gInCommandByte 002D  
                                   IVTBASEH 003FD6                                     IVTBASEL 003FD5  
                                   IVTBASEU 003FD7                               _initiatedRead 0029  
                                   ?___wmul 0052                     __end_of_ADCC_Initialize 0748  
                                   _ADFLTRH 003EE7                                     _ADFLTRL 003EE6  
                                   _ADPREVH 003EEE                                     _ADPREVL 003EED  
                                _bitgrabber 079E                                     _ADSTPTH 003EE5  
                                   _ADSTPTL 003EE4                             ?_PMD_Initialize 004C  
                          _gCommandPollMask 0047                                     _OSCCON1 0039D9  
                                   _OSCCON3 0039DB          __end_of_IOCBF2_SetInterruptHandler 099A  
                _IOCBF2_SetInterruptHandler 0990                                     _SMT1CLK 003F21  
                                   _OSCTUNE 0039DE                                     _SMT1CPR 003F15  
                                   _SMT1CPW 003F18                                     _SMT1SIG 003F22  
                                   _SMT1PRH 003F1C                                     _SMT1PRL 003F1B  
                                   _SMT1PRU 003F1D                                     _SMT1TMR 003F12  
                                   _SMT1WIN 003F23                                     _SLRCONA 003A43  
                                   _SLRCONB 003A53                                     _SLRCONC 003A63  
                                 ?_bytepush 004C                                     __Hparam 0000  
                                   __Lparam 0000                                     _a_value 00B9  
                                   _b_value 00B7                                     __pcinit 0576  
                                   __ramtop 0800                           _cy_highMultiplier 00BD  
                                   __ptext0 0812                                     __ptext1 0252  
                                   __ptext2 0916                                     __ptext3 08CA  
                                   __ptext4 0482                                     __ptext5 0934  
                                   __ptext6 0872                                     __ptext7 08F4  
                                   __ptext8 0616                                     __ptext9 0990  
                            _gConPollPacket 0033                                     _cx_high 00D1  
                        _gCommandOriginMask 0048                                     _cy_high 00CB  
                     _OSCILLATOR_Initialize 0968                             _gInBitBufferIdx 002F  
                  _clearRead@joysticks$F841 001F                    _clearRead@joysticks$F597 0023  
                               _gConOutByte 0032                    ??_PIN_MANAGER_Initialize 0054  
                               _SettingData 013C                                   _IOCBFbits 003A57  
                                 _IOCBNbits 003A56                                   _IOCBPbits 003A55  
                                   _testLow 0019                                     _slinjim 0916  
                                   _tmphigh 00A8                                     _sx_high 0041  
                                   _sy_high 003B                                     _tmplowm 00A0  
                                _scansticks 0252                   _clearRead@joysticks$F1412 001B  
                 _clearRead@joysticks$F1638 0013                   _clearRead@joysticks$F1479 0016  
                 _clearRead@joysticks$F1850 0010                   _clearRead@joysticks$F1948 000D  
                      end_of_initialization 060C                               __Lmediumconst 0000  
                                ??_bytepush 004C                                     postdec1 003FE5  
                                   postinc0 003FEE                            ?_ADCC_Initialize 004C  
                               ?_bitgrabber 004C                                   _PORTAbits 003FCA  
                                 _PORTBbits 003FCB                                   _PORTCbits 003FCC  
                         _gConProbeResponse 00B4                     _IOCBF2_InterruptHandler 00DD  
              __end_of_INTERRUPT_Initialize 09A4                              __end_of___wmul 08F4  
                          _sy_lowMultiplier 00C3                               __pidataCOMRAM 094E  
                    ?_OSCILLATOR_Initialize 004C                         start_initialization 0576  
                               ?_scansticks 004C                                  ivt0x8_base 0008  
                    _tmphigh@joysticks$F590 009E                      _tmphigh@joysticks$F834 0094  
                          ??_PMD_Initialize 0052                                   _gInPacket 0060  
                                  ??___wmul 0056                            _cx_lowMultiplier 00BF  
                             _gInBitCounter 004A                                 __pdataBANK0 00AA  
                               __pdataBANK1 013C                                   _gInStatus 002B  
                         ??_SMT1_Initialize 0052                               ??_bytecleanup 004C  
                               __pbssCOMRAM 0001                               __pcstackBANK0 00D7  
               ?_IOCBF2_SetInterruptHandler 0052                                   __pnvBANK0 00DD  
                                 _clearRead 0028                      _PIN_MANAGER_Initialize 0616  
                             _gConByteCount 0031                                 _bit_counter 0026  
                                 _cx_center 00D3                                   _cy_center 00CD  
                                  ?_slinjim 00D7                        _INTERRUPT_Initialize 099A  
                            ___wmul@product 0056                                    _IPR1bits 003981  
                                  _PIE1bits 003991                                    _PIR1bits 0039A1  
                                  _SMT1CON0 003F1E                                    _SMT1CON1 003F1F  
                                  _SMT1CPWL 003F18                                    _SMT1STAT 003F20  
                              ??_bitgrabber 004C                                   _testcount 0022  
                                 _testpulse 001E                           _sy_highMultiplier 00C5  
                                 _tmpcenter 00A4                                  _ADCON0bits 003EF8  
                                 _sx_center 0043                           ___wmul@multiplier 0052  
                                 _sy_center 003D                                _SMT1CON1bits 003F1F  
                               _INTCON0bits 003FD2                                   copy_data0 058A  
                                 copy_data1 05AC                                   copy_data2 05CE  
                     ?_INTERRUPT_Initialize 004C                _initiatedRead@joysticks$F840 0020  
              _initiatedRead@joysticks$F596 0024                                    __Hrparam 0000  
                             _gInPulseWidth 002E                                    __Lrparam 0000  
                             ?_checkbuttons 004C                                _gInBitBuffer 0100  
                   ??_OSCILLATOR_Initialize 0052                                    _adc_read 000B  
                               _bytecleanup 07DC                          _gConOriginResponse 00AA  
                                  __pivt0x8 0008                                    __ptext10 0968  
                                  __ptext11 099A                                    __ptext12 06EC  
                                  __ptext13 0686                                ??_scansticks 00DB  
                              _gInPacketIdx 002C                                    _bytepush 001E  
                           _SMT1_Initialize 0872                           slinjim@conversion 0058  
                            ??_checkbuttons 0052                                    _testHigh 001A  
                                  isa$xinst 000000                                    _stickIdx 002A  
                         _cx_highMultiplier 00C1                                    _tmphighm 00A2  
                          _cy_lowMultiplier 00BB                          __end_of_scansticks 0482  
                    ??_INTERRUPT_Initialize 0052                            _controller_phase 0027  
                                  intlevel2 0000                     ?_PIN_MANAGER_Initialize 004C  
                   _tmplowm@joysticks$F1409 0082                     _tmplowm@joysticks$F1635 0001  
                   _tmplowm@joysticks$F1476 0078                     _tmplowm@joysticks$F1847 006E  
                   _tmplowm@joysticks$F1945 0064                                  _SMT1SIGPPS 003AD2  
    __end_of_INTERRUPT_InterruptManagerHigh 06EC              _INTERRUPT_InterruptManagerHigh 0686  
                             _commandreader 0748              _IOCBF2_DefaultInterruptHandler 000000  
                    _tmplowm@joysticks$F594 0096                      _tmplowm@joysticks$F838 008C  
                         slinjim@multiplier 00D9                     __end_of_SMT1_Initialize 089E  
            __end_of_PIN_MANAGER_Initialize 0686                           ??_ADCC_Initialize 0052  
                    _tmplow@joysticks$F1406 0088                      _tmplow@joysticks$F1632 0007  
                    _tmplow@joysticks$F1473 007E                      _tmplow@joysticks$F1844 0074  
                    _tmplow@joysticks$F1942 006A                       _tmplow@joysticks$F591 009C  
                     _tmplow@joysticks$F835 0092  
